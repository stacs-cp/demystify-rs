{
  "version": 3,
  "sources": ["../node_modules/@svgdotjs/svg.js/src/utils/methods.js", "../node_modules/@svgdotjs/svg.js/src/utils/utils.js", "../node_modules/@svgdotjs/svg.js/src/modules/core/namespaces.js", "../node_modules/@svgdotjs/svg.js/src/utils/window.js", "../node_modules/@svgdotjs/svg.js/src/types/Base.js", "../node_modules/@svgdotjs/svg.js/src/utils/adopter.js", "../node_modules/@svgdotjs/svg.js/src/modules/optional/arrange.js", "../node_modules/@svgdotjs/svg.js/src/modules/core/regex.js", "../node_modules/@svgdotjs/svg.js/src/modules/optional/class.js", "../node_modules/@svgdotjs/svg.js/src/modules/optional/css.js", "../node_modules/@svgdotjs/svg.js/src/modules/optional/data.js", "../node_modules/@svgdotjs/svg.js/src/modules/optional/memory.js", "../node_modules/@svgdotjs/svg.js/src/types/Color.js", "../node_modules/@svgdotjs/svg.js/src/types/Point.js", "../node_modules/@svgdotjs/svg.js/src/types/Matrix.js", "../node_modules/@svgdotjs/svg.js/src/modules/core/parser.js", "../node_modules/@svgdotjs/svg.js/src/types/Box.js", "../node_modules/@svgdotjs/svg.js/src/types/List.js", "../node_modules/@svgdotjs/svg.js/src/modules/core/selector.js", "../node_modules/@svgdotjs/svg.js/src/modules/core/event.js", "../node_modules/@svgdotjs/svg.js/src/types/EventTarget.js", "../node_modules/@svgdotjs/svg.js/src/modules/core/defaults.js", "../node_modules/@svgdotjs/svg.js/src/types/SVGArray.js", "../node_modules/@svgdotjs/svg.js/src/types/SVGNumber.js", "../node_modules/@svgdotjs/svg.js/src/modules/core/attr.js", "../node_modules/@svgdotjs/svg.js/src/elements/Dom.js", "../node_modules/@svgdotjs/svg.js/src/elements/Element.js", "../node_modules/@svgdotjs/svg.js/src/modules/optional/sugar.js", "../node_modules/@svgdotjs/svg.js/src/modules/optional/transform.js", "../node_modules/@svgdotjs/svg.js/src/elements/Container.js", "../node_modules/@svgdotjs/svg.js/src/elements/Defs.js", "../node_modules/@svgdotjs/svg.js/src/elements/Shape.js", "../node_modules/@svgdotjs/svg.js/src/modules/core/circled.js", "../node_modules/@svgdotjs/svg.js/src/elements/Ellipse.js", "../node_modules/@svgdotjs/svg.js/src/elements/Fragment.js", "../node_modules/@svgdotjs/svg.js/src/modules/core/gradiented.js", "../node_modules/@svgdotjs/svg.js/src/elements/Gradient.js", "../node_modules/@svgdotjs/svg.js/src/elements/Pattern.js", "../node_modules/@svgdotjs/svg.js/src/elements/Image.js", "../node_modules/@svgdotjs/svg.js/src/types/PointArray.js", "../node_modules/@svgdotjs/svg.js/src/modules/core/pointed.js", "../node_modules/@svgdotjs/svg.js/src/elements/Line.js", "../node_modules/@svgdotjs/svg.js/src/elements/Marker.js", "../node_modules/@svgdotjs/svg.js/src/animation/Controller.js", "../node_modules/@svgdotjs/svg.js/src/utils/pathParser.js", "../node_modules/@svgdotjs/svg.js/src/types/PathArray.js", "../node_modules/@svgdotjs/svg.js/src/animation/Morphable.js", "../node_modules/@svgdotjs/svg.js/src/elements/Path.js", "../node_modules/@svgdotjs/svg.js/src/modules/core/poly.js", "../node_modules/@svgdotjs/svg.js/src/elements/Polygon.js", "../node_modules/@svgdotjs/svg.js/src/elements/Polyline.js", "../node_modules/@svgdotjs/svg.js/src/elements/Rect.js", "../node_modules/@svgdotjs/svg.js/src/animation/Queue.js", "../node_modules/@svgdotjs/svg.js/src/animation/Animator.js", "../node_modules/@svgdotjs/svg.js/src/animation/Timeline.js", "../node_modules/@svgdotjs/svg.js/src/animation/Runner.js", "../node_modules/@svgdotjs/svg.js/src/elements/Svg.js", "../node_modules/@svgdotjs/svg.js/src/elements/Symbol.js", "../node_modules/@svgdotjs/svg.js/src/modules/core/textable.js", "../node_modules/@svgdotjs/svg.js/src/elements/Text.js", "../node_modules/@svgdotjs/svg.js/src/elements/Tspan.js", "../node_modules/@svgdotjs/svg.js/src/elements/Circle.js", "../node_modules/@svgdotjs/svg.js/src/elements/ClipPath.js", "../node_modules/@svgdotjs/svg.js/src/elements/ForeignObject.js", "../node_modules/@svgdotjs/svg.js/src/modules/core/containerGeometry.js", "../node_modules/@svgdotjs/svg.js/src/elements/G.js", "../node_modules/@svgdotjs/svg.js/src/elements/A.js", "../node_modules/@svgdotjs/svg.js/src/elements/Mask.js", "../node_modules/@svgdotjs/svg.js/src/elements/Stop.js", "../node_modules/@svgdotjs/svg.js/src/elements/Style.js", "../node_modules/@svgdotjs/svg.js/src/elements/TextPath.js", "../node_modules/@svgdotjs/svg.js/src/elements/Use.js", "../node_modules/@svgdotjs/svg.js/src/main.js", "../puzzle.tsx"],
  "sourcesContent": ["const methods = {}\nconst names = []\n\nexport function registerMethods (name, m) {\n  if (Array.isArray(name)) {\n    for (const _name of name) {\n      registerMethods(_name, m)\n    }\n    return\n  }\n\n  if (typeof name === 'object') {\n    for (const _name in name) {\n      registerMethods(_name, name[_name])\n    }\n    return\n  }\n\n  addMethodNames(Object.getOwnPropertyNames(m))\n  methods[name] = Object.assign(methods[name] || {}, m)\n}\n\nexport function getMethodsFor (name) {\n  return methods[name] || {}\n}\n\nexport function getMethodNames () {\n  return [ ...new Set(names) ]\n}\n\nexport function addMethodNames (_names) {\n  names.push(..._names)\n}\n", "// Map function\nexport function map (array, block) {\n  let i\n  const il = array.length\n  const result = []\n\n  for (i = 0; i < il; i++) {\n    result.push(block(array[i]))\n  }\n\n  return result\n}\n\n// Filter function\nexport function filter (array, block) {\n  let i\n  const il = array.length\n  const result = []\n\n  for (i = 0; i < il; i++) {\n    if (block(array[i])) {\n      result.push(array[i])\n    }\n  }\n\n  return result\n}\n\n// Degrees to radians\nexport function radians (d) {\n  return d % 360 * Math.PI / 180\n}\n\n// Radians to degrees\nexport function degrees (r) {\n  return r * 180 / Math.PI % 360\n}\n\n// Convert dash-separated-string to camelCase\nexport function camelCase (s) {\n  return s.toLowerCase().replace(/-(.)/g, function (m, g) {\n    return g.toUpperCase()\n  })\n}\n\n// Convert camel cased string to dash separated\nexport function unCamelCase (s) {\n  return s.replace(/([A-Z])/g, function (m, g) {\n    return '-' + g.toLowerCase()\n  })\n}\n\n// Capitalize first letter of a string\nexport function capitalize (s) {\n  return s.charAt(0).toUpperCase() + s.slice(1)\n}\n\n// Calculate proportional width and height values when necessary\nexport function proportionalSize (element, width, height, box) {\n  if (width == null || height == null) {\n    box = box || element.bbox()\n\n    if (width == null) {\n      width = box.width / box.height * height\n    } else if (height == null) {\n      height = box.height / box.width * width\n    }\n  }\n\n  return {\n    width: width,\n    height: height\n  }\n}\n\n/**\n * This function adds support for string origins.\n * It searches for an origin in o.origin o.ox and o.originX.\n * This way, origin: {x: 'center', y: 50} can be passed as well as ox: 'center', oy: 50\n**/\nexport function getOrigin (o, element) {\n  const origin = o.origin\n  // First check if origin is in ox or originX\n  let ox = o.ox != null\n    ? o.ox\n    : o.originX != null\n      ? o.originX\n      : 'center'\n  let oy = o.oy != null\n    ? o.oy\n    : o.originY != null\n      ? o.originY\n      : 'center'\n\n  // Then check if origin was used and overwrite in that case\n  if (origin != null) {\n    [ ox, oy ] = Array.isArray(origin)\n      ? origin\n      : typeof origin === 'object'\n        ? [ origin.x, origin.y ]\n        : [ origin, origin ]\n  }\n\n  // Make sure to only call bbox when actually needed\n  const condX = typeof ox === 'string'\n  const condY = typeof oy === 'string'\n  if (condX || condY) {\n    const { height, width, x, y } = element.bbox()\n\n    // And only overwrite if string was passed for this specific axis\n    if (condX) {\n      ox = ox.includes('left')\n        ? x\n        : ox.includes('right')\n          ? x + width\n          : x + width / 2\n    }\n\n    if (condY) {\n      oy = oy.includes('top')\n        ? y\n        : oy.includes('bottom')\n          ? y + height\n          : y + height / 2\n    }\n  }\n\n  // Return the origin as it is if it wasn't a string\n  return [ ox, oy ]\n}\n", "// Default namespaces\nexport const svg = 'http://www.w3.org/2000/svg'\nexport const html = 'http://www.w3.org/1999/xhtml'\nexport const xmlns = 'http://www.w3.org/2000/xmlns/'\nexport const xlink = 'http://www.w3.org/1999/xlink'\nexport const svgjs = 'http://svgjs.dev/svgjs'\n", "export const globals = {\n  window: typeof window === 'undefined' ? null : window,\n  document: typeof document === 'undefined' ? null : document\n}\n\nexport function registerWindow (win = null, doc = null) {\n  globals.window = win\n  globals.document = doc\n}\n\nconst save = {}\n\nexport function saveWindow () {\n  save.window = globals.window\n  save.document = globals.document\n}\n\nexport function restoreWindow () {\n  globals.window = save.window\n  globals.document = save.document\n}\n\nexport function withWindow (win, fn) {\n  saveWindow()\n  registerWindow(win, win.document)\n  fn(win, win.document)\n  restoreWindow()\n}\n\nexport function getWindow () {\n  return globals.window\n}\n", "export default class Base {\n  // constructor (node/*, {extensions = []} */) {\n  //   // this.tags = []\n  //   //\n  //   // for (let extension of extensions) {\n  //   //   extension.setup.call(this, node)\n  //   //   this.tags.push(extension.name)\n  //   // }\n  // }\n}\n", "import { addMethodNames } from './methods.js'\nimport { capitalize } from './utils.js'\nimport { svg } from '../modules/core/namespaces.js'\nimport { globals } from '../utils/window.js'\nimport Base from '../types/Base.js'\n\nconst elements = {}\nexport const root = '___SYMBOL___ROOT___'\n\n// Method for element creation\nexport function create (name, ns = svg) {\n  // create element\n  return globals.document.createElementNS(ns, name)\n}\n\nexport function makeInstance (element, isHTML = false) {\n  if (element instanceof Base) return element\n\n  if (typeof element === 'object') {\n    return adopter(element)\n  }\n\n  if (element == null) {\n    return new elements[root]()\n  }\n\n  if (typeof element === 'string' && element.charAt(0) !== '<') {\n    return adopter(globals.document.querySelector(element))\n  }\n\n  // Make sure, that HTML elements are created with the correct namespace\n  const wrapper = isHTML ? globals.document.createElement('div') : create('svg')\n  wrapper.innerHTML = element\n\n  // We can use firstChild here because we know,\n  // that the first char is < and thus an element\n  element = adopter(wrapper.firstChild)\n\n  // make sure, that element doesn't have its wrapper attached\n  wrapper.removeChild(wrapper.firstChild)\n  return element\n}\n\nexport function nodeOrNew (name, node) {\n  return (node && node.ownerDocument && node instanceof node.ownerDocument.defaultView.Node) ? node : create(name)\n}\n\n// Adopt existing svg elements\nexport function adopt (node) {\n  // check for presence of node\n  if (!node) return null\n\n  // make sure a node isn't already adopted\n  if (node.instance instanceof Base) return node.instance\n\n  if (node.nodeName === '#document-fragment') {\n    return new elements.Fragment(node)\n  }\n\n  // initialize variables\n  let className = capitalize(node.nodeName || 'Dom')\n\n  // Make sure that gradients are adopted correctly\n  if (className === 'LinearGradient' || className === 'RadialGradient') {\n    className = 'Gradient'\n\n  // Fallback to Dom if element is not known\n  } else if (!elements[className]) {\n    className = 'Dom'\n  }\n\n  return new elements[className](node)\n}\n\nlet adopter = adopt\n\nexport function mockAdopt (mock = adopt) {\n  adopter = mock\n}\n\nexport function register (element, name = element.name, asRoot = false) {\n  elements[name] = element\n  if (asRoot) elements[root] = element\n\n  addMethodNames(Object.getOwnPropertyNames(element.prototype))\n\n  return element\n}\n\nexport function getClass (name) {\n  return elements[name]\n}\n\n// Element id sequence\nlet did = 1000\n\n// Get next named element id\nexport function eid (name) {\n  return 'Svgjs' + capitalize(name) + (did++)\n}\n\n// Deep new id assignment\nexport function assignNewId (node) {\n  // do the same for SVG child nodes as well\n  for (let i = node.children.length - 1; i >= 0; i--) {\n    assignNewId(node.children[i])\n  }\n\n  if (node.id) {\n    node.id = eid(node.nodeName)\n    return node\n  }\n\n  return node\n}\n\n// Method for extending objects\nexport function extend (modules, methods) {\n  let key, i\n\n  modules = Array.isArray(modules) ? modules : [ modules ]\n\n  for (i = modules.length - 1; i >= 0; i--) {\n    for (key in methods) {\n      modules[i].prototype[key] = methods[key]\n    }\n  }\n}\n\nexport function wrapWithAttrCheck (fn) {\n  return function (...args) {\n    const o = args[args.length - 1]\n\n    if (o && o.constructor === Object && !(o instanceof Array)) {\n      return fn.apply(this, args.slice(0, -1)).attr(o)\n    } else {\n      return fn.apply(this, args)\n    }\n  }\n}\n", "import { makeInstance } from '../../utils/adopter.js'\nimport { registerMethods } from '../../utils/methods.js'\n\n// Get all siblings, including myself\nexport function siblings () {\n  return this.parent().children()\n}\n\n// Get the current position siblings\nexport function position () {\n  return this.parent().index(this)\n}\n\n// Get the next element (will return null if there is none)\nexport function next () {\n  return this.siblings()[this.position() + 1]\n}\n\n// Get the next element (will return null if there is none)\nexport function prev () {\n  return this.siblings()[this.position() - 1]\n}\n\n// Send given element one step forward\nexport function forward () {\n  const i = this.position()\n  const p = this.parent()\n\n  // move node one step forward\n  p.add(this.remove(), i + 1)\n\n  return this\n}\n\n// Send given element one step backward\nexport function backward () {\n  const i = this.position()\n  const p = this.parent()\n\n  p.add(this.remove(), i ? i - 1 : 0)\n\n  return this\n}\n\n// Send given element all the way to the front\nexport function front () {\n  const p = this.parent()\n\n  // Move node forward\n  p.add(this.remove())\n\n  return this\n}\n\n// Send given element all the way to the back\nexport function back () {\n  const p = this.parent()\n\n  // Move node back\n  p.add(this.remove(), 0)\n\n  return this\n}\n\n// Inserts a given element before the targeted element\nexport function before (element) {\n  element = makeInstance(element)\n  element.remove()\n\n  const i = this.position()\n\n  this.parent().add(element, i)\n\n  return this\n}\n\n// Inserts a given element after the targeted element\nexport function after (element) {\n  element = makeInstance(element)\n  element.remove()\n\n  const i = this.position()\n\n  this.parent().add(element, i + 1)\n\n  return this\n}\n\nexport function insertBefore (element) {\n  element = makeInstance(element)\n  element.before(this)\n  return this\n}\n\nexport function insertAfter (element) {\n  element = makeInstance(element)\n  element.after(this)\n  return this\n}\n\nregisterMethods('Dom', {\n  siblings,\n  position,\n  next,\n  prev,\n  forward,\n  backward,\n  front,\n  back,\n  before,\n  after,\n  insertBefore,\n  insertAfter\n})\n", "// Parse unit value\nexport const numberAndUnit = /^([+-]?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?)([a-z%]*)$/i\n\n// Parse hex value\nexport const hex = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i\n\n// Parse rgb value\nexport const rgb = /rgb\\((\\d+),(\\d+),(\\d+)\\)/\n\n// Parse reference id\nexport const reference = /(#[a-z_][a-z0-9\\-_]*)/i\n\n// splits a transformation chain\nexport const transforms = /\\)\\s*,?\\s*/\n\n// Whitespace\nexport const whitespace = /\\s/g\n\n// Test hex value\nexport const isHex = /^#[a-f0-9]{3}$|^#[a-f0-9]{6}$/i\n\n// Test rgb value\nexport const isRgb = /^rgb\\(/\n\n// Test for blank string\nexport const isBlank = /^(\\s+)?$/\n\n// Test for numeric string\nexport const isNumber = /^[+-]?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i\n\n// Test for image url\nexport const isImage = /\\.(jpg|jpeg|png|gif|svg)(\\?[^=]+.*)?/i\n\n// split at whitespace and comma\nexport const delimiter = /[\\s,]+/\n\n// Test for path letter\nexport const isPathLetter = /[MLHVCSQTAZ]/i\n", "import { delimiter } from '../core/regex.js'\nimport { registerMethods } from '../../utils/methods.js'\n\n// Return array of classes on the node\nexport function classes () {\n  const attr = this.attr('class')\n  return attr == null ? [] : attr.trim().split(delimiter)\n}\n\n// Return true if class exists on the node, false otherwise\nexport function hasClass (name) {\n  return this.classes().indexOf(name) !== -1\n}\n\n// Add class to the node\nexport function addClass (name) {\n  if (!this.hasClass(name)) {\n    const array = this.classes()\n    array.push(name)\n    this.attr('class', array.join(' '))\n  }\n\n  return this\n}\n\n// Remove class from the node\nexport function removeClass (name) {\n  if (this.hasClass(name)) {\n    this.attr('class', this.classes().filter(function (c) {\n      return c !== name\n    }).join(' '))\n  }\n\n  return this\n}\n\n// Toggle the presence of a class on the node\nexport function toggleClass (name) {\n  return this.hasClass(name) ? this.removeClass(name) : this.addClass(name)\n}\n\nregisterMethods('Dom', {\n  classes, hasClass, addClass, removeClass, toggleClass\n})\n", "import { camelCase } from '../../utils/utils.js'\nimport { isBlank } from '../core/regex.js'\nimport { registerMethods } from '../../utils/methods.js'\n\n// Dynamic style generator\nexport function css (style, val) {\n  const ret = {}\n  if (arguments.length === 0) {\n    // get full style as object\n    this.node.style.cssText.split(/\\s*;\\s*/)\n      .filter(function (el) {\n        return !!el.length\n      })\n      .forEach(function (el) {\n        const t = el.split(/\\s*:\\s*/)\n        ret[t[0]] = t[1]\n      })\n    return ret\n  }\n\n  if (arguments.length < 2) {\n    // get style properties as array\n    if (Array.isArray(style)) {\n      for (const name of style) {\n        const cased = camelCase(name)\n        ret[name] = this.node.style[cased]\n      }\n      return ret\n    }\n\n    // get style for property\n    if (typeof style === 'string') {\n      return this.node.style[camelCase(style)]\n    }\n\n    // set styles in object\n    if (typeof style === 'object') {\n      for (const name in style) {\n        // set empty string if null/undefined/'' was given\n        this.node.style[camelCase(name)]\n          = (style[name] == null || isBlank.test(style[name])) ? '' : style[name]\n      }\n    }\n  }\n\n  // set style for property\n  if (arguments.length === 2) {\n    this.node.style[camelCase(style)]\n      = (val == null || isBlank.test(val)) ? '' : val\n  }\n\n  return this\n}\n\n// Show element\nexport function show () {\n  return this.css('display', '')\n}\n\n// Hide element\nexport function hide () {\n  return this.css('display', 'none')\n}\n\n// Is element visible?\nexport function visible () {\n  return this.css('display') !== 'none'\n}\n\nregisterMethods('Dom', {\n  css, show, hide, visible\n})\n", "import { registerMethods } from '../../utils/methods.js'\nimport { filter, map } from '../../utils/utils.js'\n\n// Store data values on svg nodes\nexport function data (a, v, r) {\n  if (a == null) {\n    // get an object of attributes\n    return this.data(map(filter(this.node.attributes, (el) => el.nodeName.indexOf('data-') === 0), (el) => el.nodeName.slice(5)))\n  } else if (a instanceof Array) {\n    const data = {}\n    for (const key of a) {\n      data[key] = this.data(key)\n    }\n    return data\n  } else if (typeof a === 'object') {\n    for (v in a) {\n      this.data(v, a[v])\n    }\n  } else if (arguments.length < 2) {\n    try {\n      return JSON.parse(this.attr('data-' + a))\n    } catch (e) {\n      return this.attr('data-' + a)\n    }\n  } else {\n    this.attr('data-' + a,\n      v === null\n        ? null\n        : r === true || typeof v === 'string' || typeof v === 'number'\n          ? v\n          : JSON.stringify(v)\n    )\n  }\n\n  return this\n}\n\nregisterMethods('Dom', { data })\n", "import { registerMethods } from '../../utils/methods.js'\n\n// Remember arbitrary data\nexport function remember (k, v) {\n  // remember every item in an object individually\n  if (typeof arguments[0] === 'object') {\n    for (const key in k) {\n      this.remember(key, k[key])\n    }\n  } else if (arguments.length === 1) {\n    // retrieve memory\n    return this.memory()[k]\n  } else {\n    // store memory\n    this.memory()[k] = v\n  }\n\n  return this\n}\n\n// Erase a given memory\nexport function forget () {\n  if (arguments.length === 0) {\n    this._memory = {}\n  } else {\n    for (let i = arguments.length - 1; i >= 0; i--) {\n      delete this.memory()[arguments[i]]\n    }\n  }\n  return this\n}\n\n// This triggers creation of a new hidden class which is not performant\n// However, this function is not rarely used so it will not happen frequently\n// Return local memory object\nexport function memory () {\n  return (this._memory = this._memory || {})\n}\n\nregisterMethods('Dom', { remember, forget, memory })\n", "\nimport { hex, isHex, isRgb, rgb, whitespace } from '../modules/core/regex.js'\n\nfunction sixDigitHex (hex) {\n  return hex.length === 4\n    ? [ '#',\n      hex.substring(1, 2), hex.substring(1, 2),\n      hex.substring(2, 3), hex.substring(2, 3),\n      hex.substring(3, 4), hex.substring(3, 4)\n    ].join('')\n    : hex\n}\n\nfunction componentHex (component) {\n  const integer = Math.round(component)\n  const bounded = Math.max(0, Math.min(255, integer))\n  const hex = bounded.toString(16)\n  return hex.length === 1 ? '0' + hex : hex\n}\n\nfunction is (object, space) {\n  for (let i = space.length; i--;) {\n    if (object[space[i]] == null) {\n      return false\n    }\n  }\n  return true\n}\n\nfunction getParameters (a, b) {\n  const params = is(a, 'rgb')\n    ? { _a: a.r, _b: a.g, _c: a.b, _d: 0, space: 'rgb' }\n    : is(a, 'xyz')\n      ? { _a: a.x, _b: a.y, _c: a.z, _d: 0, space: 'xyz' }\n      : is(a, 'hsl')\n        ? { _a: a.h, _b: a.s, _c: a.l, _d: 0, space: 'hsl' }\n        : is(a, 'lab')\n          ? { _a: a.l, _b: a.a, _c: a.b, _d: 0, space: 'lab' }\n          : is(a, 'lch')\n            ? { _a: a.l, _b: a.c, _c: a.h, _d: 0, space: 'lch' }\n            : is(a, 'cmyk')\n              ? { _a: a.c, _b: a.m, _c: a.y, _d: a.k, space: 'cmyk' }\n              : { _a: 0, _b: 0, _c: 0, space: 'rgb' }\n\n  params.space = b || params.space\n  return params\n}\n\nfunction cieSpace (space) {\n  if (space === 'lab' || space === 'xyz' || space === 'lch') {\n    return true\n  } else {\n    return false\n  }\n}\n\nfunction hueToRgb (p, q, t) {\n  if (t < 0) t += 1\n  if (t > 1) t -= 1\n  if (t < 1 / 6) return p + (q - p) * 6 * t\n  if (t < 1 / 2) return q\n  if (t < 2 / 3) return p + (q - p) * (2 / 3 - t) * 6\n  return p\n}\n\nexport default class Color {\n  constructor (...inputs) {\n    this.init(...inputs)\n  }\n\n  // Test if given value is a color\n  static isColor (color) {\n    return color && (\n      color instanceof Color\n      || this.isRgb(color)\n      || this.test(color)\n    )\n  }\n\n  // Test if given value is an rgb object\n  static isRgb (color) {\n    return color && typeof color.r === 'number'\n      && typeof color.g === 'number'\n      && typeof color.b === 'number'\n  }\n\n  /*\n  Generating random colors\n  */\n  static random (mode = 'vibrant', t, u) {\n\n    // Get the math modules\n    const { random, round, sin, PI: pi } = Math\n\n    // Run the correct generator\n    if (mode === 'vibrant') {\n\n      const l = (81 - 57) * random() + 57\n      const c = (83 - 45) * random() + 45\n      const h = 360 * random()\n      const color = new Color(l, c, h, 'lch')\n      return color\n\n    } else if (mode === 'sine') {\n\n      t = t == null ? random() : t\n      const r = round(80 * sin(2 * pi * t / 0.5 + 0.01) + 150)\n      const g = round(50 * sin(2 * pi * t / 0.5 + 4.6) + 200)\n      const b = round(100 * sin(2 * pi * t / 0.5 + 2.3) + 150)\n      const color = new Color(r, g, b)\n      return color\n\n    } else if (mode === 'pastel') {\n\n      const l = (94 - 86) * random() + 86\n      const c = (26 - 9) * random() + 9\n      const h = 360 * random()\n      const color = new Color(l, c, h, 'lch')\n      return color\n\n    } else if (mode === 'dark') {\n\n      const l = 10 + 10 * random()\n      const c = (125 - 75) * random() + 86\n      const h = 360 * random()\n      const color = new Color(l, c, h, 'lch')\n      return color\n\n    } else if (mode === 'rgb') {\n\n      const r = 255 * random()\n      const g = 255 * random()\n      const b = 255 * random()\n      const color = new Color(r, g, b)\n      return color\n\n    } else if (mode === 'lab') {\n\n      const l = 100 * random()\n      const a = 256 * random() - 128\n      const b = 256 * random() - 128\n      const color = new Color(l, a, b, 'lab')\n      return color\n\n    } else if (mode === 'grey') {\n\n      const grey = 255 * random()\n      const color = new Color(grey, grey, grey)\n      return color\n\n    } else {\n\n      throw new Error('Unsupported random color mode')\n\n    }\n  }\n\n  // Test if given value is a color string\n  static test (color) {\n    return (typeof color === 'string')\n      && (isHex.test(color) || isRgb.test(color))\n  }\n\n  cmyk () {\n\n    // Get the rgb values for the current color\n    const { _a, _b, _c } = this.rgb()\n    const [ r, g, b ] = [ _a, _b, _c ].map(v => v / 255)\n\n    // Get the cmyk values in an unbounded format\n    const k = Math.min(1 - r, 1 - g, 1 - b)\n\n    if (k === 1) {\n      // Catch the black case\n      return new Color(0, 0, 0, 1, 'cmyk')\n    }\n\n    const c = (1 - r - k) / (1 - k)\n    const m = (1 - g - k) / (1 - k)\n    const y = (1 - b - k) / (1 - k)\n\n    // Construct the new color\n    const color = new Color(c, m, y, k, 'cmyk')\n    return color\n  }\n\n  hsl () {\n\n    // Get the rgb values\n    const { _a, _b, _c } = this.rgb()\n    const [ r, g, b ] = [ _a, _b, _c ].map(v => v / 255)\n\n    // Find the maximum and minimum values to get the lightness\n    const max = Math.max(r, g, b)\n    const min = Math.min(r, g, b)\n    const l = (max + min) / 2\n\n    // If the r, g, v values are identical then we are grey\n    const isGrey = max === min\n\n    // Calculate the hue and saturation\n    const delta = max - min\n    const s = isGrey\n      ? 0\n      : l > 0.5\n        ? delta / (2 - max - min)\n        : delta / (max + min)\n    const h = isGrey\n      ? 0\n      : max === r\n        ? ((g - b) / delta + (g < b ? 6 : 0)) / 6\n        : max === g\n          ? ((b - r) / delta + 2) / 6\n          : max === b\n            ? ((r - g) / delta + 4) / 6\n            : 0\n\n    // Construct and return the new color\n    const color = new Color(360 * h, 100 * s, 100 * l, 'hsl')\n    return color\n  }\n\n  init (a = 0, b = 0, c = 0, d = 0, space = 'rgb') {\n    // This catches the case when a falsy value is passed like ''\n    a = !a ? 0 : a\n\n    // Reset all values in case the init function is rerun with new color space\n    if (this.space) {\n      for (const component in this.space) {\n        delete this[this.space[component]]\n      }\n    }\n\n    if (typeof a === 'number') {\n      // Allow for the case that we don't need d...\n      space = typeof d === 'string' ? d : space\n      d = typeof d === 'string' ? 0 : d\n\n      // Assign the values straight to the color\n      Object.assign(this, { _a: a, _b: b, _c: c, _d: d, space })\n    // If the user gave us an array, make the color from it\n    } else if (a instanceof Array) {\n      this.space = b || (typeof a[3] === 'string' ? a[3] : a[4]) || 'rgb'\n      Object.assign(this, { _a: a[0], _b: a[1], _c: a[2], _d: a[3] || 0 })\n    } else if (a instanceof Object) {\n      // Set the object up and assign its values directly\n      const values = getParameters(a, b)\n      Object.assign(this, values)\n    } else if (typeof a === 'string') {\n      if (isRgb.test(a)) {\n        const noWhitespace = a.replace(whitespace, '')\n        const [ _a, _b, _c ] = rgb.exec(noWhitespace)\n          .slice(1, 4).map(v => parseInt(v))\n        Object.assign(this, { _a, _b, _c, _d: 0, space: 'rgb' })\n      } else if (isHex.test(a)) {\n        const hexParse = v => parseInt(v, 16)\n        const [ , _a, _b, _c ] = hex.exec(sixDigitHex(a)).map(hexParse)\n        Object.assign(this, { _a, _b, _c, _d: 0, space: 'rgb' })\n      } else throw Error('Unsupported string format, can\\'t construct Color')\n    }\n\n    // Now add the components as a convenience\n    const { _a, _b, _c, _d } = this\n    const components = this.space === 'rgb'\n      ? { r: _a, g: _b, b: _c }\n      : this.space === 'xyz'\n        ? { x: _a, y: _b, z: _c }\n        : this.space === 'hsl'\n          ? { h: _a, s: _b, l: _c }\n          : this.space === 'lab'\n            ? { l: _a, a: _b, b: _c }\n            : this.space === 'lch'\n              ? { l: _a, c: _b, h: _c }\n              : this.space === 'cmyk'\n                ? { c: _a, m: _b, y: _c, k: _d }\n                : {}\n    Object.assign(this, components)\n  }\n\n  lab () {\n    // Get the xyz color\n    const { x, y, z } = this.xyz()\n\n    // Get the lab components\n    const l = (116 * y) - 16\n    const a = 500 * (x - y)\n    const b = 200 * (y - z)\n\n    // Construct and return a new color\n    const color = new Color(l, a, b, 'lab')\n    return color\n  }\n\n  lch () {\n\n    // Get the lab color directly\n    const { l, a, b } = this.lab()\n\n    // Get the chromaticity and the hue using polar coordinates\n    const c = Math.sqrt(a ** 2 + b ** 2)\n    let h = 180 * Math.atan2(b, a) / Math.PI\n    if (h < 0) {\n      h *= -1\n      h = 360 - h\n    }\n\n    // Make a new color and return it\n    const color = new Color(l, c, h, 'lch')\n    return color\n  }\n  /*\n  Conversion Methods\n  */\n\n  rgb () {\n    if (this.space === 'rgb') {\n      return this\n    } else if (cieSpace(this.space)) {\n      // Convert to the xyz color space\n      let { x, y, z } = this\n      if (this.space === 'lab' || this.space === 'lch') {\n        // Get the values in the lab space\n        let { l, a, b } = this\n        if (this.space === 'lch') {\n          const { c, h } = this\n          const dToR = Math.PI / 180\n          a = c * Math.cos(dToR * h)\n          b = c * Math.sin(dToR * h)\n        }\n\n        // Undo the nonlinear function\n        const yL = (l + 16) / 116\n        const xL = a / 500 + yL\n        const zL = yL - b / 200\n\n        // Get the xyz values\n        const ct = 16 / 116\n        const mx = 0.008856\n        const nm = 7.787\n        x = 0.95047 * ((xL ** 3 > mx) ? xL ** 3 : (xL - ct) / nm)\n        y = 1.00000 * ((yL ** 3 > mx) ? yL ** 3 : (yL - ct) / nm)\n        z = 1.08883 * ((zL ** 3 > mx) ? zL ** 3 : (zL - ct) / nm)\n      }\n\n      // Convert xyz to unbounded rgb values\n      const rU = x * 3.2406 + y * -1.5372 + z * -0.4986\n      const gU = x * -0.9689 + y * 1.8758 + z * 0.0415\n      const bU = x * 0.0557 + y * -0.2040 + z * 1.0570\n\n      // Convert the values to true rgb values\n      const pow = Math.pow\n      const bd = 0.0031308\n      const r = (rU > bd) ? (1.055 * pow(rU, 1 / 2.4) - 0.055) : 12.92 * rU\n      const g = (gU > bd) ? (1.055 * pow(gU, 1 / 2.4) - 0.055) : 12.92 * gU\n      const b = (bU > bd) ? (1.055 * pow(bU, 1 / 2.4) - 0.055) : 12.92 * bU\n\n      // Make and return the color\n      const color = new Color(255 * r, 255 * g, 255 * b)\n      return color\n    } else if (this.space === 'hsl') {\n      // https://bgrins.github.io/TinyColor/docs/tinycolor.html\n      // Get the current hsl values\n      let { h, s, l } = this\n      h /= 360\n      s /= 100\n      l /= 100\n\n      // If we are grey, then just make the color directly\n      if (s === 0) {\n        l *= 255\n        const color = new Color(l, l, l)\n        return color\n      }\n\n      // TODO I have no idea what this does :D If you figure it out, tell me!\n      const q = l < 0.5 ? l * (1 + s) : l + s - l * s\n      const p = 2 * l - q\n\n      // Get the rgb values\n      const r = 255 * hueToRgb(p, q, h + 1 / 3)\n      const g = 255 * hueToRgb(p, q, h)\n      const b = 255 * hueToRgb(p, q, h - 1 / 3)\n\n      // Make a new color\n      const color = new Color(r, g, b)\n      return color\n    } else if (this.space === 'cmyk') {\n      // https://gist.github.com/felipesabino/5066336\n      // Get the normalised cmyk values\n      const { c, m, y, k } = this\n\n      // Get the rgb values\n      const r = 255 * (1 - Math.min(1, c * (1 - k) + k))\n      const g = 255 * (1 - Math.min(1, m * (1 - k) + k))\n      const b = 255 * (1 - Math.min(1, y * (1 - k) + k))\n\n      // Form the color and return it\n      const color = new Color(r, g, b)\n      return color\n    } else {\n      return this\n    }\n  }\n\n  toArray () {\n    const { _a, _b, _c, _d, space } = this\n    return [ _a, _b, _c, _d, space ]\n  }\n\n  toHex () {\n    const [ r, g, b ] = this._clamped().map(componentHex)\n    return `#${r}${g}${b}`\n  }\n\n  toRgb () {\n    const [ rV, gV, bV ] = this._clamped()\n    const string = `rgb(${rV},${gV},${bV})`\n    return string\n  }\n\n  toString () {\n    return this.toHex()\n  }\n\n  xyz () {\n\n    // Normalise the red, green and blue values\n    const { _a: r255, _b: g255, _c: b255 } = this.rgb()\n    const [ r, g, b ] = [ r255, g255, b255 ].map(v => v / 255)\n\n    // Convert to the lab rgb space\n    const rL = (r > 0.04045) ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92\n    const gL = (g > 0.04045) ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92\n    const bL = (b > 0.04045) ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92\n\n    // Convert to the xyz color space without bounding the values\n    const xU = (rL * 0.4124 + gL * 0.3576 + bL * 0.1805) / 0.95047\n    const yU = (rL * 0.2126 + gL * 0.7152 + bL * 0.0722) / 1.00000\n    const zU = (rL * 0.0193 + gL * 0.1192 + bL * 0.9505) / 1.08883\n\n    // Get the proper xyz values by applying the bounding\n    const x = (xU > 0.008856) ? Math.pow(xU, 1 / 3) : (7.787 * xU) + 16 / 116\n    const y = (yU > 0.008856) ? Math.pow(yU, 1 / 3) : (7.787 * yU) + 16 / 116\n    const z = (zU > 0.008856) ? Math.pow(zU, 1 / 3) : (7.787 * zU) + 16 / 116\n\n    // Make and return the color\n    const color = new Color(x, y, z, 'xyz')\n    return color\n  }\n\n  /*\n  Input and Output methods\n  */\n\n  _clamped () {\n    const { _a, _b, _c } = this.rgb()\n    const { max, min, round } = Math\n    const format = v => max(0, min(round(v), 255))\n    return [ _a, _b, _c ].map(format)\n  }\n\n  /*\n  Constructing colors\n  */\n\n}\n", "import Matrix from './Matrix.js'\n\nexport default class Point {\n  // Initialize\n  constructor (...args) {\n    this.init(...args)\n  }\n\n  // Clone point\n  clone () {\n    return new Point(this)\n  }\n\n  init (x, y) {\n    const base = { x: 0, y: 0 }\n\n    // ensure source as object\n    const source = Array.isArray(x)\n      ? { x: x[0], y: x[1] }\n      : typeof x === 'object'\n        ? { x: x.x, y: x.y }\n        : { x: x, y: y }\n\n    // merge source\n    this.x = source.x == null ? base.x : source.x\n    this.y = source.y == null ? base.y : source.y\n\n    return this\n  }\n\n  toArray () {\n    return [ this.x, this.y ]\n  }\n\n  transform (m) {\n    return this.clone().transformO(m)\n  }\n\n  // Transform point with matrix\n  transformO (m) {\n    if (!Matrix.isMatrixLike(m)) {\n      m = new Matrix(m)\n    }\n\n    const { x, y } = this\n\n    // Perform the matrix multiplication\n    this.x = m.a * x + m.c * y + m.e\n    this.y = m.b * x + m.d * y + m.f\n\n    return this\n  }\n\n}\n\nexport function point (x, y) {\n  return new Point(x, y).transformO(this.screenCTM().inverseO())\n}\n", "import { delimiter } from '../modules/core/regex.js'\nimport { radians } from '../utils/utils.js'\nimport { register } from '../utils/adopter.js'\nimport Element from '../elements/Element.js'\nimport Point from './Point.js'\n\nfunction closeEnough (a, b, threshold) {\n  return Math.abs(b - a) < (threshold || 1e-6)\n}\n\nexport default class Matrix {\n  constructor (...args) {\n    this.init(...args)\n  }\n\n  static formatTransforms (o) {\n    // Get all of the parameters required to form the matrix\n    const flipBoth = o.flip === 'both' || o.flip === true\n    const flipX = o.flip && (flipBoth || o.flip === 'x') ? -1 : 1\n    const flipY = o.flip && (flipBoth || o.flip === 'y') ? -1 : 1\n    const skewX = o.skew && o.skew.length\n      ? o.skew[0]\n      : isFinite(o.skew)\n        ? o.skew\n        : isFinite(o.skewX)\n          ? o.skewX\n          : 0\n    const skewY = o.skew && o.skew.length\n      ? o.skew[1]\n      : isFinite(o.skew)\n        ? o.skew\n        : isFinite(o.skewY)\n          ? o.skewY\n          : 0\n    const scaleX = o.scale && o.scale.length\n      ? o.scale[0] * flipX\n      : isFinite(o.scale)\n        ? o.scale * flipX\n        : isFinite(o.scaleX)\n          ? o.scaleX * flipX\n          : flipX\n    const scaleY = o.scale && o.scale.length\n      ? o.scale[1] * flipY\n      : isFinite(o.scale)\n        ? o.scale * flipY\n        : isFinite(o.scaleY)\n          ? o.scaleY * flipY\n          : flipY\n    const shear = o.shear || 0\n    const theta = o.rotate || o.theta || 0\n    const origin = new Point(o.origin || o.around || o.ox || o.originX, o.oy || o.originY)\n    const ox = origin.x\n    const oy = origin.y\n    // We need Point to be invalid if nothing was passed because we cannot default to 0 here. That is why NaN\n    const position = new Point(o.position || o.px || o.positionX || NaN, o.py || o.positionY || NaN)\n    const px = position.x\n    const py = position.y\n    const translate = new Point(o.translate || o.tx || o.translateX, o.ty || o.translateY)\n    const tx = translate.x\n    const ty = translate.y\n    const relative = new Point(o.relative || o.rx || o.relativeX, o.ry || o.relativeY)\n    const rx = relative.x\n    const ry = relative.y\n\n    // Populate all of the values\n    return {\n      scaleX, scaleY, skewX, skewY, shear, theta, rx, ry, tx, ty, ox, oy, px, py\n    }\n  }\n\n  static fromArray (a) {\n    return { a: a[0], b: a[1], c: a[2], d: a[3], e: a[4], f: a[5] }\n  }\n\n  static isMatrixLike (o) {\n    return (\n      o.a != null\n      || o.b != null\n      || o.c != null\n      || o.d != null\n      || o.e != null\n      || o.f != null\n    )\n  }\n\n  // left matrix, right matrix, target matrix which is overwritten\n  static matrixMultiply (l, r, o) {\n    // Work out the product directly\n    const a = l.a * r.a + l.c * r.b\n    const b = l.b * r.a + l.d * r.b\n    const c = l.a * r.c + l.c * r.d\n    const d = l.b * r.c + l.d * r.d\n    const e = l.e + l.a * r.e + l.c * r.f\n    const f = l.f + l.b * r.e + l.d * r.f\n\n    // make sure to use local variables because l/r and o could be the same\n    o.a = a\n    o.b = b\n    o.c = c\n    o.d = d\n    o.e = e\n    o.f = f\n\n    return o\n  }\n\n  around (cx, cy, matrix) {\n    return this.clone().aroundO(cx, cy, matrix)\n  }\n\n  // Transform around a center point\n  aroundO (cx, cy, matrix) {\n    const dx = cx || 0\n    const dy = cy || 0\n    return this.translateO(-dx, -dy).lmultiplyO(matrix).translateO(dx, dy)\n  }\n\n  // Clones this matrix\n  clone () {\n    return new Matrix(this)\n  }\n\n  // Decomposes this matrix into its affine parameters\n  decompose (cx = 0, cy = 0) {\n    // Get the parameters from the matrix\n    const a = this.a\n    const b = this.b\n    const c = this.c\n    const d = this.d\n    const e = this.e\n    const f = this.f\n\n    // Figure out if the winding direction is clockwise or counterclockwise\n    const determinant = a * d - b * c\n    const ccw = determinant > 0 ? 1 : -1\n\n    // Since we only shear in x, we can use the x basis to get the x scale\n    // and the rotation of the resulting matrix\n    const sx = ccw * Math.sqrt(a * a + b * b)\n    const thetaRad = Math.atan2(ccw * b, ccw * a)\n    const theta = 180 / Math.PI * thetaRad\n    const ct = Math.cos(thetaRad)\n    const st = Math.sin(thetaRad)\n\n    // We can then solve the y basis vector simultaneously to get the other\n    // two affine parameters directly from these parameters\n    const lam = (a * c + b * d) / determinant\n    const sy = ((c * sx) / (lam * a - b)) || ((d * sx) / (lam * b + a))\n\n    // Use the translations\n    const tx = e - cx + cx * ct * sx + cy * (lam * ct * sx - st * sy)\n    const ty = f - cy + cx * st * sx + cy * (lam * st * sx + ct * sy)\n\n    // Construct the decomposition and return it\n    return {\n      // Return the affine parameters\n      scaleX: sx,\n      scaleY: sy,\n      shear: lam,\n      rotate: theta,\n      translateX: tx,\n      translateY: ty,\n      originX: cx,\n      originY: cy,\n\n      // Return the matrix parameters\n      a: this.a,\n      b: this.b,\n      c: this.c,\n      d: this.d,\n      e: this.e,\n      f: this.f\n    }\n  }\n\n  // Check if two matrices are equal\n  equals (other) {\n    if (other === this) return true\n    const comp = new Matrix(other)\n    return closeEnough(this.a, comp.a) && closeEnough(this.b, comp.b)\n      && closeEnough(this.c, comp.c) && closeEnough(this.d, comp.d)\n      && closeEnough(this.e, comp.e) && closeEnough(this.f, comp.f)\n  }\n\n  // Flip matrix on x or y, at a given offset\n  flip (axis, around) {\n    return this.clone().flipO(axis, around)\n  }\n\n  flipO (axis, around) {\n    return axis === 'x'\n      ? this.scaleO(-1, 1, around, 0)\n      : axis === 'y'\n        ? this.scaleO(1, -1, 0, around)\n        : this.scaleO(-1, -1, axis, around || axis) // Define an x, y flip point\n  }\n\n  // Initialize\n  init (source) {\n    const base = Matrix.fromArray([ 1, 0, 0, 1, 0, 0 ])\n\n    // ensure source as object\n    source = source instanceof Element\n      ? source.matrixify()\n      : typeof source === 'string'\n        ? Matrix.fromArray(source.split(delimiter).map(parseFloat))\n        : Array.isArray(source)\n          ? Matrix.fromArray(source)\n          : (typeof source === 'object' && Matrix.isMatrixLike(source))\n            ? source\n            : (typeof source === 'object')\n              ? new Matrix().transform(source)\n              : arguments.length === 6\n                ? Matrix.fromArray([].slice.call(arguments))\n                : base\n\n    // Merge the source matrix with the base matrix\n    this.a = source.a != null ? source.a : base.a\n    this.b = source.b != null ? source.b : base.b\n    this.c = source.c != null ? source.c : base.c\n    this.d = source.d != null ? source.d : base.d\n    this.e = source.e != null ? source.e : base.e\n    this.f = source.f != null ? source.f : base.f\n\n    return this\n  }\n\n  inverse () {\n    return this.clone().inverseO()\n  }\n\n  // Inverses matrix\n  inverseO () {\n    // Get the current parameters out of the matrix\n    const a = this.a\n    const b = this.b\n    const c = this.c\n    const d = this.d\n    const e = this.e\n    const f = this.f\n\n    // Invert the 2x2 matrix in the top left\n    const det = a * d - b * c\n    if (!det) throw new Error('Cannot invert ' + this)\n\n    // Calculate the top 2x2 matrix\n    const na = d / det\n    const nb = -b / det\n    const nc = -c / det\n    const nd = a / det\n\n    // Apply the inverted matrix to the top right\n    const ne = -(na * e + nc * f)\n    const nf = -(nb * e + nd * f)\n\n    // Construct the inverted matrix\n    this.a = na\n    this.b = nb\n    this.c = nc\n    this.d = nd\n    this.e = ne\n    this.f = nf\n\n    return this\n  }\n\n  lmultiply (matrix) {\n    return this.clone().lmultiplyO(matrix)\n  }\n\n  lmultiplyO (matrix) {\n    const r = this\n    const l = matrix instanceof Matrix\n      ? matrix\n      : new Matrix(matrix)\n\n    return Matrix.matrixMultiply(l, r, this)\n  }\n\n  // Left multiplies by the given matrix\n  multiply (matrix) {\n    return this.clone().multiplyO(matrix)\n  }\n\n  multiplyO (matrix) {\n    // Get the matrices\n    const l = this\n    const r = matrix instanceof Matrix\n      ? matrix\n      : new Matrix(matrix)\n\n    return Matrix.matrixMultiply(l, r, this)\n  }\n\n  // Rotate matrix\n  rotate (r, cx, cy) {\n    return this.clone().rotateO(r, cx, cy)\n  }\n\n  rotateO (r, cx = 0, cy = 0) {\n    // Convert degrees to radians\n    r = radians(r)\n\n    const cos = Math.cos(r)\n    const sin = Math.sin(r)\n\n    const { a, b, c, d, e, f } = this\n\n    this.a = a * cos - b * sin\n    this.b = b * cos + a * sin\n    this.c = c * cos - d * sin\n    this.d = d * cos + c * sin\n    this.e = e * cos - f * sin + cy * sin - cx * cos + cx\n    this.f = f * cos + e * sin - cx * sin - cy * cos + cy\n\n    return this\n  }\n\n  // Scale matrix\n  scale (x, y, cx, cy) {\n    return this.clone().scaleO(...arguments)\n  }\n\n  scaleO (x, y = x, cx = 0, cy = 0) {\n    // Support uniform scaling\n    if (arguments.length === 3) {\n      cy = cx\n      cx = y\n      y = x\n    }\n\n    const { a, b, c, d, e, f } = this\n\n    this.a = a * x\n    this.b = b * y\n    this.c = c * x\n    this.d = d * y\n    this.e = e * x - cx * x + cx\n    this.f = f * y - cy * y + cy\n\n    return this\n  }\n\n  // Shear matrix\n  shear (a, cx, cy) {\n    return this.clone().shearO(a, cx, cy)\n  }\n\n  shearO (lx, cx = 0, cy = 0) {\n    const { a, b, c, d, e, f } = this\n\n    this.a = a + b * lx\n    this.c = c + d * lx\n    this.e = e + f * lx - cy * lx\n\n    return this\n  }\n\n  // Skew Matrix\n  skew (x, y, cx, cy) {\n    return this.clone().skewO(...arguments)\n  }\n\n  skewO (x, y = x, cx = 0, cy = 0) {\n    // support uniformal skew\n    if (arguments.length === 3) {\n      cy = cx\n      cx = y\n      y = x\n    }\n\n    // Convert degrees to radians\n    x = radians(x)\n    y = radians(y)\n\n    const lx = Math.tan(x)\n    const ly = Math.tan(y)\n\n    const { a, b, c, d, e, f } = this\n\n    this.a = a + b * lx\n    this.b = b + a * ly\n    this.c = c + d * lx\n    this.d = d + c * ly\n    this.e = e + f * lx - cy * lx\n    this.f = f + e * ly - cx * ly\n\n    return this\n  }\n\n  // SkewX\n  skewX (x, cx, cy) {\n    return this.skew(x, 0, cx, cy)\n  }\n\n  // SkewY\n  skewY (y, cx, cy) {\n    return this.skew(0, y, cx, cy)\n  }\n\n  toArray () {\n    return [ this.a, this.b, this.c, this.d, this.e, this.f ]\n  }\n\n  // Convert matrix to string\n  toString () {\n    return 'matrix(' + this.a + ',' + this.b + ',' + this.c + ',' + this.d + ',' + this.e + ',' + this.f + ')'\n  }\n\n  // Transform a matrix into another matrix by manipulating the space\n  transform (o) {\n    // Check if o is a matrix and then left multiply it directly\n    if (Matrix.isMatrixLike(o)) {\n      const matrix = new Matrix(o)\n      return matrix.multiplyO(this)\n    }\n\n    // Get the proposed transformations and the current transformations\n    const t = Matrix.formatTransforms(o)\n    const current = this\n    const { x: ox, y: oy } = new Point(t.ox, t.oy).transform(current)\n\n    // Construct the resulting matrix\n    const transformer = new Matrix()\n      .translateO(t.rx, t.ry)\n      .lmultiplyO(current)\n      .translateO(-ox, -oy)\n      .scaleO(t.scaleX, t.scaleY)\n      .skewO(t.skewX, t.skewY)\n      .shearO(t.shear)\n      .rotateO(t.theta)\n      .translateO(ox, oy)\n\n    // If we want the origin at a particular place, we force it there\n    if (isFinite(t.px) || isFinite(t.py)) {\n      const origin = new Point(ox, oy).transform(transformer)\n      // TODO: Replace t.px with isFinite(t.px)\n      // Doesn't work because t.px is also 0 if it wasn't passed\n      const dx = isFinite(t.px) ? t.px - origin.x : 0\n      const dy = isFinite(t.py) ? t.py - origin.y : 0\n      transformer.translateO(dx, dy)\n    }\n\n    // Translate now after positioning\n    transformer.translateO(t.tx, t.ty)\n    return transformer\n  }\n\n  // Translate matrix\n  translate (x, y) {\n    return this.clone().translateO(x, y)\n  }\n\n  translateO (x, y) {\n    this.e += x || 0\n    this.f += y || 0\n    return this\n  }\n\n  valueOf () {\n    return {\n      a: this.a,\n      b: this.b,\n      c: this.c,\n      d: this.d,\n      e: this.e,\n      f: this.f\n    }\n  }\n\n}\n\nexport function ctm () {\n  return new Matrix(this.node.getCTM())\n}\n\nexport function screenCTM () {\n  /* https://bugzilla.mozilla.org/show_bug.cgi?id=1344537\n     This is needed because FF does not return the transformation matrix\n     for the inner coordinate system when getScreenCTM() is called on nested svgs.\n     However all other Browsers do that */\n  if (typeof this.isRoot === 'function' && !this.isRoot()) {\n    const rect = this.rect(1, 1)\n    const m = rect.node.getScreenCTM()\n    rect.remove()\n    return new Matrix(m)\n  }\n  return new Matrix(this.node.getScreenCTM())\n}\n\nregister(Matrix, 'Matrix')\n", "import { globals } from '../../utils/window.js'\nimport { makeInstance } from '../../utils/adopter.js'\n\nexport default function parser () {\n  // Reuse cached element if possible\n  if (!parser.nodes) {\n    const svg = makeInstance().size(2, 0)\n    svg.node.style.cssText = [\n      'opacity: 0',\n      'position: absolute',\n      'left: -100%',\n      'top: -100%',\n      'overflow: hidden'\n    ].join(';')\n\n    svg.attr('focusable', 'false')\n    svg.attr('aria-hidden', 'true')\n\n    const path = svg.path().node\n\n    parser.nodes = { svg, path }\n  }\n\n  if (!parser.nodes.svg.node.parentNode) {\n    const b = globals.document.body || globals.document.documentElement\n    parser.nodes.svg.addTo(b)\n  }\n\n  return parser.nodes\n}\n", "import { delimiter } from '../modules/core/regex.js'\nimport { globals } from '../utils/window.js'\nimport { register } from '../utils/adopter.js'\nimport { registerMethods } from '../utils/methods.js'\nimport Matrix from './Matrix.js'\nimport Point from './Point.js'\nimport parser from '../modules/core/parser.js'\n\nexport function isNulledBox (box) {\n  return !box.width && !box.height && !box.x && !box.y\n}\n\nexport function domContains (node) {\n  return node === globals.document\n    || (globals.document.documentElement.contains || function (node) {\n      // This is IE - it does not support contains() for top-level SVGs\n      while (node.parentNode) {\n        node = node.parentNode\n      }\n      return node === globals.document\n    }).call(globals.document.documentElement, node)\n}\n\nexport default class Box {\n  constructor (...args) {\n    this.init(...args)\n  }\n\n  addOffset () {\n    // offset by window scroll position, because getBoundingClientRect changes when window is scrolled\n    this.x += globals.window.pageXOffset\n    this.y += globals.window.pageYOffset\n    return new Box(this)\n  }\n\n  init (source) {\n    const base = [ 0, 0, 0, 0 ]\n    source = typeof source === 'string'\n      ? source.split(delimiter).map(parseFloat)\n      : Array.isArray(source)\n        ? source\n        : typeof source === 'object'\n          ? [ source.left != null\n            ? source.left\n            : source.x, source.top != null ? source.top : source.y, source.width, source.height ]\n          : arguments.length === 4\n            ? [].slice.call(arguments)\n            : base\n\n    this.x = source[0] || 0\n    this.y = source[1] || 0\n    this.width = this.w = source[2] || 0\n    this.height = this.h = source[3] || 0\n\n    // Add more bounding box properties\n    this.x2 = this.x + this.w\n    this.y2 = this.y + this.h\n    this.cx = this.x + this.w / 2\n    this.cy = this.y + this.h / 2\n\n    return this\n  }\n\n  isNulled () {\n    return isNulledBox(this)\n  }\n\n  // Merge rect box with another, return a new instance\n  merge (box) {\n    const x = Math.min(this.x, box.x)\n    const y = Math.min(this.y, box.y)\n    const width = Math.max(this.x + this.width, box.x + box.width) - x\n    const height = Math.max(this.y + this.height, box.y + box.height) - y\n\n    return new Box(x, y, width, height)\n  }\n\n  toArray () {\n    return [ this.x, this.y, this.width, this.height ]\n  }\n\n  toString () {\n    return this.x + ' ' + this.y + ' ' + this.width + ' ' + this.height\n  }\n\n  transform (m) {\n    if (!(m instanceof Matrix)) {\n      m = new Matrix(m)\n    }\n\n    let xMin = Infinity\n    let xMax = -Infinity\n    let yMin = Infinity\n    let yMax = -Infinity\n\n    const pts = [\n      new Point(this.x, this.y),\n      new Point(this.x2, this.y),\n      new Point(this.x, this.y2),\n      new Point(this.x2, this.y2)\n    ]\n\n    pts.forEach(function (p) {\n      p = p.transform(m)\n      xMin = Math.min(xMin, p.x)\n      xMax = Math.max(xMax, p.x)\n      yMin = Math.min(yMin, p.y)\n      yMax = Math.max(yMax, p.y)\n    })\n\n    return new Box(\n      xMin, yMin,\n      xMax - xMin,\n      yMax - yMin\n    )\n  }\n\n}\n\nfunction getBox (el, getBBoxFn, retry) {\n  let box\n\n  try {\n    // Try to get the box with the provided function\n    box = getBBoxFn(el.node)\n\n    // If the box is worthless and not even in the dom, retry\n    // by throwing an error here...\n    if (isNulledBox(box) && !domContains(el.node)) {\n      throw new Error('Element not in the dom')\n    }\n  } catch (e) {\n    // ... and calling the retry handler here\n    box = retry(el)\n  }\n\n  return box\n}\n\nexport function bbox () {\n  // Function to get bbox is getBBox()\n  const getBBox = (node) => node.getBBox()\n\n  // Take all measures so that a stupid browser renders the element\n  // so we can get the bbox from it when we try again\n  const retry = (el) => {\n    try {\n      const clone = el.clone().addTo(parser().svg).show()\n      const box = clone.node.getBBox()\n      clone.remove()\n      return box\n    } catch (e) {\n      // We give up...\n      throw new Error(`Getting bbox of element \"${el.node.nodeName}\" is not possible: ${e.toString()}`)\n    }\n  }\n\n  const box = getBox(this, getBBox, retry)\n  const bbox = new Box(box)\n\n  return bbox\n}\n\nexport function rbox (el) {\n  const getRBox = (node) => node.getBoundingClientRect()\n  const retry = (el) => {\n    // There is no point in trying tricks here because if we insert the element into the dom ourselves\n    // it obviously will be at the wrong position\n    throw new Error(`Getting rbox of element \"${el.node.nodeName}\" is not possible`)\n  }\n\n  const box = getBox(this, getRBox, retry)\n  const rbox = new Box(box)\n\n  // If an element was passed, we want the bbox in the coordinate system of that element\n  if (el) {\n    return rbox.transform(el.screenCTM().inverseO())\n  }\n\n  // Else we want it in absolute screen coordinates\n  // Therefore we need to add the scrollOffset\n  return rbox.addOffset()\n}\n\n// Checks whether the given point is inside the bounding box\nexport function inside (x, y) {\n  const box = this.bbox()\n\n  return x > box.x\n    && y > box.y\n    && x < box.x + box.width\n    && y < box.y + box.height\n}\n\nregisterMethods({\n  viewbox: {\n    viewbox (x, y, width, height) {\n      // act as getter\n      if (x == null) return new Box(this.attr('viewBox'))\n\n      // act as setter\n      return this.attr('viewBox', new Box(x, y, width, height))\n    },\n\n    zoom (level, point) {\n      // Its best to rely on the attributes here and here is why:\n      // clientXYZ: Doesn't work on non-root svgs because they dont have a CSSBox (silly!)\n      // getBoundingClientRect: Doesn't work because Chrome just ignores width and height of nested svgs completely\n      //                        that means, their clientRect is always as big as the content.\n      //                        Furthermore this size is incorrect if the element is further transformed by its parents\n      // computedStyle: Only returns meaningful values if css was used with px. We dont go this route here!\n      // getBBox: returns the bounding box of its content - that doesn't help!\n      let { width, height } = this.attr([ 'width', 'height' ])\n\n      // Width and height is a string when a number with a unit is present which we can't use\n      // So we try clientXYZ\n      if ((!width && !height) || (typeof width === 'string' || typeof height === 'string')) {\n        width = this.node.clientWidth\n        height = this.node.clientHeight\n      }\n\n      // Giving up...\n      if (!width || !height) {\n        throw new Error('Impossible to get absolute width and height. Please provide an absolute width and height attribute on the zooming element')\n      }\n\n      const v = this.viewbox()\n\n      const zoomX = width / v.width\n      const zoomY = height / v.height\n      const zoom = Math.min(zoomX, zoomY)\n\n      if (level == null) {\n        return zoom\n      }\n\n      let zoomAmount = zoom / level\n\n      // Set the zoomAmount to the highest value which is safe to process and recover from\n      // The * 100 is a bit of wiggle room for the matrix transformation\n      if (zoomAmount === Infinity) zoomAmount = Number.MAX_SAFE_INTEGER / 100\n\n      point = point || new Point(width / 2 / zoomX + v.x, height / 2 / zoomY + v.y)\n\n      const box = new Box(v).transform(\n        new Matrix({ scale: zoomAmount, origin: point })\n      )\n\n      return this.viewbox(box)\n    }\n  }\n})\n\nregister(Box, 'Box')\n", "import { extend } from '../utils/adopter.js'\n// import { subClassArray } from './ArrayPolyfill.js'\n\nclass List extends Array {\n  constructor (arr = [], ...args) {\n    super(arr, ...args)\n    if (typeof arr === 'number') return this\n    this.length = 0\n    this.push(...arr)\n  }\n}\n\n/* = subClassArray('List', Array, function (arr = []) {\n  // This catches the case, that native map tries to create an array with new Array(1)\n  if (typeof arr === 'number') return this\n  this.length = 0\n  this.push(...arr)\n}) */\n\nexport default List\n\nextend([ List ], {\n  each (fnOrMethodName, ...args) {\n    if (typeof fnOrMethodName === 'function') {\n      return this.map((el, i, arr) => {\n        return fnOrMethodName.call(el, el, i, arr)\n      })\n    } else {\n      return this.map(el => {\n        return el[fnOrMethodName](...args)\n      })\n    }\n  },\n\n  toArray () {\n    return Array.prototype.concat.apply([], this)\n  }\n})\n\nconst reserved = [ 'toArray', 'constructor', 'each' ]\n\nList.extend = function (methods) {\n  methods = methods.reduce((obj, name) => {\n    // Don't overwrite own methods\n    if (reserved.includes(name)) return obj\n\n    // Don't add private methods\n    if (name[0] === '_') return obj\n\n    // Relay every call to each()\n    obj[name] = function (...attrs) {\n      return this.each(name, ...attrs)\n    }\n    return obj\n  }, {})\n\n  extend([ List ], methods)\n}\n", "import { adopt } from '../../utils/adopter.js'\nimport { globals } from '../../utils/window.js'\nimport { map } from '../../utils/utils.js'\nimport List from '../../types/List.js'\n\nexport default function baseFind (query, parent) {\n  return new List(map((parent || globals.document).querySelectorAll(query), function (node) {\n    return adopt(node)\n  }))\n}\n\n// Scoped find method\nexport function find (query) {\n  return baseFind(query, this.node)\n}\n\nexport function findOne (query) {\n  return adopt(this.node.querySelector(query))\n}\n", "import { delimiter } from './regex.js'\nimport { makeInstance } from '../../utils/adopter.js'\nimport { globals } from '../../utils/window.js'\n\nlet listenerId = 0\nexport const windowEvents = {}\n\nexport function getEvents (instance) {\n  let n = instance.getEventHolder()\n\n  // We dont want to save events in global space\n  if (n === globals.window) n = windowEvents\n  if (!n.events) n.events = {}\n  return n.events\n}\n\nexport function getEventTarget (instance) {\n  return instance.getEventTarget()\n}\n\nexport function clearEvents (instance) {\n  let n = instance.getEventHolder()\n  if (n === globals.window) n = windowEvents\n  if (n.events) n.events = {}\n}\n\n// Add event binder in the SVG namespace\nexport function on (node, events, listener, binding, options) {\n  const l = listener.bind(binding || node)\n  const instance = makeInstance(node)\n  const bag = getEvents(instance)\n  const n = getEventTarget(instance)\n\n  // events can be an array of events or a string of events\n  events = Array.isArray(events) ? events : events.split(delimiter)\n\n  // add id to listener\n  if (!listener._svgjsListenerId) {\n    listener._svgjsListenerId = ++listenerId\n  }\n\n  events.forEach(function (event) {\n    const ev = event.split('.')[0]\n    const ns = event.split('.')[1] || '*'\n\n    // ensure valid object\n    bag[ev] = bag[ev] || {}\n    bag[ev][ns] = bag[ev][ns] || {}\n\n    // reference listener\n    bag[ev][ns][listener._svgjsListenerId] = l\n\n    // add listener\n    n.addEventListener(ev, l, options || false)\n  })\n}\n\n// Add event unbinder in the SVG namespace\nexport function off (node, events, listener, options) {\n  const instance = makeInstance(node)\n  const bag = getEvents(instance)\n  const n = getEventTarget(instance)\n\n  // listener can be a function or a number\n  if (typeof listener === 'function') {\n    listener = listener._svgjsListenerId\n    if (!listener) return\n  }\n\n  // events can be an array of events or a string or undefined\n  events = Array.isArray(events) ? events : (events || '').split(delimiter)\n\n  events.forEach(function (event) {\n    const ev = event && event.split('.')[0]\n    const ns = event && event.split('.')[1]\n    let namespace, l\n\n    if (listener) {\n      // remove listener reference\n      if (bag[ev] && bag[ev][ns || '*']) {\n        // removeListener\n        n.removeEventListener(ev, bag[ev][ns || '*'][listener], options || false)\n\n        delete bag[ev][ns || '*'][listener]\n      }\n    } else if (ev && ns) {\n      // remove all listeners for a namespaced event\n      if (bag[ev] && bag[ev][ns]) {\n        for (l in bag[ev][ns]) {\n          off(n, [ ev, ns ].join('.'), l)\n        }\n\n        delete bag[ev][ns]\n      }\n    } else if (ns) {\n      // remove all listeners for a specific namespace\n      for (event in bag) {\n        for (namespace in bag[event]) {\n          if (ns === namespace) {\n            off(n, [ event, ns ].join('.'))\n          }\n        }\n      }\n    } else if (ev) {\n      // remove all listeners for the event\n      if (bag[ev]) {\n        for (namespace in bag[ev]) {\n          off(n, [ ev, namespace ].join('.'))\n        }\n\n        delete bag[ev]\n      }\n    } else {\n      // remove all listeners on a given node\n      for (event in bag) {\n        off(n, event)\n      }\n\n      clearEvents(instance)\n    }\n  })\n}\n\nexport function dispatch (node, event, data, options) {\n  const n = getEventTarget(node)\n\n  // Dispatch event\n  if (event instanceof globals.window.Event) {\n    n.dispatchEvent(event)\n  } else {\n    event = new globals.window.CustomEvent(event, { detail: data, cancelable: true, ...options })\n    n.dispatchEvent(event)\n  }\n  return event\n}\n", "import { dispatch, off, on } from '../modules/core/event.js'\nimport { register } from '../utils/adopter.js'\nimport Base from './Base.js'\n\nexport default class EventTarget extends Base {\n  addEventListener () {}\n\n  dispatch (event, data, options) {\n    return dispatch(this, event, data, options)\n  }\n\n  dispatchEvent (event) {\n    const bag = this.getEventHolder().events\n    if (!bag) return true\n\n    const events = bag[event.type]\n\n    for (const i in events) {\n      for (const j in events[i]) {\n        events[i][j](event)\n      }\n    }\n\n    return !event.defaultPrevented\n  }\n\n  // Fire given event\n  fire (event, data, options) {\n    this.dispatch(event, data, options)\n    return this\n  }\n\n  getEventHolder () {\n    return this\n  }\n\n  getEventTarget () {\n    return this\n  }\n\n  // Unbind event from listener\n  off (event, listener, options) {\n    off(this, event, listener, options)\n    return this\n  }\n\n  // Bind given event to listener\n  on (event, listener, binding, options) {\n    on(this, event, listener, binding, options)\n    return this\n  }\n\n  removeEventListener () {}\n}\n\nregister(EventTarget, 'EventTarget')\n", "\nexport function noop () {}\n\n// Default animation values\nexport const timeline = {\n  duration: 400,\n  ease: '>',\n  delay: 0\n}\n\n// Default attribute values\nexport const attrs = {\n\n  // fill and stroke\n  'fill-opacity': 1,\n  'stroke-opacity': 1,\n  'stroke-width': 0,\n  'stroke-linejoin': 'miter',\n  'stroke-linecap': 'butt',\n  fill: '#000000',\n  stroke: '#000000',\n  opacity: 1,\n\n  // position\n  x: 0,\n  y: 0,\n  cx: 0,\n  cy: 0,\n\n  // size\n  width: 0,\n  height: 0,\n\n  // radius\n  r: 0,\n  rx: 0,\n  ry: 0,\n\n  // gradient\n  offset: 0,\n  'stop-opacity': 1,\n  'stop-color': '#000000',\n\n  // text\n  'text-anchor': 'start'\n}\n", "import { delimiter } from '../modules/core/regex.js'\n\nexport default class SVGArray extends Array {\n  constructor (...args) {\n    super(...args)\n    this.init(...args)\n  }\n\n  clone () {\n    return new this.constructor(this)\n  }\n\n  init (arr) {\n    // This catches the case, that native map tries to create an array with new Array(1)\n    if (typeof arr === 'number') return this\n    this.length = 0\n    this.push(...this.parse(arr))\n    return this\n  }\n\n  // Parse whitespace separated string\n  parse (array = []) {\n    // If already is an array, no need to parse it\n    if (array instanceof Array) return array\n\n    return array.trim().split(delimiter).map(parseFloat)\n  }\n\n  toArray () {\n    return Array.prototype.concat.apply([], this)\n  }\n\n  toSet () {\n    return new Set(this)\n  }\n\n  toString () {\n    return this.join(' ')\n  }\n\n  // Flattens the array if needed\n  valueOf () {\n    const ret = []\n    ret.push(...this)\n    return ret\n  }\n\n}\n", "import { numberAndUnit } from '../modules/core/regex.js'\n\n// Module for unit conversions\nexport default class SVGNumber {\n  // Initialize\n  constructor (...args) {\n    this.init(...args)\n  }\n\n  convert (unit) {\n    return new SVGNumber(this.value, unit)\n  }\n\n  // Divide number\n  divide (number) {\n    number = new SVGNumber(number)\n    return new SVGNumber(this / number, this.unit || number.unit)\n  }\n\n  init (value, unit) {\n    unit = Array.isArray(value) ? value[1] : unit\n    value = Array.isArray(value) ? value[0] : value\n\n    // initialize defaults\n    this.value = 0\n    this.unit = unit || ''\n\n    // parse value\n    if (typeof value === 'number') {\n      // ensure a valid numeric value\n      this.value = isNaN(value) ? 0 : !isFinite(value) ? (value < 0 ? -3.4e+38 : +3.4e+38) : value\n    } else if (typeof value === 'string') {\n      unit = value.match(numberAndUnit)\n\n      if (unit) {\n        // make value numeric\n        this.value = parseFloat(unit[1])\n\n        // normalize\n        if (unit[5] === '%') {\n          this.value /= 100\n        } else if (unit[5] === 's') {\n          this.value *= 1000\n        }\n\n        // store unit\n        this.unit = unit[5]\n      }\n    } else {\n      if (value instanceof SVGNumber) {\n        this.value = value.valueOf()\n        this.unit = value.unit\n      }\n    }\n\n    return this\n  }\n\n  // Subtract number\n  minus (number) {\n    number = new SVGNumber(number)\n    return new SVGNumber(this - number, this.unit || number.unit)\n  }\n\n  // Add number\n  plus (number) {\n    number = new SVGNumber(number)\n    return new SVGNumber(this + number, this.unit || number.unit)\n  }\n\n  // Multiply number\n  times (number) {\n    number = new SVGNumber(number)\n    return new SVGNumber(this * number, this.unit || number.unit)\n  }\n\n  toArray () {\n    return [ this.value, this.unit ]\n  }\n\n  toJSON () {\n    return this.toString()\n  }\n\n  toString () {\n    return (this.unit === '%'\n      ? ~~(this.value * 1e8) / 1e6\n      : this.unit === 's'\n        ? this.value / 1e3\n        : this.value\n    ) + this.unit\n  }\n\n  valueOf () {\n    return this.value\n  }\n\n}\n", "import { attrs as defaults } from './defaults.js'\nimport { isNumber } from './regex.js'\nimport Color from '../../types/Color.js'\nimport SVGArray from '../../types/SVGArray.js'\nimport SVGNumber from '../../types/SVGNumber.js'\n\nconst hooks = []\nexport function registerAttrHook (fn) {\n  hooks.push(fn)\n}\n\n// Set svg element attribute\nexport default function attr (attr, val, ns) {\n  // act as full getter\n  if (attr == null) {\n    // get an object of attributes\n    attr = {}\n    val = this.node.attributes\n\n    for (const node of val) {\n      attr[node.nodeName] = isNumber.test(node.nodeValue)\n        ? parseFloat(node.nodeValue)\n        : node.nodeValue\n    }\n\n    return attr\n  } else if (attr instanceof Array) {\n    // loop through array and get all values\n    return attr.reduce((last, curr) => {\n      last[curr] = this.attr(curr)\n      return last\n    }, {})\n  } else if (typeof attr === 'object' && attr.constructor === Object) {\n    // apply every attribute individually if an object is passed\n    for (val in attr) this.attr(val, attr[val])\n  } else if (val === null) {\n    // remove value\n    this.node.removeAttribute(attr)\n  } else if (val == null) {\n    // act as a getter if the first and only argument is not an object\n    val = this.node.getAttribute(attr)\n    return val == null\n      ? defaults[attr]\n      : isNumber.test(val)\n        ? parseFloat(val)\n        : val\n  } else {\n    // Loop through hooks and execute them to convert value\n    val = hooks.reduce((_val, hook) => {\n      return hook(attr, _val, this)\n    }, val)\n\n    // ensure correct numeric values (also accepts NaN and Infinity)\n    if (typeof val === 'number') {\n      val = new SVGNumber(val)\n    } else if (Color.isColor(val)) {\n      // ensure full hex color\n      val = new Color(val)\n    } else if (val.constructor === Array) {\n      // Check for plain arrays and parse array values\n      val = new SVGArray(val)\n    }\n\n    // if the passed attribute is leading...\n    if (attr === 'leading') {\n      // ... call the leading method instead\n      if (this.leading) {\n        this.leading(val)\n      }\n    } else {\n      // set given attribute on node\n      typeof ns === 'string'\n        ? this.node.setAttributeNS(ns, attr, val.toString())\n        : this.node.setAttribute(attr, val.toString())\n    }\n\n    // rebuild if required\n    if (this.rebuild && (attr === 'font-size' || attr === 'x')) {\n      this.rebuild()\n    }\n  }\n\n  return this\n}\n", "import {\n  adopt,\n  assignNewId,\n  eid,\n  extend,\n  makeInstance,\n  create,\n  register\n} from '../utils/adopter.js'\nimport { find, findOne } from '../modules/core/selector.js'\nimport { globals } from '../utils/window.js'\nimport { map } from '../utils/utils.js'\nimport { svg, html } from '../modules/core/namespaces.js'\nimport EventTarget from '../types/EventTarget.js'\nimport List from '../types/List.js'\nimport attr from '../modules/core/attr.js'\n\nexport default class Dom extends EventTarget {\n  constructor (node, attrs) {\n    super()\n    this.node = node\n    this.type = node.nodeName\n\n    if (attrs && node !== attrs) {\n      this.attr(attrs)\n    }\n  }\n\n  // Add given element at a position\n  add (element, i) {\n    element = makeInstance(element)\n\n    // If non-root svg nodes are added we have to remove their namespaces\n    if (element.removeNamespace && this.node instanceof globals.window.SVGElement) {\n      element.removeNamespace()\n    }\n\n    if (i == null) {\n      this.node.appendChild(element.node)\n    } else if (element.node !== this.node.childNodes[i]) {\n      this.node.insertBefore(element.node, this.node.childNodes[i])\n    }\n\n    return this\n  }\n\n  // Add element to given container and return self\n  addTo (parent, i) {\n    return makeInstance(parent).put(this, i)\n  }\n\n  // Returns all child elements\n  children () {\n    return new List(map(this.node.children, function (node) {\n      return adopt(node)\n    }))\n  }\n\n  // Remove all elements in this container\n  clear () {\n    // remove children\n    while (this.node.hasChildNodes()) {\n      this.node.removeChild(this.node.lastChild)\n    }\n\n    return this\n  }\n\n  // Clone element\n  clone (deep = true, assignNewIds = true) {\n    // write dom data to the dom so the clone can pickup the data\n    this.writeDataToDom()\n\n    // clone element\n    let nodeClone = this.node.cloneNode(deep)\n    if (assignNewIds) {\n      // assign new id\n      nodeClone = assignNewId(nodeClone)\n    }\n    return new this.constructor(nodeClone)\n  }\n\n  // Iterates over all children and invokes a given block\n  each (block, deep) {\n    const children = this.children()\n    let i, il\n\n    for (i = 0, il = children.length; i < il; i++) {\n      block.apply(children[i], [ i, children ])\n\n      if (deep) {\n        children[i].each(block, deep)\n      }\n    }\n\n    return this\n  }\n\n  element (nodeName, attrs) {\n    return this.put(new Dom(create(nodeName), attrs))\n  }\n\n  // Get first child\n  first () {\n    return adopt(this.node.firstChild)\n  }\n\n  // Get a element at the given index\n  get (i) {\n    return adopt(this.node.childNodes[i])\n  }\n\n  getEventHolder () {\n    return this.node\n  }\n\n  getEventTarget () {\n    return this.node\n  }\n\n  // Checks if the given element is a child\n  has (element) {\n    return this.index(element) >= 0\n  }\n\n  html (htmlOrFn, outerHTML) {\n    return this.xml(htmlOrFn, outerHTML, html)\n  }\n\n  // Get / set id\n  id (id) {\n    // generate new id if no id set\n    if (typeof id === 'undefined' && !this.node.id) {\n      this.node.id = eid(this.type)\n    }\n\n    // don't set directly with this.node.id to make `null` work correctly\n    return this.attr('id', id)\n  }\n\n  // Gets index of given element\n  index (element) {\n    return [].slice.call(this.node.childNodes).indexOf(element.node)\n  }\n\n  // Get the last child\n  last () {\n    return adopt(this.node.lastChild)\n  }\n\n  // matches the element vs a css selector\n  matches (selector) {\n    const el = this.node\n    const matcher = el.matches || el.matchesSelector || el.msMatchesSelector || el.mozMatchesSelector || el.webkitMatchesSelector || el.oMatchesSelector || null\n    return matcher && matcher.call(el, selector)\n  }\n\n  // Returns the parent element instance\n  parent (type) {\n    let parent = this\n\n    // check for parent\n    if (!parent.node.parentNode) return null\n\n    // get parent element\n    parent = adopt(parent.node.parentNode)\n\n    if (!type) return parent\n\n    // loop through ancestors if type is given\n    do {\n      if (typeof type === 'string' ? parent.matches(type) : parent instanceof type) return parent\n    } while ((parent = adopt(parent.node.parentNode)))\n\n    return parent\n  }\n\n  // Basically does the same as `add()` but returns the added element instead\n  put (element, i) {\n    element = makeInstance(element)\n    this.add(element, i)\n    return element\n  }\n\n  // Add element to given container and return container\n  putIn (parent, i) {\n    return makeInstance(parent).add(this, i)\n  }\n\n  // Remove element\n  remove () {\n    if (this.parent()) {\n      this.parent().removeElement(this)\n    }\n\n    return this\n  }\n\n  // Remove a given child\n  removeElement (element) {\n    this.node.removeChild(element.node)\n\n    return this\n  }\n\n  // Replace this with element\n  replace (element) {\n    element = makeInstance(element)\n\n    if (this.node.parentNode) {\n      this.node.parentNode.replaceChild(element.node, this.node)\n    }\n\n    return element\n  }\n\n  round (precision = 2, map = null) {\n    const factor = 10 ** precision\n    const attrs = this.attr(map)\n\n    for (const i in attrs) {\n      if (typeof attrs[i] === 'number') {\n        attrs[i] = Math.round(attrs[i] * factor) / factor\n      }\n    }\n\n    this.attr(attrs)\n    return this\n  }\n\n  // Import / Export raw svg\n  svg (svgOrFn, outerSVG) {\n    return this.xml(svgOrFn, outerSVG, svg)\n  }\n\n  // Return id on string conversion\n  toString () {\n    return this.id()\n  }\n\n  words (text) {\n    // This is faster than removing all children and adding a new one\n    this.node.textContent = text\n    return this\n  }\n\n  wrap (node) {\n    const parent = this.parent()\n\n    if (!parent) {\n      return this.addTo(node)\n    }\n\n    const position = parent.index(this)\n    return parent.put(node, position).put(this)\n  }\n\n  // write svgjs data to the dom\n  writeDataToDom () {\n    // dump variables recursively\n    this.each(function () {\n      this.writeDataToDom()\n    })\n\n    return this\n  }\n\n  // Import / Export raw svg\n  xml (xmlOrFn, outerXML, ns) {\n    if (typeof xmlOrFn === 'boolean') {\n      ns = outerXML\n      outerXML = xmlOrFn\n      xmlOrFn = null\n    }\n\n    // act as getter if no svg string is given\n    if (xmlOrFn == null || typeof xmlOrFn === 'function') {\n      // The default for exports is, that the outerNode is included\n      outerXML = outerXML == null ? true : outerXML\n\n      // write svgjs data to the dom\n      this.writeDataToDom()\n      let current = this\n\n      // An export modifier was passed\n      if (xmlOrFn != null) {\n        current = adopt(current.node.cloneNode(true))\n\n        // If the user wants outerHTML we need to process this node, too\n        if (outerXML) {\n          const result = xmlOrFn(current)\n          current = result || current\n\n          // The user does not want this node? Well, then he gets nothing\n          if (result === false) return ''\n        }\n\n        // Deep loop through all children and apply modifier\n        current.each(function () {\n          const result = xmlOrFn(this)\n          const _this = result || this\n\n          // If modifier returns false, discard node\n          if (result === false) {\n            this.remove()\n\n            // If modifier returns new node, use it\n          } else if (result && this !== _this) {\n            this.replace(_this)\n          }\n        }, true)\n      }\n\n      // Return outer or inner content\n      return outerXML\n        ? current.node.outerHTML\n        : current.node.innerHTML\n    }\n\n    // Act as setter if we got a string\n\n    // The default for import is, that the current node is not replaced\n    outerXML = outerXML == null ? false : outerXML\n\n    // Create temporary holder\n    const well = create('wrapper', ns)\n    const fragment = globals.document.createDocumentFragment()\n\n    // Dump raw svg\n    well.innerHTML = xmlOrFn\n\n    // Transplant nodes into the fragment\n    for (let len = well.children.length; len--;) {\n      fragment.appendChild(well.firstElementChild)\n    }\n\n    const parent = this.parent()\n\n    // Add the whole fragment at once\n    return outerXML\n      ? this.replace(fragment) && parent\n      : this.add(fragment)\n  }\n}\n\nextend(Dom, { attr, find, findOne })\nregister(Dom, 'Dom')\n", "import { bbox, rbox, inside } from '../types/Box.js'\nimport { ctm, screenCTM } from '../types/Matrix.js'\nimport {\n  extend,\n  getClass,\n  makeInstance,\n  register,\n  root\n} from '../utils/adopter.js'\nimport { globals } from '../utils/window.js'\nimport { point } from '../types/Point.js'\nimport { proportionalSize } from '../utils/utils.js'\nimport { reference } from '../modules/core/regex.js'\nimport Dom from './Dom.js'\nimport List from '../types/List.js'\nimport SVGNumber from '../types/SVGNumber.js'\n\nexport default class Element extends Dom {\n  constructor (node, attrs) {\n    super(node, attrs)\n\n    // initialize data object\n    this.dom = {}\n\n    // create circular reference\n    this.node.instance = this\n\n    if (node.hasAttribute('svgjs:data')) {\n      // pull svgjs data from the dom (getAttributeNS doesn't work in html5)\n      this.setData(JSON.parse(node.getAttribute('svgjs:data')) || {})\n    }\n  }\n\n  // Move element by its center\n  center (x, y) {\n    return this.cx(x).cy(y)\n  }\n\n  // Move by center over x-axis\n  cx (x) {\n    return x == null\n      ? this.x() + this.width() / 2\n      : this.x(x - this.width() / 2)\n  }\n\n  // Move by center over y-axis\n  cy (y) {\n    return y == null\n      ? this.y() + this.height() / 2\n      : this.y(y - this.height() / 2)\n  }\n\n  // Get defs\n  defs () {\n    const root = this.root()\n    return root && root.defs()\n  }\n\n  // Relative move over x and y axes\n  dmove (x, y) {\n    return this.dx(x).dy(y)\n  }\n\n  // Relative move over x axis\n  dx (x = 0) {\n    return this.x(new SVGNumber(x).plus(this.x()))\n  }\n\n  // Relative move over y axis\n  dy (y = 0) {\n    return this.y(new SVGNumber(y).plus(this.y()))\n  }\n\n  getEventHolder () {\n    return this\n  }\n\n  // Set height of element\n  height (height) {\n    return this.attr('height', height)\n  }\n\n  // Move element to given x and y values\n  move (x, y) {\n    return this.x(x).y(y)\n  }\n\n  // return array of all ancestors of given type up to the root svg\n  parents (until = this.root()) {\n    const isSelector = typeof until === 'string'\n    if (!isSelector) {\n      until = makeInstance(until)\n    }\n    const parents = new List()\n    let parent = this\n\n    while (\n      (parent = parent.parent())\n      && parent.node !== globals.document\n      && parent.nodeName !== '#document-fragment') {\n\n      parents.push(parent)\n\n      if (!isSelector && (parent.node === until.node)) {\n        break\n      }\n      if (isSelector && parent.matches(until)) {\n        break\n      }\n      if (parent.node === this.root().node) {\n        // We worked our way to the root and didn't match `until`\n        return null\n      }\n    }\n\n    return parents\n  }\n\n  // Get referenced element form attribute value\n  reference (attr) {\n    attr = this.attr(attr)\n    if (!attr) return null\n\n    const m = (attr + '').match(reference)\n    return m ? makeInstance(m[1]) : null\n  }\n\n  // Get parent document\n  root () {\n    const p = this.parent(getClass(root))\n    return p && p.root()\n  }\n\n  // set given data to the elements data property\n  setData (o) {\n    this.dom = o\n    return this\n  }\n\n  // Set element size to given width and height\n  size (width, height) {\n    const p = proportionalSize(this, width, height)\n\n    return this\n      .width(new SVGNumber(p.width))\n      .height(new SVGNumber(p.height))\n  }\n\n  // Set width of element\n  width (width) {\n    return this.attr('width', width)\n  }\n\n  // write svgjs data to the dom\n  writeDataToDom () {\n    // remove previously set data\n    this.node.removeAttribute('svgjs:data')\n\n    if (Object.keys(this.dom).length) {\n      this.node.setAttribute('svgjs:data', JSON.stringify(this.dom)) // see #428\n    }\n\n    return super.writeDataToDom()\n  }\n\n  // Move over x-axis\n  x (x) {\n    return this.attr('x', x)\n  }\n\n  // Move over y-axis\n  y (y) {\n    return this.attr('y', y)\n  }\n}\n\nextend(Element, {\n  bbox, rbox, inside, point, ctm, screenCTM\n})\n\nregister(Element, 'Element')\n", "import { registerMethods } from '../../utils/methods.js'\nimport Color from '../../types/Color.js'\nimport Element from '../../elements/Element.js'\nimport Matrix from '../../types/Matrix.js'\nimport Point from '../../types/Point.js'\nimport SVGNumber from '../../types/SVGNumber.js'\n\n// Define list of available attributes for stroke and fill\nconst sugar = {\n  stroke: [ 'color', 'width', 'opacity', 'linecap', 'linejoin', 'miterlimit', 'dasharray', 'dashoffset' ],\n  fill: [ 'color', 'opacity', 'rule' ],\n  prefix: function (t, a) {\n    return a === 'color' ? t : t + '-' + a\n  }\n}\n\n// Add sugar for fill and stroke\n;[ 'fill', 'stroke' ].forEach(function (m) {\n  const extension = {}\n  let i\n\n  extension[m] = function (o) {\n    if (typeof o === 'undefined') {\n      return this.attr(m)\n    }\n    if (typeof o === 'string' || o instanceof Color || Color.isRgb(o) || (o instanceof Element)) {\n      this.attr(m, o)\n    } else {\n      // set all attributes from sugar.fill and sugar.stroke list\n      for (i = sugar[m].length - 1; i >= 0; i--) {\n        if (o[sugar[m][i]] != null) {\n          this.attr(sugar.prefix(m, sugar[m][i]), o[sugar[m][i]])\n        }\n      }\n    }\n\n    return this\n  }\n\n  registerMethods([ 'Element', 'Runner' ], extension)\n})\n\nregisterMethods([ 'Element', 'Runner' ], {\n  // Let the user set the matrix directly\n  matrix: function (mat, b, c, d, e, f) {\n    // Act as a getter\n    if (mat == null) {\n      return new Matrix(this)\n    }\n\n    // Act as a setter, the user can pass a matrix or a set of numbers\n    return this.attr('transform', new Matrix(mat, b, c, d, e, f))\n  },\n\n  // Map rotation to transform\n  rotate: function (angle, cx, cy) {\n    return this.transform({ rotate: angle, ox: cx, oy: cy }, true)\n  },\n\n  // Map skew to transform\n  skew: function (x, y, cx, cy) {\n    return arguments.length === 1 || arguments.length === 3\n      ? this.transform({ skew: x, ox: y, oy: cx }, true)\n      : this.transform({ skew: [ x, y ], ox: cx, oy: cy }, true)\n  },\n\n  shear: function (lam, cx, cy) {\n    return this.transform({ shear: lam, ox: cx, oy: cy }, true)\n  },\n\n  // Map scale to transform\n  scale: function (x, y, cx, cy) {\n    return arguments.length === 1 || arguments.length === 3\n      ? this.transform({ scale: x, ox: y, oy: cx }, true)\n      : this.transform({ scale: [ x, y ], ox: cx, oy: cy }, true)\n  },\n\n  // Map translate to transform\n  translate: function (x, y) {\n    return this.transform({ translate: [ x, y ] }, true)\n  },\n\n  // Map relative translations to transform\n  relative: function (x, y) {\n    return this.transform({ relative: [ x, y ] }, true)\n  },\n\n  // Map flip to transform\n  flip: function (direction = 'both', origin = 'center') {\n    if ('xybothtrue'.indexOf(direction) === -1) {\n      origin = direction\n      direction = 'both'\n    }\n\n    return this.transform({ flip: direction, origin: origin }, true)\n  },\n\n  // Opacity\n  opacity: function (value) {\n    return this.attr('opacity', value)\n  }\n})\n\nregisterMethods('radius', {\n  // Add x and y radius\n  radius: function (x, y = x) {\n    const type = (this._element || this).type\n    return type === 'radialGradient'\n      ? this.attr('r', new SVGNumber(x))\n      : this.rx(x).ry(y)\n  }\n})\n\nregisterMethods('Path', {\n  // Get path length\n  length: function () {\n    return this.node.getTotalLength()\n  },\n  // Get point at length\n  pointAt: function (length) {\n    return new Point(this.node.getPointAtLength(length))\n  }\n})\n\nregisterMethods([ 'Element', 'Runner' ], {\n  // Set font\n  font: function (a, v) {\n    if (typeof a === 'object') {\n      for (v in a) this.font(v, a[v])\n      return this\n    }\n\n    return a === 'leading'\n      ? this.leading(v)\n      : a === 'anchor'\n        ? this.attr('text-anchor', v)\n        : a === 'size' || a === 'family' || a === 'weight' || a === 'stretch' || a === 'variant' || a === 'style'\n          ? this.attr('font-' + a, v)\n          : this.attr(a, v)\n  }\n})\n\n// Add events to elements\nconst methods = [ 'click',\n  'dblclick',\n  'mousedown',\n  'mouseup',\n  'mouseover',\n  'mouseout',\n  'mousemove',\n  'mouseenter',\n  'mouseleave',\n  'touchstart',\n  'touchmove',\n  'touchleave',\n  'touchend',\n  'touchcancel' ].reduce(function (last, event) {\n  // add event to Element\n  const fn = function (f) {\n    if (f === null) {\n      this.off(event)\n    } else {\n      this.on(event, f)\n    }\n    return this\n  }\n\n  last[event] = fn\n  return last\n}, {})\n\nregisterMethods('Element', methods)\n", "import { getOrigin } from '../../utils/utils.js'\nimport { delimiter, transforms } from '../core/regex.js'\nimport { registerMethods } from '../../utils/methods.js'\nimport Matrix from '../../types/Matrix.js'\n\n// Reset all transformations\nexport function untransform () {\n  return this.attr('transform', null)\n}\n\n// merge the whole transformation chain into one matrix and returns it\nexport function matrixify () {\n  const matrix = (this.attr('transform') || '')\n    // split transformations\n    .split(transforms).slice(0, -1).map(function (str) {\n      // generate key => value pairs\n      const kv = str.trim().split('(')\n      return [ kv[0],\n        kv[1].split(delimiter)\n          .map(function (str) {\n            return parseFloat(str)\n          })\n      ]\n    })\n    .reverse()\n    // merge every transformation into one matrix\n    .reduce(function (matrix, transform) {\n      if (transform[0] === 'matrix') {\n        return matrix.lmultiply(Matrix.fromArray(transform[1]))\n      }\n      return matrix[transform[0]].apply(matrix, transform[1])\n    }, new Matrix())\n\n  return matrix\n}\n\n// add an element to another parent without changing the visual representation on the screen\nexport function toParent (parent, i) {\n  if (this === parent) return this\n  const ctm = this.screenCTM()\n  const pCtm = parent.screenCTM().inverse()\n\n  this.addTo(parent, i).untransform().transform(pCtm.multiply(ctm))\n\n  return this\n}\n\n// same as above with parent equals root-svg\nexport function toRoot (i) {\n  return this.toParent(this.root(), i)\n}\n\n// Add transformations\nexport function transform (o, relative) {\n  // Act as a getter if no object was passed\n  if (o == null || typeof o === 'string') {\n    const decomposed = new Matrix(this).decompose()\n    return o == null ? decomposed : decomposed[o]\n  }\n\n  if (!Matrix.isMatrixLike(o)) {\n    // Set the origin according to the defined transform\n    o = { ...o, origin: getOrigin(o, this) }\n  }\n\n  // The user can pass a boolean, an Element or an Matrix or nothing\n  const cleanRelative = relative === true ? this : (relative || false)\n  const result = new Matrix(cleanRelative).transform(o)\n  return this.attr('transform', result)\n}\n\nregisterMethods('Element', {\n  untransform, matrixify, toParent, toRoot, transform\n})\n", "import { register } from '../utils/adopter.js'\nimport Element from './Element.js'\n\nexport default class Container extends Element {\n  flatten (parent = this, index) {\n    this.each(function () {\n      if (this instanceof Container) {\n        return this.flatten().ungroup()\n      }\n    })\n\n    return this\n  }\n\n  ungroup (parent = this.parent(), index = parent.index(this)) {\n    // when parent != this, we want append all elements to the end\n    index = index === -1 ? parent.children().length : index\n\n    this.each(function (i, children) {\n      // reverse each\n      return children[children.length - i - 1].toParent(parent, index)\n    })\n\n    return this.remove()\n  }\n}\n\nregister(Container, 'Container')\n", "import { nodeOrNew, register } from '../utils/adopter.js'\nimport Container from './Container.js'\n\nexport default class Defs extends Container {\n  constructor (node, attrs = node) {\n    super(nodeOrNew('defs', node), attrs)\n  }\n\n  flatten () {\n    return this\n  }\n\n  ungroup () {\n    return this\n  }\n}\n\nregister(Defs, 'Defs')\n", "import { register } from '../utils/adopter.js'\nimport Element from './Element.js'\n\nexport default class Shape extends Element {}\n\nregister(Shape, 'Shape')\n", "import SVGNumber from '../../types/SVGNumber.js'\n\n// Radius x value\nexport function rx (rx) {\n  return this.attr('rx', rx)\n}\n\n// Radius y value\nexport function ry (ry) {\n  return this.attr('ry', ry)\n}\n\n// Move over x-axis\nexport function x (x) {\n  return x == null\n    ? this.cx() - this.rx()\n    : this.cx(x + this.rx())\n}\n\n// Move over y-axis\nexport function y (y) {\n  return y == null\n    ? this.cy() - this.ry()\n    : this.cy(y + this.ry())\n}\n\n// Move by center over x-axis\nexport function cx (x) {\n  return this.attr('cx', x)\n}\n\n// Move by center over y-axis\nexport function cy (y) {\n  return this.attr('cy', y)\n}\n\n// Set width of element\nexport function width (width) {\n  return width == null\n    ? this.rx() * 2\n    : this.rx(new SVGNumber(width).divide(2))\n}\n\n// Set height of element\nexport function height (height) {\n  return height == null\n    ? this.ry() * 2\n    : this.ry(new SVGNumber(height).divide(2))\n}\n", "import {\n  extend,\n  nodeOrNew,\n  register,\n  wrapWithAttrCheck\n} from '../utils/adopter.js'\nimport { proportionalSize } from '../utils/utils.js'\nimport { registerMethods } from '../utils/methods.js'\nimport SVGNumber from '../types/SVGNumber.js'\nimport Shape from './Shape.js'\nimport * as circled from '../modules/core/circled.js'\n\nexport default class Ellipse extends Shape {\n  constructor (node, attrs = node) {\n    super(nodeOrNew('ellipse', node), attrs)\n  }\n\n  size (width, height) {\n    const p = proportionalSize(this, width, height)\n\n    return this\n      .rx(new SVGNumber(p.width).divide(2))\n      .ry(new SVGNumber(p.height).divide(2))\n  }\n}\n\nextend(Ellipse, circled)\n\nregisterMethods('Container', {\n  // Create an ellipse\n  ellipse: wrapWithAttrCheck(function (width = 0, height = width) {\n    return this.put(new Ellipse()).size(width, height).move(0, 0)\n  })\n})\n\nregister(Ellipse, 'Ellipse')\n", "import Dom from './Dom.js'\nimport { globals } from '../utils/window.js'\nimport { register, create } from '../utils/adopter.js'\n\nclass Fragment extends Dom {\n  constructor (node = globals.document.createDocumentFragment()) {\n    super(node)\n  }\n\n  // Import / Export raw xml\n  xml (xmlOrFn, outerXML, ns) {\n    if (typeof xmlOrFn === 'boolean') {\n      ns = outerXML\n      outerXML = xmlOrFn\n      xmlOrFn = null\n    }\n\n    // because this is a fragment we have to put all elements into a wrapper first\n    // before we can get the innerXML from it\n    if (xmlOrFn == null || typeof xmlOrFn === 'function') {\n      const wrapper = new Dom(create('wrapper', ns))\n      wrapper.add(this.node.cloneNode(true))\n\n      return wrapper.xml(false, ns)\n    }\n\n    // Act as setter if we got a string\n    return super.xml(xmlOrFn, false, ns)\n  }\n\n}\n\nregister(Fragment, 'Fragment')\n\nexport default Fragment\n", "import SVGNumber from '../../types/SVGNumber.js'\n\nexport function from (x, y) {\n  return (this._element || this).type === 'radialGradient'\n    ? this.attr({ fx: new SVGNumber(x), fy: new SVGNumber(y) })\n    : this.attr({ x1: new SVGNumber(x), y1: new SVGNumber(y) })\n}\n\nexport function to (x, y) {\n  return (this._element || this).type === 'radialGradient'\n    ? this.attr({ cx: new SVGNumber(x), cy: new SVGNumber(y) })\n    : this.attr({ x2: new SVGNumber(x), y2: new SVGNumber(y) })\n}\n", "import {\n  extend,\n  nodeOrNew,\n  register,\n  wrapWithAttrCheck\n} from '../utils/adopter.js'\nimport { registerMethods } from '../utils/methods.js'\nimport Box from '../types/Box.js'\nimport Container from './Container.js'\nimport baseFind from '../modules/core/selector.js'\nimport * as gradiented from '../modules/core/gradiented.js'\n\nexport default class Gradient extends Container {\n  constructor (type, attrs) {\n    super(\n      nodeOrNew(type + 'Gradient', typeof type === 'string' ? null : type),\n      attrs\n    )\n  }\n\n  // custom attr to handle transform\n  attr (a, b, c) {\n    if (a === 'transform') a = 'gradientTransform'\n    return super.attr(a, b, c)\n  }\n\n  bbox () {\n    return new Box()\n  }\n\n  targets () {\n    return baseFind('svg [fill*=' + this.id() + ']')\n  }\n\n  // Alias string conversion to fill\n  toString () {\n    return this.url()\n  }\n\n  // Update gradient\n  update (block) {\n    // remove all stops\n    this.clear()\n\n    // invoke passed block\n    if (typeof block === 'function') {\n      block.call(this, this)\n    }\n\n    return this\n  }\n\n  // Return the fill id\n  url () {\n    return 'url(#' + this.id() + ')'\n  }\n}\n\nextend(Gradient, gradiented)\n\nregisterMethods({\n  Container: {\n    // Create gradient element in defs\n    gradient (...args) {\n      return this.defs().gradient(...args)\n    }\n  },\n  // define gradient\n  Defs: {\n    gradient: wrapWithAttrCheck(function (type, block) {\n      return this.put(new Gradient(type)).update(block)\n    })\n  }\n})\n\nregister(Gradient, 'Gradient')\n", "import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\nimport { registerMethods } from '../utils/methods.js'\nimport Box from '../types/Box.js'\nimport Container from './Container.js'\nimport baseFind from '../modules/core/selector.js'\n\nexport default class Pattern extends Container {\n  // Initialize node\n  constructor (node, attrs = node) {\n    super(nodeOrNew('pattern', node), attrs)\n  }\n\n  // custom attr to handle transform\n  attr (a, b, c) {\n    if (a === 'transform') a = 'patternTransform'\n    return super.attr(a, b, c)\n  }\n\n  bbox () {\n    return new Box()\n  }\n\n  targets () {\n    return baseFind('svg [fill*=' + this.id() + ']')\n  }\n\n  // Alias string conversion to fill\n  toString () {\n    return this.url()\n  }\n\n  // Update pattern by rebuilding\n  update (block) {\n    // remove content\n    this.clear()\n\n    // invoke passed block\n    if (typeof block === 'function') {\n      block.call(this, this)\n    }\n\n    return this\n  }\n\n  // Return the fill id\n  url () {\n    return 'url(#' + this.id() + ')'\n  }\n\n}\n\nregisterMethods({\n  Container: {\n    // Create pattern element in defs\n    pattern (...args) {\n      return this.defs().pattern(...args)\n    }\n  },\n  Defs: {\n    pattern: wrapWithAttrCheck(function (width, height, block) {\n      return this.put(new Pattern()).update(block).attr({\n        x: 0,\n        y: 0,\n        width: width,\n        height: height,\n        patternUnits: 'userSpaceOnUse'\n      })\n    })\n  }\n})\n\nregister(Pattern, 'Pattern')\n", "import { isImage } from '../modules/core/regex.js'\nimport { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\nimport { off, on } from '../modules/core/event.js'\nimport { registerAttrHook } from '../modules/core/attr.js'\nimport { registerMethods } from '../utils/methods.js'\nimport { xlink } from '../modules/core/namespaces.js'\nimport Pattern from './Pattern.js'\nimport Shape from './Shape.js'\nimport { globals } from '../utils/window.js'\n\nexport default class Image extends Shape {\n  constructor (node, attrs = node) {\n    super(nodeOrNew('image', node), attrs)\n  }\n\n  // (re)load image\n  load (url, callback) {\n    if (!url) return this\n\n    const img = new globals.window.Image()\n\n    on(img, 'load', function (e) {\n      const p = this.parent(Pattern)\n\n      // ensure image size\n      if (this.width() === 0 && this.height() === 0) {\n        this.size(img.width, img.height)\n      }\n\n      if (p instanceof Pattern) {\n        // ensure pattern size if not set\n        if (p.width() === 0 && p.height() === 0) {\n          p.size(this.width(), this.height())\n        }\n      }\n\n      if (typeof callback === 'function') {\n        callback.call(this, e)\n      }\n    }, this)\n\n    on(img, 'load error', function () {\n      // dont forget to unbind memory leaking events\n      off(img)\n    })\n\n    return this.attr('href', (img.src = url), xlink)\n  }\n}\n\nregisterAttrHook(function (attr, val, _this) {\n  // convert image fill and stroke to patterns\n  if (attr === 'fill' || attr === 'stroke') {\n    if (isImage.test(val)) {\n      val = _this.root().defs().image(val)\n    }\n  }\n\n  if (val instanceof Image) {\n    val = _this.root().defs().pattern(0, 0, (pattern) => {\n      pattern.add(val)\n    })\n  }\n\n  return val\n})\n\nregisterMethods({\n  Container: {\n    // create image element, load image and set its size\n    image: wrapWithAttrCheck(function (source, callback) {\n      return this.put(new Image()).size(0, 0).load(source, callback)\n    })\n  }\n})\n\nregister(Image, 'Image')\n", "import { delimiter } from '../modules/core/regex.js'\nimport SVGArray from './SVGArray.js'\nimport Box from './Box.js'\nimport Matrix from './Matrix.js'\n\nexport default class PointArray extends SVGArray {\n  // Get bounding box of points\n  bbox () {\n    let maxX = -Infinity\n    let maxY = -Infinity\n    let minX = Infinity\n    let minY = Infinity\n    this.forEach(function (el) {\n      maxX = Math.max(el[0], maxX)\n      maxY = Math.max(el[1], maxY)\n      minX = Math.min(el[0], minX)\n      minY = Math.min(el[1], minY)\n    })\n    return new Box(minX, minY, maxX - minX, maxY - minY)\n  }\n\n  // Move point string\n  move (x, y) {\n    const box = this.bbox()\n\n    // get relative offset\n    x -= box.x\n    y -= box.y\n\n    // move every point\n    if (!isNaN(x) && !isNaN(y)) {\n      for (let i = this.length - 1; i >= 0; i--) {\n        this[i] = [ this[i][0] + x, this[i][1] + y ]\n      }\n    }\n\n    return this\n  }\n\n  // Parse point string and flat array\n  parse (array = [ 0, 0 ]) {\n    const points = []\n\n    // if it is an array, we flatten it and therefore clone it to 1 depths\n    if (array instanceof Array) {\n      array = Array.prototype.concat.apply([], array)\n    } else { // Else, it is considered as a string\n      // parse points\n      array = array.trim().split(delimiter).map(parseFloat)\n    }\n\n    // validate points - https://svgwg.org/svg2-draft/shapes.html#DataTypePoints\n    // Odd number of coordinates is an error. In such cases, drop the last odd coordinate.\n    if (array.length % 2 !== 0) array.pop()\n\n    // wrap points in two-tuples\n    for (let i = 0, len = array.length; i < len; i = i + 2) {\n      points.push([ array[i], array[i + 1] ])\n    }\n\n    return points\n  }\n\n  // Resize poly string\n  size (width, height) {\n    let i\n    const box = this.bbox()\n\n    // recalculate position of all points according to new size\n    for (i = this.length - 1; i >= 0; i--) {\n      if (box.width) this[i][0] = ((this[i][0] - box.x) * width) / box.width + box.x\n      if (box.height) this[i][1] = ((this[i][1] - box.y) * height) / box.height + box.y\n    }\n\n    return this\n  }\n\n  // Convert array to line object\n  toLine () {\n    return {\n      x1: this[0][0],\n      y1: this[0][1],\n      x2: this[1][0],\n      y2: this[1][1]\n    }\n  }\n\n  // Convert array to string\n  toString () {\n    const array = []\n    // convert to a poly point string\n    for (let i = 0, il = this.length; i < il; i++) {\n      array.push(this[i].join(','))\n    }\n\n    return array.join(' ')\n  }\n\n  transform (m) {\n    return this.clone().transformO(m)\n  }\n\n  // transform points with matrix (similar to Point.transform)\n  transformO (m) {\n    if (!Matrix.isMatrixLike(m)) {\n      m = new Matrix(m)\n    }\n\n    for (let i = this.length; i--;) {\n      // Perform the matrix multiplication\n      const [ x, y ] = this[i]\n      this[i][0] = m.a * x + m.c * y + m.e\n      this[i][1] = m.b * x + m.d * y + m.f\n    }\n\n    return this\n  }\n\n}\n", "import PointArray from '../../types/PointArray.js'\n\nexport const MorphArray = PointArray\n\n// Move by left top corner over x-axis\nexport function x (x) {\n  return x == null ? this.bbox().x : this.move(x, this.bbox().y)\n}\n\n// Move by left top corner over y-axis\nexport function y (y) {\n  return y == null ? this.bbox().y : this.move(this.bbox().x, y)\n}\n\n// Set width of element\nexport function width (width) {\n  const b = this.bbox()\n  return width == null ? b.width : this.size(width, b.height)\n}\n\n// Set height of element\nexport function height (height) {\n  const b = this.bbox()\n  return height == null ? b.height : this.size(b.width, height)\n}\n", "import {\n  extend,\n  nodeOrNew,\n  register,\n  wrapWithAttrCheck\n} from '../utils/adopter.js'\nimport { proportionalSize } from '../utils/utils.js'\nimport { registerMethods } from '../utils/methods.js'\nimport PointArray from '../types/PointArray.js'\nimport Shape from './Shape.js'\nimport * as pointed from '../modules/core/pointed.js'\n\nexport default class Line extends Shape {\n  // Initialize node\n  constructor (node, attrs = node) {\n    super(nodeOrNew('line', node), attrs)\n  }\n\n  // Get array\n  array () {\n    return new PointArray([\n      [ this.attr('x1'), this.attr('y1') ],\n      [ this.attr('x2'), this.attr('y2') ]\n    ])\n  }\n\n  // Move by left top corner\n  move (x, y) {\n    return this.attr(this.array().move(x, y).toLine())\n  }\n\n  // Overwrite native plot() method\n  plot (x1, y1, x2, y2) {\n    if (x1 == null) {\n      return this.array()\n    } else if (typeof y1 !== 'undefined') {\n      x1 = { x1, y1, x2, y2 }\n    } else {\n      x1 = new PointArray(x1).toLine()\n    }\n\n    return this.attr(x1)\n  }\n\n  // Set element size to given width and height\n  size (width, height) {\n    const p = proportionalSize(this, width, height)\n    return this.attr(this.array().size(p.width, p.height).toLine())\n  }\n}\n\nextend(Line, pointed)\n\nregisterMethods({\n  Container: {\n    // Create a line element\n    line: wrapWithAttrCheck(function (...args) {\n      // make sure plot is called as a setter\n      // x1 is not necessarily a number, it can also be an array, a string and a PointArray\n      return Line.prototype.plot.apply(\n        this.put(new Line())\n        , args[0] != null ? args : [ 0, 0, 0, 0 ]\n      )\n    })\n  }\n})\n\nregister(Line, 'Line')\n", "import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\nimport { registerMethods } from '../utils/methods.js'\nimport Container from './Container.js'\n\nexport default class Marker extends Container {\n  // Initialize node\n  constructor (node, attrs = node) {\n    super(nodeOrNew('marker', node), attrs)\n  }\n\n  // Set height of element\n  height (height) {\n    return this.attr('markerHeight', height)\n  }\n\n  orient (orient) {\n    return this.attr('orient', orient)\n  }\n\n  // Set marker refX and refY\n  ref (x, y) {\n    return this.attr('refX', x).attr('refY', y)\n  }\n\n  // Return the fill id\n  toString () {\n    return 'url(#' + this.id() + ')'\n  }\n\n  // Update marker\n  update (block) {\n    // remove all content\n    this.clear()\n\n    // invoke passed block\n    if (typeof block === 'function') {\n      block.call(this, this)\n    }\n\n    return this\n  }\n\n  // Set width of element\n  width (width) {\n    return this.attr('markerWidth', width)\n  }\n\n}\n\nregisterMethods({\n  Container: {\n    marker (...args) {\n      // Create marker element in defs\n      return this.defs().marker(...args)\n    }\n  },\n  Defs: {\n    // Create marker\n    marker: wrapWithAttrCheck(function (width, height, block) {\n      // Set default viewbox to match the width and height, set ref to cx and cy and set orient to auto\n      return this.put(new Marker())\n        .size(width, height)\n        .ref(width / 2, height / 2)\n        .viewbox(0, 0, width, height)\n        .attr('orient', 'auto')\n        .update(block)\n    })\n  },\n  marker: {\n    // Create and attach markers\n    marker (marker, width, height, block) {\n      let attr = [ 'marker' ]\n\n      // Build attribute name\n      if (marker !== 'all') attr.push(marker)\n      attr = attr.join('-')\n\n      // Set marker attribute\n      marker = arguments[1] instanceof Marker\n        ? arguments[1]\n        : this.defs().marker(width, height, block)\n\n      return this.attr(attr, marker)\n    }\n  }\n})\n\nregister(Marker, 'Marker')\n", "import { timeline } from '../modules/core/defaults.js'\nimport { extend } from '../utils/adopter.js'\n\n/***\nBase Class\n==========\nThe base stepper class that will be\n***/\n\nfunction makeSetterGetter (k, f) {\n  return function (v) {\n    if (v == null) return this[k]\n    this[k] = v\n    if (f) f.call(this)\n    return this\n  }\n}\n\nexport const easing = {\n  '-': function (pos) {\n    return pos\n  },\n  '<>': function (pos) {\n    return -Math.cos(pos * Math.PI) / 2 + 0.5\n  },\n  '>': function (pos) {\n    return Math.sin(pos * Math.PI / 2)\n  },\n  '<': function (pos) {\n    return -Math.cos(pos * Math.PI / 2) + 1\n  },\n  bezier: function (x1, y1, x2, y2) {\n    // see https://www.w3.org/TR/css-easing-1/#cubic-bezier-algo\n    return function (t) {\n      if (t < 0) {\n        if (x1 > 0) {\n          return y1 / x1 * t\n        } else if (x2 > 0) {\n          return y2 / x2 * t\n        } else {\n          return 0\n        }\n      } else if (t > 1) {\n        if (x2 < 1) {\n          return (1 - y2) / (1 - x2) * t + (y2 - x2) / (1 - x2)\n        } else if (x1 < 1) {\n          return (1 - y1) / (1 - x1) * t + (y1 - x1) / (1 - x1)\n        } else {\n          return 1\n        }\n      } else {\n        return 3 * t * (1 - t) ** 2 * y1 + 3 * t ** 2 * (1 - t) * y2 + t ** 3\n      }\n    }\n  },\n  // see https://www.w3.org/TR/css-easing-1/#step-timing-function-algo\n  steps: function (steps, stepPosition = 'end') {\n    // deal with \"jump-\" prefix\n    stepPosition = stepPosition.split('-').reverse()[0]\n\n    let jumps = steps\n    if (stepPosition === 'none') {\n      --jumps\n    } else if (stepPosition === 'both') {\n      ++jumps\n    }\n\n    // The beforeFlag is essentially useless\n    return (t, beforeFlag = false) => {\n      // Step is called currentStep in referenced url\n      let step = Math.floor(t * steps)\n      const jumping = (t * step) % 1 === 0\n\n      if (stepPosition === 'start' || stepPosition === 'both') {\n        ++step\n      }\n\n      if (beforeFlag && jumping) {\n        --step\n      }\n\n      if (t >= 0 && step < 0) {\n        step = 0\n      }\n\n      if (t <= 1 && step > jumps) {\n        step = jumps\n      }\n\n      return step / jumps\n    }\n  }\n}\n\nexport class Stepper {\n  done () {\n    return false\n  }\n}\n\n/***\nEasing Functions\n================\n***/\n\nexport class Ease extends Stepper {\n  constructor (fn = timeline.ease) {\n    super()\n    this.ease = easing[fn] || fn\n  }\n\n  step (from, to, pos) {\n    if (typeof from !== 'number') {\n      return pos < 1 ? from : to\n    }\n    return from + (to - from) * this.ease(pos)\n  }\n}\n\n/***\nController Types\n================\n***/\n\nexport class Controller extends Stepper {\n  constructor (fn) {\n    super()\n    this.stepper = fn\n  }\n\n  done (c) {\n    return c.done\n  }\n\n  step (current, target, dt, c) {\n    return this.stepper(current, target, dt, c)\n  }\n\n}\n\nfunction recalculate () {\n  // Apply the default parameters\n  const duration = (this._duration || 500) / 1000\n  const overshoot = this._overshoot || 0\n\n  // Calculate the PID natural response\n  const eps = 1e-10\n  const pi = Math.PI\n  const os = Math.log(overshoot / 100 + eps)\n  const zeta = -os / Math.sqrt(pi * pi + os * os)\n  const wn = 3.9 / (zeta * duration)\n\n  // Calculate the Spring values\n  this.d = 2 * zeta * wn\n  this.k = wn * wn\n}\n\nexport class Spring extends Controller {\n  constructor (duration = 500, overshoot = 0) {\n    super()\n    this.duration(duration)\n      .overshoot(overshoot)\n  }\n\n  step (current, target, dt, c) {\n    if (typeof current === 'string') return current\n    c.done = dt === Infinity\n    if (dt === Infinity) return target\n    if (dt === 0) return current\n\n    if (dt > 100) dt = 16\n\n    dt /= 1000\n\n    // Get the previous velocity\n    const velocity = c.velocity || 0\n\n    // Apply the control to get the new position and store it\n    const acceleration = -this.d * velocity - this.k * (current - target)\n    const newPosition = current\n      + velocity * dt\n      + acceleration * dt * dt / 2\n\n    // Store the velocity\n    c.velocity = velocity + acceleration * dt\n\n    // Figure out if we have converged, and if so, pass the value\n    c.done = Math.abs(target - newPosition) + Math.abs(velocity) < 0.002\n    return c.done ? target : newPosition\n  }\n}\n\nextend(Spring, {\n  duration: makeSetterGetter('_duration', recalculate),\n  overshoot: makeSetterGetter('_overshoot', recalculate)\n})\n\nexport class PID extends Controller {\n  constructor (p = 0.1, i = 0.01, d = 0, windup = 1000) {\n    super()\n    this.p(p).i(i).d(d).windup(windup)\n  }\n\n  step (current, target, dt, c) {\n    if (typeof current === 'string') return current\n    c.done = dt === Infinity\n\n    if (dt === Infinity) return target\n    if (dt === 0) return current\n\n    const p = target - current\n    let i = (c.integral || 0) + p * dt\n    const d = (p - (c.error || 0)) / dt\n    const windup = this._windup\n\n    // antiwindup\n    if (windup !== false) {\n      i = Math.max(-windup, Math.min(i, windup))\n    }\n\n    c.error = p\n    c.integral = i\n\n    c.done = Math.abs(p) < 0.001\n\n    return c.done ? target : current + (this.P * p + this.I * i + this.D * d)\n  }\n}\n\nextend(PID, {\n  windup: makeSetterGetter('_windup'),\n  p: makeSetterGetter('P'),\n  i: makeSetterGetter('I'),\n  d: makeSetterGetter('D')\n})\n", "import { isPathLetter } from '../modules/core/regex.js'\nimport Point from '../types/Point.js'\n\nconst segmentParameters = { M: 2, L: 2, H: 1, V: 1, C: 6, S: 4, Q: 4, T: 2, A: 7, Z: 0 }\n\nconst pathHandlers = {\n  M: function (c, p, p0) {\n    p.x = p0.x = c[0]\n    p.y = p0.y = c[1]\n\n    return [ 'M', p.x, p.y ]\n  },\n  L: function (c, p) {\n    p.x = c[0]\n    p.y = c[1]\n    return [ 'L', c[0], c[1] ]\n  },\n  H: function (c, p) {\n    p.x = c[0]\n    return [ 'H', c[0] ]\n  },\n  V: function (c, p) {\n    p.y = c[0]\n    return [ 'V', c[0] ]\n  },\n  C: function (c, p) {\n    p.x = c[4]\n    p.y = c[5]\n    return [ 'C', c[0], c[1], c[2], c[3], c[4], c[5] ]\n  },\n  S: function (c, p) {\n    p.x = c[2]\n    p.y = c[3]\n    return [ 'S', c[0], c[1], c[2], c[3] ]\n  },\n  Q: function (c, p) {\n    p.x = c[2]\n    p.y = c[3]\n    return [ 'Q', c[0], c[1], c[2], c[3] ]\n  },\n  T: function (c, p) {\n    p.x = c[0]\n    p.y = c[1]\n    return [ 'T', c[0], c[1] ]\n  },\n  Z: function (c, p, p0) {\n    p.x = p0.x\n    p.y = p0.y\n    return [ 'Z' ]\n  },\n  A: function (c, p) {\n    p.x = c[5]\n    p.y = c[6]\n    return [ 'A', c[0], c[1], c[2], c[3], c[4], c[5], c[6] ]\n  }\n}\n\nconst mlhvqtcsaz = 'mlhvqtcsaz'.split('')\n\nfor (let i = 0, il = mlhvqtcsaz.length; i < il; ++i) {\n  pathHandlers[mlhvqtcsaz[i]] = (function (i) {\n    return function (c, p, p0) {\n      if (i === 'H') c[0] = c[0] + p.x\n      else if (i === 'V') c[0] = c[0] + p.y\n      else if (i === 'A') {\n        c[5] = c[5] + p.x\n        c[6] = c[6] + p.y\n      } else {\n        for (let j = 0, jl = c.length; j < jl; ++j) {\n          c[j] = c[j] + (j % 2 ? p.y : p.x)\n        }\n      }\n\n      return pathHandlers[i](c, p, p0)\n    }\n  })(mlhvqtcsaz[i].toUpperCase())\n}\n\nfunction makeAbsolut (parser) {\n  const command = parser.segment[0]\n  return pathHandlers[command](parser.segment.slice(1), parser.p, parser.p0)\n}\n\nfunction segmentComplete (parser) {\n  return parser.segment.length && parser.segment.length - 1 === segmentParameters[parser.segment[0].toUpperCase()]\n}\n\nfunction startNewSegment (parser, token) {\n  parser.inNumber && finalizeNumber(parser, false)\n  const pathLetter = isPathLetter.test(token)\n\n  if (pathLetter) {\n    parser.segment = [ token ]\n  } else {\n    const lastCommand = parser.lastCommand\n    const small = lastCommand.toLowerCase()\n    const isSmall = lastCommand === small\n    parser.segment = [ small === 'm' ? (isSmall ? 'l' : 'L') : lastCommand ]\n  }\n\n  parser.inSegment = true\n  parser.lastCommand = parser.segment[0]\n\n  return pathLetter\n}\n\nfunction finalizeNumber (parser, inNumber) {\n  if (!parser.inNumber) throw new Error('Parser Error')\n  parser.number && parser.segment.push(parseFloat(parser.number))\n  parser.inNumber = inNumber\n  parser.number = ''\n  parser.pointSeen = false\n  parser.hasExponent = false\n\n  if (segmentComplete(parser)) {\n    finalizeSegment(parser)\n  }\n}\n\nfunction finalizeSegment (parser) {\n  parser.inSegment = false\n  if (parser.absolute) {\n    parser.segment = makeAbsolut(parser)\n  }\n  parser.segments.push(parser.segment)\n}\n\nfunction isArcFlag (parser) {\n  if (!parser.segment.length) return false\n  const isArc = parser.segment[0].toUpperCase() === 'A'\n  const length = parser.segment.length\n\n  return isArc && (length === 4 || length === 5)\n}\n\nfunction isExponential (parser) {\n  return parser.lastToken.toUpperCase() === 'E'\n}\n\nexport function pathParser (d, toAbsolute = true) {\n\n  let index = 0\n  let token = ''\n  const parser = {\n    segment: [],\n    inNumber: false,\n    number: '',\n    lastToken: '',\n    inSegment: false,\n    segments: [],\n    pointSeen: false,\n    hasExponent: false,\n    absolute: toAbsolute,\n    p0: new Point(),\n    p: new Point()\n  }\n\n  while ((parser.lastToken = token, token = d.charAt(index++))) {\n    if (!parser.inSegment) {\n      if (startNewSegment(parser, token)) {\n        continue\n      }\n    }\n\n    if (token === '.') {\n      if (parser.pointSeen || parser.hasExponent) {\n        finalizeNumber(parser, false)\n        --index\n        continue\n      }\n      parser.inNumber = true\n      parser.pointSeen = true\n      parser.number += token\n      continue\n    }\n\n    if (!isNaN(parseInt(token))) {\n\n      if (parser.number === '0' || isArcFlag(parser)) {\n        parser.inNumber = true\n        parser.number = token\n        finalizeNumber(parser, true)\n        continue\n      }\n\n      parser.inNumber = true\n      parser.number += token\n      continue\n    }\n\n    if (token === ' ' || token === ',') {\n      if (parser.inNumber) {\n        finalizeNumber(parser, false)\n      }\n      continue\n    }\n\n    if (token === '-') {\n      if (parser.inNumber && !isExponential(parser)) {\n        finalizeNumber(parser, false)\n        --index\n        continue\n      }\n      parser.number += token\n      parser.inNumber = true\n      continue\n    }\n\n    if (token.toUpperCase() === 'E') {\n      parser.number += token\n      parser.hasExponent = true\n      continue\n    }\n\n    if (isPathLetter.test(token)) {\n      if (parser.inNumber) {\n        finalizeNumber(parser, false)\n      } else if (!segmentComplete(parser)) {\n        throw new Error('parser Error')\n      } else {\n        finalizeSegment(parser)\n      }\n      --index\n    }\n  }\n\n  if (parser.inNumber) {\n    finalizeNumber(parser, false)\n  }\n\n  if (parser.inSegment && segmentComplete(parser)) {\n    finalizeSegment(parser)\n  }\n\n  return parser.segments\n\n}\n", "import SVGArray from './SVGArray.js'\nimport parser from '../modules/core/parser.js'\nimport Box from './Box.js'\nimport { pathParser } from '../utils/pathParser.js'\n\nfunction arrayToString (a) {\n  let s = ''\n  for (let i = 0, il = a.length; i < il; i++) {\n    s += a[i][0]\n\n    if (a[i][1] != null) {\n      s += a[i][1]\n\n      if (a[i][2] != null) {\n        s += ' '\n        s += a[i][2]\n\n        if (a[i][3] != null) {\n          s += ' '\n          s += a[i][3]\n          s += ' '\n          s += a[i][4]\n\n          if (a[i][5] != null) {\n            s += ' '\n            s += a[i][5]\n            s += ' '\n            s += a[i][6]\n\n            if (a[i][7] != null) {\n              s += ' '\n              s += a[i][7]\n            }\n          }\n        }\n      }\n    }\n  }\n\n  return s + ' '\n}\n\nexport default class PathArray extends SVGArray {\n  // Get bounding box of path\n  bbox () {\n    parser().path.setAttribute('d', this.toString())\n    return new Box(parser.nodes.path.getBBox())\n  }\n\n  // Move path string\n  move (x, y) {\n    // get bounding box of current situation\n    const box = this.bbox()\n\n    // get relative offset\n    x -= box.x\n    y -= box.y\n\n    if (!isNaN(x) && !isNaN(y)) {\n      // move every point\n      for (let l, i = this.length - 1; i >= 0; i--) {\n        l = this[i][0]\n\n        if (l === 'M' || l === 'L' || l === 'T') {\n          this[i][1] += x\n          this[i][2] += y\n        } else if (l === 'H') {\n          this[i][1] += x\n        } else if (l === 'V') {\n          this[i][1] += y\n        } else if (l === 'C' || l === 'S' || l === 'Q') {\n          this[i][1] += x\n          this[i][2] += y\n          this[i][3] += x\n          this[i][4] += y\n\n          if (l === 'C') {\n            this[i][5] += x\n            this[i][6] += y\n          }\n        } else if (l === 'A') {\n          this[i][6] += x\n          this[i][7] += y\n        }\n      }\n    }\n\n    return this\n  }\n\n  // Absolutize and parse path to array\n  parse (d = 'M0 0') {\n    if (Array.isArray(d)) {\n      d = Array.prototype.concat.apply([], d).toString()\n    }\n\n    return pathParser(d)\n  }\n\n  // Resize path string\n  size (width, height) {\n    // get bounding box of current situation\n    const box = this.bbox()\n    let i, l\n\n    // If the box width or height is 0 then we ignore\n    // transformations on the respective axis\n    box.width = box.width === 0 ? 1 : box.width\n    box.height = box.height === 0 ? 1 : box.height\n\n    // recalculate position of all points according to new size\n    for (i = this.length - 1; i >= 0; i--) {\n      l = this[i][0]\n\n      if (l === 'M' || l === 'L' || l === 'T') {\n        this[i][1] = ((this[i][1] - box.x) * width) / box.width + box.x\n        this[i][2] = ((this[i][2] - box.y) * height) / box.height + box.y\n      } else if (l === 'H') {\n        this[i][1] = ((this[i][1] - box.x) * width) / box.width + box.x\n      } else if (l === 'V') {\n        this[i][1] = ((this[i][1] - box.y) * height) / box.height + box.y\n      } else if (l === 'C' || l === 'S' || l === 'Q') {\n        this[i][1] = ((this[i][1] - box.x) * width) / box.width + box.x\n        this[i][2] = ((this[i][2] - box.y) * height) / box.height + box.y\n        this[i][3] = ((this[i][3] - box.x) * width) / box.width + box.x\n        this[i][4] = ((this[i][4] - box.y) * height) / box.height + box.y\n\n        if (l === 'C') {\n          this[i][5] = ((this[i][5] - box.x) * width) / box.width + box.x\n          this[i][6] = ((this[i][6] - box.y) * height) / box.height + box.y\n        }\n      } else if (l === 'A') {\n        // resize radii\n        this[i][1] = (this[i][1] * width) / box.width\n        this[i][2] = (this[i][2] * height) / box.height\n\n        // move position values\n        this[i][6] = ((this[i][6] - box.x) * width) / box.width + box.x\n        this[i][7] = ((this[i][7] - box.y) * height) / box.height + box.y\n      }\n    }\n\n    return this\n  }\n\n  // Convert array to string\n  toString () {\n    return arrayToString(this)\n  }\n\n}\n", "import { Ease } from './Controller.js'\nimport {\n  delimiter,\n  numberAndUnit,\n  isPathLetter\n} from '../modules/core/regex.js'\nimport { extend } from '../utils/adopter.js'\nimport Color from '../types/Color.js'\nimport PathArray from '../types/PathArray.js'\nimport SVGArray from '../types/SVGArray.js'\nimport SVGNumber from '../types/SVGNumber.js'\n\nconst getClassForType = (value) => {\n  const type = typeof value\n\n  if (type === 'number') {\n    return SVGNumber\n  } else if (type === 'string') {\n    if (Color.isColor(value)) {\n      return Color\n    } else if (delimiter.test(value)) {\n      return isPathLetter.test(value)\n        ? PathArray\n        : SVGArray\n    } else if (numberAndUnit.test(value)) {\n      return SVGNumber\n    } else {\n      return NonMorphable\n    }\n  } else if (morphableTypes.indexOf(value.constructor) > -1) {\n    return value.constructor\n  } else if (Array.isArray(value)) {\n    return SVGArray\n  } else if (type === 'object') {\n    return ObjectBag\n  } else {\n    return NonMorphable\n  }\n}\n\nexport default class Morphable {\n  constructor (stepper) {\n    this._stepper = stepper || new Ease('-')\n\n    this._from = null\n    this._to = null\n    this._type = null\n    this._context = null\n    this._morphObj = null\n  }\n\n  at (pos) {\n    return this._morphObj.morph(this._from, this._to, pos, this._stepper, this._context)\n\n  }\n\n  done () {\n    const complete = this._context\n      .map(this._stepper.done)\n      .reduce(function (last, curr) {\n        return last && curr\n      }, true)\n    return complete\n  }\n\n  from (val) {\n    if (val == null) {\n      return this._from\n    }\n\n    this._from = this._set(val)\n    return this\n  }\n\n  stepper (stepper) {\n    if (stepper == null) return this._stepper\n    this._stepper = stepper\n    return this\n  }\n\n  to (val) {\n    if (val == null) {\n      return this._to\n    }\n\n    this._to = this._set(val)\n    return this\n  }\n\n  type (type) {\n    // getter\n    if (type == null) {\n      return this._type\n    }\n\n    // setter\n    this._type = type\n    return this\n  }\n\n  _set (value) {\n    if (!this._type) {\n      this.type(getClassForType(value))\n    }\n\n    let result = (new this._type(value))\n    if (this._type === Color) {\n      result = this._to\n        ? result[this._to[4]]()\n        : this._from\n          ? result[this._from[4]]()\n          : result\n    }\n\n    if (this._type === ObjectBag) {\n      result = this._to\n        ? result.align(this._to)\n        : this._from\n          ? result.align(this._from)\n          : result\n    }\n\n    result = result.toConsumable()\n\n    this._morphObj = this._morphObj || new this._type()\n    this._context = this._context\n      || Array.apply(null, Array(result.length))\n        .map(Object)\n        .map(function (o) {\n          o.done = true\n          return o\n        })\n    return result\n  }\n\n}\n\nexport class NonMorphable {\n  constructor (...args) {\n    this.init(...args)\n  }\n\n  init (val) {\n    val = Array.isArray(val) ? val[0] : val\n    this.value = val\n    return this\n  }\n\n  toArray () {\n    return [ this.value ]\n  }\n\n  valueOf () {\n    return this.value\n  }\n\n}\n\nexport class TransformBag {\n  constructor (...args) {\n    this.init(...args)\n  }\n\n  init (obj) {\n    if (Array.isArray(obj)) {\n      obj = {\n        scaleX: obj[0],\n        scaleY: obj[1],\n        shear: obj[2],\n        rotate: obj[3],\n        translateX: obj[4],\n        translateY: obj[5],\n        originX: obj[6],\n        originY: obj[7]\n      }\n    }\n\n    Object.assign(this, TransformBag.defaults, obj)\n    return this\n  }\n\n  toArray () {\n    const v = this\n\n    return [\n      v.scaleX,\n      v.scaleY,\n      v.shear,\n      v.rotate,\n      v.translateX,\n      v.translateY,\n      v.originX,\n      v.originY\n    ]\n  }\n}\n\nTransformBag.defaults = {\n  scaleX: 1,\n  scaleY: 1,\n  shear: 0,\n  rotate: 0,\n  translateX: 0,\n  translateY: 0,\n  originX: 0,\n  originY: 0\n}\n\nconst sortByKey = (a, b) => {\n  return (a[0] < b[0] ? -1 : (a[0] > b[0] ? 1 : 0))\n}\n\nexport class ObjectBag {\n  constructor (...args) {\n    this.init(...args)\n  }\n\n  align (other) {\n    const values = this.values\n    for (let i = 0, il = values.length; i < il; ++i) {\n\n      // If the type is the same we only need to check if the color is in the correct format\n      if (values[i + 1] === other[i + 1]) {\n        if (values[i + 1] === Color && other[i + 7] !== values[i + 7]) {\n          const space = other[i + 7]\n          const color = new Color(this.values.splice(i + 3, 5))[space]().toArray()\n          this.values.splice(i + 3, 0, ...color)\n        }\n\n        i += values[i + 2] + 2\n        continue\n      }\n\n      if (!other[i + 1]) {\n        return this\n      }\n\n      // The types differ, so we overwrite the new type with the old one\n      // And initialize it with the types default (e.g. black for color or 0 for number)\n      const defaultObject = new (other[i + 1])().toArray()\n\n      // Than we fix the values array\n      const toDelete = (values[i + 2]) + 3\n\n      values.splice(i, toDelete, other[i], other[i + 1], other[i + 2], ...defaultObject)\n\n      i += values[i + 2] + 2\n    }\n    return this\n  }\n\n  init (objOrArr) {\n    this.values = []\n\n    if (Array.isArray(objOrArr)) {\n      this.values = objOrArr.slice()\n      return\n    }\n\n    objOrArr = objOrArr || {}\n    const entries = []\n\n    for (const i in objOrArr) {\n      const Type = getClassForType(objOrArr[i])\n      const val = new Type(objOrArr[i]).toArray()\n      entries.push([ i, Type, val.length, ...val ])\n    }\n\n    entries.sort(sortByKey)\n\n    this.values = entries.reduce((last, curr) => last.concat(curr), [])\n    return this\n  }\n\n  toArray () {\n    return this.values\n  }\n\n  valueOf () {\n    const obj = {}\n    const arr = this.values\n\n    // for (var i = 0, len = arr.length; i < len; i += 2) {\n    while (arr.length) {\n      const key = arr.shift()\n      const Type = arr.shift()\n      const num = arr.shift()\n      const values = arr.splice(0, num)\n      obj[key] = new Type(values)// .valueOf()\n    }\n\n    return obj\n  }\n\n}\n\nconst morphableTypes = [\n  NonMorphable,\n  TransformBag,\n  ObjectBag\n]\n\nexport function registerMorphableType (type = []) {\n  morphableTypes.push(...[].concat(type))\n}\n\nexport function makeMorphable () {\n  extend(morphableTypes, {\n    to (val) {\n      return new Morphable()\n        .type(this.constructor)\n        .from(this.toArray())// this.valueOf())\n        .to(val)\n    },\n    fromArray (arr) {\n      this.init(arr)\n      return this\n    },\n    toConsumable () {\n      return this.toArray()\n    },\n    morph (from, to, pos, stepper, context) {\n      const mapper = function (i, index) {\n        return stepper.step(i, to[index], pos, context[index], context)\n      }\n\n      return this.fromArray(from.map(mapper))\n    }\n  })\n}\n", "import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\nimport { proportionalSize } from '../utils/utils.js'\nimport { registerMethods } from '../utils/methods.js'\nimport PathArray from '../types/PathArray.js'\nimport Shape from './Shape.js'\n\nexport default class Path extends Shape {\n  // Initialize node\n  constructor (node, attrs = node) {\n    super(nodeOrNew('path', node), attrs)\n  }\n\n  // Get array\n  array () {\n    return this._array || (this._array = new PathArray(this.attr('d')))\n  }\n\n  // Clear array cache\n  clear () {\n    delete this._array\n    return this\n  }\n\n  // Set height of element\n  height (height) {\n    return height == null ? this.bbox().height : this.size(this.bbox().width, height)\n  }\n\n  // Move by left top corner\n  move (x, y) {\n    return this.attr('d', this.array().move(x, y))\n  }\n\n  // Plot new path\n  plot (d) {\n    return (d == null)\n      ? this.array()\n      : this.clear().attr('d', typeof d === 'string' ? d : (this._array = new PathArray(d)))\n  }\n\n  // Set element size to given width and height\n  size (width, height) {\n    const p = proportionalSize(this, width, height)\n    return this.attr('d', this.array().size(p.width, p.height))\n  }\n\n  // Set width of element\n  width (width) {\n    return width == null ? this.bbox().width : this.size(width, this.bbox().height)\n  }\n\n  // Move by left top corner over x-axis\n  x (x) {\n    return x == null ? this.bbox().x : this.move(x, this.bbox().y)\n  }\n\n  // Move by left top corner over y-axis\n  y (y) {\n    return y == null ? this.bbox().y : this.move(this.bbox().x, y)\n  }\n\n}\n\n// Define morphable array\nPath.prototype.MorphArray = PathArray\n\n// Add parent method\nregisterMethods({\n  Container: {\n    // Create a wrapped path element\n    path: wrapWithAttrCheck(function (d) {\n      // make sure plot is called as a setter\n      return this.put(new Path()).plot(d || new PathArray())\n    })\n  }\n})\n\nregister(Path, 'Path')\n", "import { proportionalSize } from '../../utils/utils.js'\nimport PointArray from '../../types/PointArray.js'\n\n// Get array\nexport function array () {\n  return this._array || (this._array = new PointArray(this.attr('points')))\n}\n\n// Clear array cache\nexport function clear () {\n  delete this._array\n  return this\n}\n\n// Move by left top corner\nexport function move (x, y) {\n  return this.attr('points', this.array().move(x, y))\n}\n\n// Plot new path\nexport function plot (p) {\n  return (p == null)\n    ? this.array()\n    : this.clear().attr('points', typeof p === 'string'\n      ? p\n      : (this._array = new PointArray(p)))\n}\n\n// Set element size to given width and height\nexport function size (width, height) {\n  const p = proportionalSize(this, width, height)\n  return this.attr('points', this.array().size(p.width, p.height))\n}\n", "import {\n  extend,\n  nodeOrNew,\n  register,\n  wrapWithAttrCheck\n} from '../utils/adopter.js'\nimport { registerMethods } from '../utils/methods.js'\nimport PointArray from '../types/PointArray.js'\nimport Shape from './Shape.js'\nimport * as pointed from '../modules/core/pointed.js'\nimport * as poly from '../modules/core/poly.js'\n\nexport default class Polygon extends Shape {\n  // Initialize node\n  constructor (node, attrs = node) {\n    super(nodeOrNew('polygon', node), attrs)\n  }\n}\n\nregisterMethods({\n  Container: {\n    // Create a wrapped polygon element\n    polygon: wrapWithAttrCheck(function (p) {\n      // make sure plot is called as a setter\n      return this.put(new Polygon()).plot(p || new PointArray())\n    })\n  }\n})\n\nextend(Polygon, pointed)\nextend(Polygon, poly)\nregister(Polygon, 'Polygon')\n", "import {\n  extend,\n  nodeOrNew,\n  register,\n  wrapWithAttrCheck\n} from '../utils/adopter.js'\nimport { registerMethods } from '../utils/methods.js'\nimport PointArray from '../types/PointArray.js'\nimport Shape from './Shape.js'\nimport * as pointed from '../modules/core/pointed.js'\nimport * as poly from '../modules/core/poly.js'\n\nexport default class Polyline extends Shape {\n  // Initialize node\n  constructor (node, attrs = node) {\n    super(nodeOrNew('polyline', node), attrs)\n  }\n}\n\nregisterMethods({\n  Container: {\n    // Create a wrapped polygon element\n    polyline: wrapWithAttrCheck(function (p) {\n      // make sure plot is called as a setter\n      return this.put(new Polyline()).plot(p || new PointArray())\n    })\n  }\n})\n\nextend(Polyline, pointed)\nextend(Polyline, poly)\nregister(Polyline, 'Polyline')\n", "import {\n  extend,\n  nodeOrNew,\n  register,\n  wrapWithAttrCheck\n} from '../utils/adopter.js'\nimport { registerMethods } from '../utils/methods.js'\nimport { rx, ry } from '../modules/core/circled.js'\nimport Shape from './Shape.js'\n\nexport default class Rect extends Shape {\n  // Initialize node\n  constructor (node, attrs = node) {\n    super(nodeOrNew('rect', node), attrs)\n  }\n}\n\nextend(Rect, { rx, ry })\n\nregisterMethods({\n  Container: {\n    // Create a rect element\n    rect: wrapWithAttrCheck(function (width, height) {\n      return this.put(new Rect()).size(width, height)\n    })\n  }\n})\n\nregister(Rect, 'Rect')\n", "export default class Queue {\n  constructor () {\n    this._first = null\n    this._last = null\n  }\n\n  // Shows us the first item in the list\n  first () {\n    return this._first && this._first.value\n  }\n\n  // Shows us the last item in the list\n  last () {\n    return this._last && this._last.value\n  }\n\n  push (value) {\n    // An item stores an id and the provided value\n    const item = typeof value.next !== 'undefined' ? value : { value: value, next: null, prev: null }\n\n    // Deal with the queue being empty or populated\n    if (this._last) {\n      item.prev = this._last\n      this._last.next = item\n      this._last = item\n    } else {\n      this._last = item\n      this._first = item\n    }\n\n    // Return the current item\n    return item\n  }\n\n  // Removes the item that was returned from the push\n  remove (item) {\n    // Relink the previous item\n    if (item.prev) item.prev.next = item.next\n    if (item.next) item.next.prev = item.prev\n    if (item === this._last) this._last = item.prev\n    if (item === this._first) this._first = item.next\n\n    // Invalidate item\n    item.prev = null\n    item.next = null\n  }\n\n  shift () {\n    // Check if we have a value\n    const remove = this._first\n    if (!remove) return null\n\n    // If we do, remove it and relink things\n    this._first = remove.next\n    if (this._first) this._first.prev = null\n    this._last = this._first ? this._last : null\n    return remove.value\n  }\n\n}\n", "import { globals } from '../utils/window.js'\nimport Queue from './Queue.js'\n\nconst Animator = {\n  nextDraw: null,\n  frames: new Queue(),\n  timeouts: new Queue(),\n  immediates: new Queue(),\n  timer: () => globals.window.performance || globals.window.Date,\n  transforms: [],\n\n  frame (fn) {\n    // Store the node\n    const node = Animator.frames.push({ run: fn })\n\n    // Request an animation frame if we don't have one\n    if (Animator.nextDraw === null) {\n      Animator.nextDraw = globals.window.requestAnimationFrame(Animator._draw)\n    }\n\n    // Return the node so we can remove it easily\n    return node\n  },\n\n  timeout (fn, delay) {\n    delay = delay || 0\n\n    // Work out when the event should fire\n    const time = Animator.timer().now() + delay\n\n    // Add the timeout to the end of the queue\n    const node = Animator.timeouts.push({ run: fn, time: time })\n\n    // Request another animation frame if we need one\n    if (Animator.nextDraw === null) {\n      Animator.nextDraw = globals.window.requestAnimationFrame(Animator._draw)\n    }\n\n    return node\n  },\n\n  immediate (fn) {\n    // Add the immediate fn to the end of the queue\n    const node = Animator.immediates.push(fn)\n    // Request another animation frame if we need one\n    if (Animator.nextDraw === null) {\n      Animator.nextDraw = globals.window.requestAnimationFrame(Animator._draw)\n    }\n\n    return node\n  },\n\n  cancelFrame (node) {\n    node != null && Animator.frames.remove(node)\n  },\n\n  clearTimeout (node) {\n    node != null && Animator.timeouts.remove(node)\n  },\n\n  cancelImmediate (node) {\n    node != null && Animator.immediates.remove(node)\n  },\n\n  _draw (now) {\n    // Run all the timeouts we can run, if they are not ready yet, add them\n    // to the end of the queue immediately! (bad timeouts!!! [sarcasm])\n    let nextTimeout = null\n    const lastTimeout = Animator.timeouts.last()\n    while ((nextTimeout = Animator.timeouts.shift())) {\n      // Run the timeout if its time, or push it to the end\n      if (now >= nextTimeout.time) {\n        nextTimeout.run()\n      } else {\n        Animator.timeouts.push(nextTimeout)\n      }\n\n      // If we hit the last item, we should stop shifting out more items\n      if (nextTimeout === lastTimeout) break\n    }\n\n    // Run all of the animation frames\n    let nextFrame = null\n    const lastFrame = Animator.frames.last()\n    while ((nextFrame !== lastFrame) && (nextFrame = Animator.frames.shift())) {\n      nextFrame.run(now)\n    }\n\n    let nextImmediate = null\n    while ((nextImmediate = Animator.immediates.shift())) {\n      nextImmediate()\n    }\n\n    // If we have remaining timeouts or frames, draw until we don't anymore\n    Animator.nextDraw = Animator.timeouts.first() || Animator.frames.first()\n      ? globals.window.requestAnimationFrame(Animator._draw)\n      : null\n  }\n}\n\nexport default Animator\n", "import { globals } from '../utils/window.js'\nimport { registerMethods } from '../utils/methods.js'\nimport Animator from './Animator.js'\nimport EventTarget from '../types/EventTarget.js'\n\nconst makeSchedule = function (runnerInfo) {\n  const start = runnerInfo.start\n  const duration = runnerInfo.runner.duration()\n  const end = start + duration\n  return { start: start, duration: duration, end: end, runner: runnerInfo.runner }\n}\n\nconst defaultSource = function () {\n  const w = globals.window\n  return (w.performance || w.Date).now()\n}\n\nexport default class Timeline extends EventTarget {\n  // Construct a new timeline on the given element\n  constructor (timeSource = defaultSource) {\n    super()\n\n    this._timeSource = timeSource\n\n    // Store the timing variables\n    this._startTime = 0\n    this._speed = 1.0\n\n    // Determines how long a runner is hold in memory. Can be a dt or true/false\n    this._persist = 0\n\n    // Keep track of the running animations and their starting parameters\n    this._nextFrame = null\n    this._paused = true\n    this._runners = []\n    this._runnerIds = []\n    this._lastRunnerId = -1\n    this._time = 0\n    this._lastSourceTime = 0\n    this._lastStepTime = 0\n\n    // Make sure that step is always called in class context\n    this._step = this._stepFn.bind(this, false)\n    this._stepImmediate = this._stepFn.bind(this, true)\n  }\n\n  active () {\n    return !!this._nextFrame\n  }\n\n  finish () {\n    // Go to end and pause\n    this.time(this.getEndTimeOfTimeline() + 1)\n    return this.pause()\n  }\n\n  // Calculates the end of the timeline\n  getEndTime () {\n    const lastRunnerInfo = this.getLastRunnerInfo()\n    const lastDuration = lastRunnerInfo ? lastRunnerInfo.runner.duration() : 0\n    const lastStartTime = lastRunnerInfo ? lastRunnerInfo.start : this._time\n    return lastStartTime + lastDuration\n  }\n\n  getEndTimeOfTimeline () {\n    const endTimes = this._runners.map((i) => i.start + i.runner.duration())\n    return Math.max(0, ...endTimes)\n  }\n\n  getLastRunnerInfo () {\n    return this.getRunnerInfoById(this._lastRunnerId)\n  }\n\n  getRunnerInfoById (id) {\n    return this._runners[this._runnerIds.indexOf(id)] || null\n  }\n\n  pause () {\n    this._paused = true\n    return this._continue()\n  }\n\n  persist (dtOrForever) {\n    if (dtOrForever == null) return this._persist\n    this._persist = dtOrForever\n    return this\n  }\n\n  play () {\n    // Now make sure we are not paused and continue the animation\n    this._paused = false\n    return this.updateTime()._continue()\n  }\n\n  reverse (yes) {\n    const currentSpeed = this.speed()\n    if (yes == null) return this.speed(-currentSpeed)\n\n    const positive = Math.abs(currentSpeed)\n    return this.speed(yes ? -positive : positive)\n  }\n\n  // schedules a runner on the timeline\n  schedule (runner, delay, when) {\n    if (runner == null) {\n      return this._runners.map(makeSchedule)\n    }\n\n    // The start time for the next animation can either be given explicitly,\n    // derived from the current timeline time or it can be relative to the\n    // last start time to chain animations directly\n\n    let absoluteStartTime = 0\n    const endTime = this.getEndTime()\n    delay = delay || 0\n\n    // Work out when to start the animation\n    if (when == null || when === 'last' || when === 'after') {\n      // Take the last time and increment\n      absoluteStartTime = endTime\n    } else if (when === 'absolute' || when === 'start') {\n      absoluteStartTime = delay\n      delay = 0\n    } else if (when === 'now') {\n      absoluteStartTime = this._time\n    } else if (when === 'relative') {\n      const runnerInfo = this.getRunnerInfoById(runner.id)\n      if (runnerInfo) {\n        absoluteStartTime = runnerInfo.start + delay\n        delay = 0\n      }\n    } else if (when === 'with-last') {\n      const lastRunnerInfo = this.getLastRunnerInfo()\n      const lastStartTime = lastRunnerInfo ? lastRunnerInfo.start : this._time\n      absoluteStartTime = lastStartTime\n    } else {\n      throw new Error('Invalid value for the \"when\" parameter')\n    }\n\n    // Manage runner\n    runner.unschedule()\n    runner.timeline(this)\n\n    const persist = runner.persist()\n    const runnerInfo = {\n      persist: persist === null ? this._persist : persist,\n      start: absoluteStartTime + delay,\n      runner\n    }\n\n    this._lastRunnerId = runner.id\n\n    this._runners.push(runnerInfo)\n    this._runners.sort((a, b) => a.start - b.start)\n    this._runnerIds = this._runners.map(info => info.runner.id)\n\n    this.updateTime()._continue()\n    return this\n  }\n\n  seek (dt) {\n    return this.time(this._time + dt)\n  }\n\n  source (fn) {\n    if (fn == null) return this._timeSource\n    this._timeSource = fn\n    return this\n  }\n\n  speed (speed) {\n    if (speed == null) return this._speed\n    this._speed = speed\n    return this\n  }\n\n  stop () {\n    // Go to start and pause\n    this.time(0)\n    return this.pause()\n  }\n\n  time (time) {\n    if (time == null) return this._time\n    this._time = time\n    return this._continue(true)\n  }\n\n  // Remove the runner from this timeline\n  unschedule (runner) {\n    const index = this._runnerIds.indexOf(runner.id)\n    if (index < 0) return this\n\n    this._runners.splice(index, 1)\n    this._runnerIds.splice(index, 1)\n\n    runner.timeline(null)\n    return this\n  }\n\n  // Makes sure, that after pausing the time doesn't jump\n  updateTime () {\n    if (!this.active()) {\n      this._lastSourceTime = this._timeSource()\n    }\n    return this\n  }\n\n  // Checks if we are running and continues the animation\n  _continue (immediateStep = false) {\n    Animator.cancelFrame(this._nextFrame)\n    this._nextFrame = null\n\n    if (immediateStep) return this._stepImmediate()\n    if (this._paused) return this\n\n    this._nextFrame = Animator.frame(this._step)\n    return this\n  }\n\n  _stepFn (immediateStep = false) {\n    // Get the time delta from the last time and update the time\n    const time = this._timeSource()\n    let dtSource = time - this._lastSourceTime\n\n    if (immediateStep) dtSource = 0\n\n    const dtTime = this._speed * dtSource + (this._time - this._lastStepTime)\n    this._lastSourceTime = time\n\n    // Only update the time if we use the timeSource.\n    // Otherwise use the current time\n    if (!immediateStep) {\n      // Update the time\n      this._time += dtTime\n      this._time = this._time < 0 ? 0 : this._time\n    }\n    this._lastStepTime = this._time\n    this.fire('time', this._time)\n\n    // This is for the case that the timeline was seeked so that the time\n    // is now before the startTime of the runner. That is why we need to set\n    // the runner to position 0\n\n    // FIXME:\n    // However, resetting in insertion order leads to bugs. Considering the case,\n    // where 2 runners change the same attribute but in different times,\n    // resetting both of them will lead to the case where the later defined\n    // runner always wins the reset even if the other runner started earlier\n    // and therefore should win the attribute battle\n    // this can be solved by resetting them backwards\n    for (let k = this._runners.length; k--;) {\n      // Get and run the current runner and ignore it if its inactive\n      const runnerInfo = this._runners[k]\n      const runner = runnerInfo.runner\n\n      // Make sure that we give the actual difference\n      // between runner start time and now\n      const dtToStart = this._time - runnerInfo.start\n\n      // Dont run runner if not started yet\n      // and try to reset it\n      if (dtToStart <= 0) {\n        runner.reset()\n      }\n    }\n\n    // Run all of the runners directly\n    let runnersLeft = false\n    for (let i = 0, len = this._runners.length; i < len; i++) {\n      // Get and run the current runner and ignore it if its inactive\n      const runnerInfo = this._runners[i]\n      const runner = runnerInfo.runner\n      let dt = dtTime\n\n      // Make sure that we give the actual difference\n      // between runner start time and now\n      const dtToStart = this._time - runnerInfo.start\n\n      // Dont run runner if not started yet\n      if (dtToStart <= 0) {\n        runnersLeft = true\n        continue\n      } else if (dtToStart < dt) {\n        // Adjust dt to make sure that animation is on point\n        dt = dtToStart\n      }\n\n      if (!runner.active()) continue\n\n      // If this runner is still going, signal that we need another animation\n      // frame, otherwise, remove the completed runner\n      const finished = runner.step(dt).done\n      if (!finished) {\n        runnersLeft = true\n        // continue\n      } else if (runnerInfo.persist !== true) {\n        // runner is finished. And runner might get removed\n        const endTime = runner.duration() - runner.time() + this._time\n\n        if (endTime + runnerInfo.persist < this._time) {\n          // Delete runner and correct index\n          runner.unschedule()\n          --i\n          --len\n        }\n      }\n    }\n\n    // Basically: we continue when there are runners right from us in time\n    // when -->, and when runners are left from us when <--\n    if ((runnersLeft && !(this._speed < 0 && this._time === 0)) || (this._runnerIds.length && this._speed < 0 && this._time > 0)) {\n      this._continue()\n    } else {\n      this.pause()\n      this.fire('finished')\n    }\n\n    return this\n  }\n\n}\n\nregisterMethods({\n  Element: {\n    timeline: function (timeline) {\n      if (timeline == null) {\n        this._timeline = (this._timeline || new Timeline())\n        return this._timeline\n      } else {\n        this._timeline = timeline\n        return this\n      }\n    }\n  }\n})\n", "import { Controller, Ease, Stepper } from './Controller.js'\nimport { extend, register } from '../utils/adopter.js'\nimport { from, to } from '../modules/core/gradiented.js'\nimport { getOrigin } from '../utils/utils.js'\nimport { noop, timeline } from '../modules/core/defaults.js'\nimport { registerMethods } from '../utils/methods.js'\nimport { rx, ry } from '../modules/core/circled.js'\nimport Animator from './Animator.js'\nimport Box from '../types/Box.js'\nimport EventTarget from '../types/EventTarget.js'\nimport Matrix from '../types/Matrix.js'\nimport Morphable, { TransformBag, ObjectBag } from './Morphable.js'\nimport Point from '../types/Point.js'\nimport SVGNumber from '../types/SVGNumber.js'\nimport Timeline from './Timeline.js'\n\nexport default class Runner extends EventTarget {\n  constructor (options) {\n    super()\n\n    // Store a unique id on the runner, so that we can identify it later\n    this.id = Runner.id++\n\n    // Ensure a default value\n    options = options == null\n      ? timeline.duration\n      : options\n\n    // Ensure that we get a controller\n    options = typeof options === 'function'\n      ? new Controller(options)\n      : options\n\n    // Declare all of the variables\n    this._element = null\n    this._timeline = null\n    this.done = false\n    this._queue = []\n\n    // Work out the stepper and the duration\n    this._duration = typeof options === 'number' && options\n    this._isDeclarative = options instanceof Controller\n    this._stepper = this._isDeclarative ? options : new Ease()\n\n    // We copy the current values from the timeline because they can change\n    this._history = {}\n\n    // Store the state of the runner\n    this.enabled = true\n    this._time = 0\n    this._lastTime = 0\n\n    // At creation, the runner is in reset state\n    this._reseted = true\n\n    // Save transforms applied to this runner\n    this.transforms = new Matrix()\n    this.transformId = 1\n\n    // Looping variables\n    this._haveReversed = false\n    this._reverse = false\n    this._loopsDone = 0\n    this._swing = false\n    this._wait = 0\n    this._times = 1\n\n    this._frameId = null\n\n    // Stores how long a runner is stored after being done\n    this._persist = this._isDeclarative ? true : null\n  }\n\n  static sanitise (duration, delay, when) {\n    // Initialise the default parameters\n    let times = 1\n    let swing = false\n    let wait = 0\n    duration = duration || timeline.duration\n    delay = delay || timeline.delay\n    when = when || 'last'\n\n    // If we have an object, unpack the values\n    if (typeof duration === 'object' && !(duration instanceof Stepper)) {\n      delay = duration.delay || delay\n      when = duration.when || when\n      swing = duration.swing || swing\n      times = duration.times || times\n      wait = duration.wait || wait\n      duration = duration.duration || timeline.duration\n    }\n\n    return {\n      duration: duration,\n      delay: delay,\n      swing: swing,\n      times: times,\n      wait: wait,\n      when: when\n    }\n  }\n\n  active (enabled) {\n    if (enabled == null) return this.enabled\n    this.enabled = enabled\n    return this\n  }\n\n  /*\n  Private Methods\n  ===============\n  Methods that shouldn't be used externally\n  */\n  addTransform (transform, index) {\n    this.transforms.lmultiplyO(transform)\n    return this\n  }\n\n  after (fn) {\n    return this.on('finished', fn)\n  }\n\n  animate (duration, delay, when) {\n    const o = Runner.sanitise(duration, delay, when)\n    const runner = new Runner(o.duration)\n    if (this._timeline) runner.timeline(this._timeline)\n    if (this._element) runner.element(this._element)\n    return runner.loop(o).schedule(o.delay, o.when)\n  }\n\n  clearTransform () {\n    this.transforms = new Matrix()\n    return this\n  }\n\n  // TODO: Keep track of all transformations so that deletion is faster\n  clearTransformsFromQueue () {\n    if (!this.done || !this._timeline || !this._timeline._runnerIds.includes(this.id)) {\n      this._queue = this._queue.filter((item) => {\n        return !item.isTransform\n      })\n    }\n  }\n\n  delay (delay) {\n    return this.animate(0, delay)\n  }\n\n  duration () {\n    return this._times * (this._wait + this._duration) - this._wait\n  }\n\n  during (fn) {\n    return this.queue(null, fn)\n  }\n\n  ease (fn) {\n    this._stepper = new Ease(fn)\n    return this\n  }\n  /*\n  Runner Definitions\n  ==================\n  These methods help us define the runtime behaviour of the Runner or they\n  help us make new runners from the current runner\n  */\n\n  element (element) {\n    if (element == null) return this._element\n    this._element = element\n    element._prepareRunner()\n    return this\n  }\n\n  finish () {\n    return this.step(Infinity)\n  }\n\n  loop (times, swing, wait) {\n    // Deal with the user passing in an object\n    if (typeof times === 'object') {\n      swing = times.swing\n      wait = times.wait\n      times = times.times\n    }\n\n    // Sanitise the values and store them\n    this._times = times || Infinity\n    this._swing = swing || false\n    this._wait = wait || 0\n\n    // Allow true to be passed\n    if (this._times === true) { this._times = Infinity }\n\n    return this\n  }\n\n  loops (p) {\n    const loopDuration = this._duration + this._wait\n    if (p == null) {\n      const loopsDone = Math.floor(this._time / loopDuration)\n      const relativeTime = (this._time - loopsDone * loopDuration)\n      const position = relativeTime / this._duration\n      return Math.min(loopsDone + position, this._times)\n    }\n    const whole = Math.floor(p)\n    const partial = p % 1\n    const time = loopDuration * whole + this._duration * partial\n    return this.time(time)\n  }\n\n  persist (dtOrForever) {\n    if (dtOrForever == null) return this._persist\n    this._persist = dtOrForever\n    return this\n  }\n\n  position (p) {\n    // Get all of the variables we need\n    const x = this._time\n    const d = this._duration\n    const w = this._wait\n    const t = this._times\n    const s = this._swing\n    const r = this._reverse\n    let position\n\n    if (p == null) {\n      /*\n      This function converts a time to a position in the range [0, 1]\n      The full explanation can be found in this desmos demonstration\n        https://www.desmos.com/calculator/u4fbavgche\n      The logic is slightly simplified here because we can use booleans\n      */\n\n      // Figure out the value without thinking about the start or end time\n      const f = function (x) {\n        const swinging = s * Math.floor(x % (2 * (w + d)) / (w + d))\n        const backwards = (swinging && !r) || (!swinging && r)\n        const uncliped = Math.pow(-1, backwards) * (x % (w + d)) / d + backwards\n        const clipped = Math.max(Math.min(uncliped, 1), 0)\n        return clipped\n      }\n\n      // Figure out the value by incorporating the start time\n      const endTime = t * (w + d) - w\n      position = x <= 0\n        ? Math.round(f(1e-5))\n        : x < endTime\n          ? f(x)\n          : Math.round(f(endTime - 1e-5))\n      return position\n    }\n\n    // Work out the loops done and add the position to the loops done\n    const loopsDone = Math.floor(this.loops())\n    const swingForward = s && (loopsDone % 2 === 0)\n    const forwards = (swingForward && !r) || (r && swingForward)\n    position = loopsDone + (forwards ? p : 1 - p)\n    return this.loops(position)\n  }\n\n  progress (p) {\n    if (p == null) {\n      return Math.min(1, this._time / this.duration())\n    }\n    return this.time(p * this.duration())\n  }\n\n  /*\n  Basic Functionality\n  ===================\n  These methods allow us to attach basic functions to the runner directly\n  */\n  queue (initFn, runFn, retargetFn, isTransform) {\n    this._queue.push({\n      initialiser: initFn || noop,\n      runner: runFn || noop,\n      retarget: retargetFn,\n      isTransform: isTransform,\n      initialised: false,\n      finished: false\n    })\n    const timeline = this.timeline()\n    timeline && this.timeline()._continue()\n    return this\n  }\n\n  reset () {\n    if (this._reseted) return this\n    this.time(0)\n    this._reseted = true\n    return this\n  }\n\n  reverse (reverse) {\n    this._reverse = reverse == null ? !this._reverse : reverse\n    return this\n  }\n\n  schedule (timeline, delay, when) {\n    // The user doesn't need to pass a timeline if we already have one\n    if (!(timeline instanceof Timeline)) {\n      when = delay\n      delay = timeline\n      timeline = this.timeline()\n    }\n\n    // If there is no timeline, yell at the user...\n    if (!timeline) {\n      throw Error('Runner cannot be scheduled without timeline')\n    }\n\n    // Schedule the runner on the timeline provided\n    timeline.schedule(this, delay, when)\n    return this\n  }\n\n  step (dt) {\n    // If we are inactive, this stepper just gets skipped\n    if (!this.enabled) return this\n\n    // Update the time and get the new position\n    dt = dt == null ? 16 : dt\n    this._time += dt\n    const position = this.position()\n\n    // Figure out if we need to run the stepper in this frame\n    const running = this._lastPosition !== position && this._time >= 0\n    this._lastPosition = position\n\n    // Figure out if we just started\n    const duration = this.duration()\n    const justStarted = this._lastTime <= 0 && this._time > 0\n    const justFinished = this._lastTime < duration && this._time >= duration\n\n    this._lastTime = this._time\n    if (justStarted) {\n      this.fire('start', this)\n    }\n\n    // Work out if the runner is finished set the done flag here so animations\n    // know, that they are running in the last step (this is good for\n    // transformations which can be merged)\n    const declarative = this._isDeclarative\n    this.done = !declarative && !justFinished && this._time >= duration\n\n    // Runner is running. So its not in reset state anymore\n    this._reseted = false\n\n    let converged = false\n    // Call initialise and the run function\n    if (running || declarative) {\n      this._initialise(running)\n\n      // clear the transforms on this runner so they dont get added again and again\n      this.transforms = new Matrix()\n      converged = this._run(declarative ? dt : position)\n\n      this.fire('step', this)\n    }\n    // correct the done flag here\n    // declarative animations itself know when they converged\n    this.done = this.done || (converged && declarative)\n    if (justFinished) {\n      this.fire('finished', this)\n    }\n    return this\n  }\n\n  /*\n  Runner animation methods\n  ========================\n  Control how the animation plays\n  */\n  time (time) {\n    if (time == null) {\n      return this._time\n    }\n    const dt = time - this._time\n    this.step(dt)\n    return this\n  }\n\n  timeline (timeline) {\n    // check explicitly for undefined so we can set the timeline to null\n    if (typeof timeline === 'undefined') return this._timeline\n    this._timeline = timeline\n    return this\n  }\n\n  unschedule () {\n    const timeline = this.timeline()\n    timeline && timeline.unschedule(this)\n    return this\n  }\n\n  // Run each initialise function in the runner if required\n  _initialise (running) {\n    // If we aren't running, we shouldn't initialise when not declarative\n    if (!running && !this._isDeclarative) return\n\n    // Loop through all of the initialisers\n    for (let i = 0, len = this._queue.length; i < len; ++i) {\n      // Get the current initialiser\n      const current = this._queue[i]\n\n      // Determine whether we need to initialise\n      const needsIt = this._isDeclarative || (!current.initialised && running)\n      running = !current.finished\n\n      // Call the initialiser if we need to\n      if (needsIt && running) {\n        current.initialiser.call(this)\n        current.initialised = true\n      }\n    }\n  }\n\n  // Save a morpher to the morpher list so that we can retarget it later\n  _rememberMorpher (method, morpher) {\n    this._history[method] = {\n      morpher: morpher,\n      caller: this._queue[this._queue.length - 1]\n    }\n\n    // We have to resume the timeline in case a controller\n    // is already done without being ever run\n    // This can happen when e.g. this is done:\n    //    anim = el.animate(new SVG.Spring)\n    // and later\n    //    anim.move(...)\n    if (this._isDeclarative) {\n      const timeline = this.timeline()\n      timeline && timeline.play()\n    }\n  }\n\n  // Try to set the target for a morpher if the morpher exists, otherwise\n  // Run each run function for the position or dt given\n  _run (positionOrDt) {\n    // Run all of the _queue directly\n    let allfinished = true\n    for (let i = 0, len = this._queue.length; i < len; ++i) {\n      // Get the current function to run\n      const current = this._queue[i]\n\n      // Run the function if its not finished, we keep track of the finished\n      // flag for the sake of declarative _queue\n      const converged = current.runner.call(this, positionOrDt)\n      current.finished = current.finished || (converged === true)\n      allfinished = allfinished && current.finished\n    }\n\n    // We report when all of the constructors are finished\n    return allfinished\n  }\n\n  // do nothing and return false\n  _tryRetarget (method, target, extra) {\n    if (this._history[method]) {\n      // if the last method wasn't even initialised, throw it away\n      if (!this._history[method].caller.initialised) {\n        const index = this._queue.indexOf(this._history[method].caller)\n        this._queue.splice(index, 1)\n        return false\n      }\n\n      // for the case of transformations, we use the special retarget function\n      // which has access to the outer scope\n      if (this._history[method].caller.retarget) {\n        this._history[method].caller.retarget.call(this, target, extra)\n        // for everything else a simple morpher change is sufficient\n      } else {\n        this._history[method].morpher.to(target)\n      }\n\n      this._history[method].caller.finished = false\n      const timeline = this.timeline()\n      timeline && timeline.play()\n      return true\n    }\n    return false\n  }\n\n}\n\nRunner.id = 0\n\nexport class FakeRunner {\n  constructor (transforms = new Matrix(), id = -1, done = true) {\n    this.transforms = transforms\n    this.id = id\n    this.done = done\n  }\n\n  clearTransformsFromQueue () { }\n}\n\nextend([ Runner, FakeRunner ], {\n  mergeWith (runner) {\n    return new FakeRunner(\n      runner.transforms.lmultiply(this.transforms),\n      runner.id\n    )\n  }\n})\n\n// FakeRunner.emptyRunner = new FakeRunner()\n\nconst lmultiply = (last, curr) => last.lmultiplyO(curr)\nconst getRunnerTransform = (runner) => runner.transforms\n\nfunction mergeTransforms () {\n  // Find the matrix to apply to the element and apply it\n  const runners = this._transformationRunners.runners\n  const netTransform = runners\n    .map(getRunnerTransform)\n    .reduce(lmultiply, new Matrix())\n\n  this.transform(netTransform)\n\n  this._transformationRunners.merge()\n\n  if (this._transformationRunners.length() === 1) {\n    this._frameId = null\n  }\n}\n\nexport class RunnerArray {\n  constructor () {\n    this.runners = []\n    this.ids = []\n  }\n\n  add (runner) {\n    if (this.runners.includes(runner)) return\n    const id = runner.id + 1\n\n    this.runners.push(runner)\n    this.ids.push(id)\n\n    return this\n  }\n\n  clearBefore (id) {\n    const deleteCnt = this.ids.indexOf(id + 1) || 1\n    this.ids.splice(0, deleteCnt, 0)\n    this.runners.splice(0, deleteCnt, new FakeRunner())\n      .forEach((r) => r.clearTransformsFromQueue())\n    return this\n  }\n\n  edit (id, newRunner) {\n    const index = this.ids.indexOf(id + 1)\n    this.ids.splice(index, 1, id + 1)\n    this.runners.splice(index, 1, newRunner)\n    return this\n  }\n\n  getByID (id) {\n    return this.runners[this.ids.indexOf(id + 1)]\n  }\n\n  length () {\n    return this.ids.length\n  }\n\n  merge () {\n    let lastRunner = null\n    for (let i = 0; i < this.runners.length; ++i) {\n      const runner = this.runners[i]\n\n      const condition = lastRunner\n        && runner.done && lastRunner.done\n        // don't merge runner when persisted on timeline\n        && (!runner._timeline || !runner._timeline._runnerIds.includes(runner.id))\n        && (!lastRunner._timeline || !lastRunner._timeline._runnerIds.includes(lastRunner.id))\n\n      if (condition) {\n        // the +1 happens in the function\n        this.remove(runner.id)\n        const newRunner = runner.mergeWith(lastRunner)\n        this.edit(lastRunner.id, newRunner)\n        lastRunner = newRunner\n        --i\n      } else {\n        lastRunner = runner\n      }\n    }\n\n    return this\n  }\n\n  remove (id) {\n    const index = this.ids.indexOf(id + 1)\n    this.ids.splice(index, 1)\n    this.runners.splice(index, 1)\n    return this\n  }\n\n}\n\nregisterMethods({\n  Element: {\n    animate (duration, delay, when) {\n      const o = Runner.sanitise(duration, delay, when)\n      const timeline = this.timeline()\n      return new Runner(o.duration)\n        .loop(o)\n        .element(this)\n        .timeline(timeline.play())\n        .schedule(o.delay, o.when)\n    },\n\n    delay (by, when) {\n      return this.animate(0, by, when)\n    },\n\n    // this function searches for all runners on the element and deletes the ones\n    // which run before the current one. This is because absolute transformations\n    // overwrite anything anyway so there is no need to waste time computing\n    // other runners\n    _clearTransformRunnersBefore (currentRunner) {\n      this._transformationRunners.clearBefore(currentRunner.id)\n    },\n\n    _currentTransform (current) {\n      return this._transformationRunners.runners\n        // we need the equal sign here to make sure, that also transformations\n        // on the same runner which execute before the current transformation are\n        // taken into account\n        .filter((runner) => runner.id <= current.id)\n        .map(getRunnerTransform)\n        .reduce(lmultiply, new Matrix())\n    },\n\n    _addRunner (runner) {\n      this._transformationRunners.add(runner)\n\n      // Make sure that the runner merge is executed at the very end of\n      // all Animator functions. That is why we use immediate here to execute\n      // the merge right after all frames are run\n      Animator.cancelImmediate(this._frameId)\n      this._frameId = Animator.immediate(mergeTransforms.bind(this))\n    },\n\n    _prepareRunner () {\n      if (this._frameId == null) {\n        this._transformationRunners = new RunnerArray()\n          .add(new FakeRunner(new Matrix(this)))\n      }\n    }\n  }\n})\n\n// Will output the elements from array A that are not in the array B\nconst difference = (a, b) => a.filter(x => !b.includes(x))\n\nextend(Runner, {\n  attr (a, v) {\n    return this.styleAttr('attr', a, v)\n  },\n\n  // Add animatable styles\n  css (s, v) {\n    return this.styleAttr('css', s, v)\n  },\n\n  styleAttr (type, nameOrAttrs, val) {\n    if (typeof nameOrAttrs === 'string') {\n      return this.styleAttr(type, { [nameOrAttrs]: val })\n    }\n\n    let attrs = nameOrAttrs\n    if (this._tryRetarget(type, attrs)) return this\n\n    let morpher = new Morphable(this._stepper).to(attrs)\n    let keys = Object.keys(attrs)\n\n    this.queue(function () {\n      morpher = morpher.from(this.element()[type](keys))\n    }, function (pos) {\n      this.element()[type](morpher.at(pos).valueOf())\n      return morpher.done()\n    }, function (newToAttrs) {\n\n      // Check if any new keys were added\n      const newKeys = Object.keys(newToAttrs)\n      const differences = difference(newKeys, keys)\n\n      // If their are new keys, initialize them and add them to morpher\n      if (differences.length) {\n        // Get the values\n        const addedFromAttrs = this.element()[type](differences)\n\n        // Get the already initialized values\n        const oldFromAttrs = new ObjectBag(morpher.from()).valueOf()\n\n        // Merge old and new\n        Object.assign(oldFromAttrs, addedFromAttrs)\n        morpher.from(oldFromAttrs)\n      }\n\n      // Get the object from the morpher\n      const oldToAttrs = new ObjectBag(morpher.to()).valueOf()\n\n      // Merge in new attributes\n      Object.assign(oldToAttrs, newToAttrs)\n\n      // Change morpher target\n      morpher.to(oldToAttrs)\n\n      // Make sure that we save the work we did so we don't need it to do again\n      keys = newKeys\n      attrs = newToAttrs\n    })\n\n    this._rememberMorpher(type, morpher)\n    return this\n  },\n\n  zoom (level, point) {\n    if (this._tryRetarget('zoom', level, point)) return this\n\n    let morpher = new Morphable(this._stepper).to(new SVGNumber(level))\n\n    this.queue(function () {\n      morpher = morpher.from(this.element().zoom())\n    }, function (pos) {\n      this.element().zoom(morpher.at(pos), point)\n      return morpher.done()\n    }, function (newLevel, newPoint) {\n      point = newPoint\n      morpher.to(newLevel)\n    })\n\n    this._rememberMorpher('zoom', morpher)\n    return this\n  },\n\n  /**\n   ** absolute transformations\n   **/\n\n  //\n  // M v -----|-----(D M v = F v)------|----->  T v\n  //\n  // 1. define the final state (T) and decompose it (once)\n  //    t = [tx, ty, the, lam, sy, sx]\n  // 2. on every frame: pull the current state of all previous transforms\n  //    (M - m can change)\n  //   and then write this as m = [tx0, ty0, the0, lam0, sy0, sx0]\n  // 3. Find the interpolated matrix F(pos) = m + pos * (t - m)\n  //   - Note F(0) = M\n  //   - Note F(1) = T\n  // 4. Now you get the delta matrix as a result: D = F * inv(M)\n\n  transform (transforms, relative, affine) {\n    // If we have a declarative function, we should retarget it if possible\n    relative = transforms.relative || relative\n    if (this._isDeclarative && !relative && this._tryRetarget('transform', transforms)) {\n      return this\n    }\n\n    // Parse the parameters\n    const isMatrix = Matrix.isMatrixLike(transforms)\n    affine = transforms.affine != null\n      ? transforms.affine\n      : (affine != null ? affine : !isMatrix)\n\n    // Create a morpher and set its type\n    const morpher = new Morphable(this._stepper)\n      .type(affine ? TransformBag : Matrix)\n\n    let origin\n    let element\n    let current\n    let currentAngle\n    let startTransform\n\n    function setup () {\n      // make sure element and origin is defined\n      element = element || this.element()\n      origin = origin || getOrigin(transforms, element)\n\n      startTransform = new Matrix(relative ? undefined : element)\n\n      // add the runner to the element so it can merge transformations\n      element._addRunner(this)\n\n      // Deactivate all transforms that have run so far if we are absolute\n      if (!relative) {\n        element._clearTransformRunnersBefore(this)\n      }\n    }\n\n    function run (pos) {\n      // clear all other transforms before this in case something is saved\n      // on this runner. We are absolute. We dont need these!\n      if (!relative) this.clearTransform()\n\n      const { x, y } = new Point(origin).transform(element._currentTransform(this))\n\n      let target = new Matrix({ ...transforms, origin: [ x, y ] })\n      let start = this._isDeclarative && current\n        ? current\n        : startTransform\n\n      if (affine) {\n        target = target.decompose(x, y)\n        start = start.decompose(x, y)\n\n        // Get the current and target angle as it was set\n        const rTarget = target.rotate\n        const rCurrent = start.rotate\n\n        // Figure out the shortest path to rotate directly\n        const possibilities = [ rTarget - 360, rTarget, rTarget + 360 ]\n        const distances = possibilities.map(a => Math.abs(a - rCurrent))\n        const shortest = Math.min(...distances)\n        const index = distances.indexOf(shortest)\n        target.rotate = possibilities[index]\n      }\n\n      if (relative) {\n        // we have to be careful here not to overwrite the rotation\n        // with the rotate method of Matrix\n        if (!isMatrix) {\n          target.rotate = transforms.rotate || 0\n        }\n        if (this._isDeclarative && currentAngle) {\n          start.rotate = currentAngle\n        }\n      }\n\n      morpher.from(start)\n      morpher.to(target)\n\n      const affineParameters = morpher.at(pos)\n      currentAngle = affineParameters.rotate\n      current = new Matrix(affineParameters)\n\n      this.addTransform(current)\n      element._addRunner(this)\n      return morpher.done()\n    }\n\n    function retarget (newTransforms) {\n      // only get a new origin if it changed since the last call\n      if (\n        (newTransforms.origin || 'center').toString()\n        !== (transforms.origin || 'center').toString()\n      ) {\n        origin = getOrigin(newTransforms, element)\n      }\n\n      // overwrite the old transformations with the new ones\n      transforms = { ...newTransforms, origin }\n    }\n\n    this.queue(setup, run, retarget, true)\n    this._isDeclarative && this._rememberMorpher('transform', morpher)\n    return this\n  },\n\n  // Animatable x-axis\n  x (x, relative) {\n    return this._queueNumber('x', x)\n  },\n\n  // Animatable y-axis\n  y (y) {\n    return this._queueNumber('y', y)\n  },\n\n  dx (x = 0) {\n    return this._queueNumberDelta('x', x)\n  },\n\n  dy (y = 0) {\n    return this._queueNumberDelta('y', y)\n  },\n\n  dmove (x, y) {\n    return this.dx(x).dy(y)\n  },\n\n  _queueNumberDelta (method, to) {\n    to = new SVGNumber(to)\n\n    // Try to change the target if we have this method already registered\n    if (this._tryRetarget(method, to)) return this\n\n    // Make a morpher and queue the animation\n    const morpher = new Morphable(this._stepper).to(to)\n    let from = null\n    this.queue(function () {\n      from = this.element()[method]()\n      morpher.from(from)\n      morpher.to(from + to)\n    }, function (pos) {\n      this.element()[method](morpher.at(pos))\n      return morpher.done()\n    }, function (newTo) {\n      morpher.to(from + new SVGNumber(newTo))\n    })\n\n    // Register the morpher so that if it is changed again, we can retarget it\n    this._rememberMorpher(method, morpher)\n    return this\n  },\n\n  _queueObject (method, to) {\n    // Try to change the target if we have this method already registered\n    if (this._tryRetarget(method, to)) return this\n\n    // Make a morpher and queue the animation\n    const morpher = new Morphable(this._stepper).to(to)\n    this.queue(function () {\n      morpher.from(this.element()[method]())\n    }, function (pos) {\n      this.element()[method](morpher.at(pos))\n      return morpher.done()\n    })\n\n    // Register the morpher so that if it is changed again, we can retarget it\n    this._rememberMorpher(method, morpher)\n    return this\n  },\n\n  _queueNumber (method, value) {\n    return this._queueObject(method, new SVGNumber(value))\n  },\n\n  // Animatable center x-axis\n  cx (x) {\n    return this._queueNumber('cx', x)\n  },\n\n  // Animatable center y-axis\n  cy (y) {\n    return this._queueNumber('cy', y)\n  },\n\n  // Add animatable move\n  move (x, y) {\n    return this.x(x).y(y)\n  },\n\n  // Add animatable center\n  center (x, y) {\n    return this.cx(x).cy(y)\n  },\n\n  // Add animatable size\n  size (width, height) {\n    // animate bbox based size for all other elements\n    let box\n\n    if (!width || !height) {\n      box = this._element.bbox()\n    }\n\n    if (!width) {\n      width = box.width / box.height * height\n    }\n\n    if (!height) {\n      height = box.height / box.width * width\n    }\n\n    return this\n      .width(width)\n      .height(height)\n  },\n\n  // Add animatable width\n  width (width) {\n    return this._queueNumber('width', width)\n  },\n\n  // Add animatable height\n  height (height) {\n    return this._queueNumber('height', height)\n  },\n\n  // Add animatable plot\n  plot (a, b, c, d) {\n    // Lines can be plotted with 4 arguments\n    if (arguments.length === 4) {\n      return this.plot([ a, b, c, d ])\n    }\n\n    if (this._tryRetarget('plot', a)) return this\n\n    const morpher = new Morphable(this._stepper)\n      .type(this._element.MorphArray).to(a)\n\n    this.queue(function () {\n      morpher.from(this._element.array())\n    }, function (pos) {\n      this._element.plot(morpher.at(pos))\n      return morpher.done()\n    })\n\n    this._rememberMorpher('plot', morpher)\n    return this\n  },\n\n  // Add leading method\n  leading (value) {\n    return this._queueNumber('leading', value)\n  },\n\n  // Add animatable viewbox\n  viewbox (x, y, width, height) {\n    return this._queueObject('viewbox', new Box(x, y, width, height))\n  },\n\n  update (o) {\n    if (typeof o !== 'object') {\n      return this.update({\n        offset: arguments[0],\n        color: arguments[1],\n        opacity: arguments[2]\n      })\n    }\n\n    if (o.opacity != null) this.attr('stop-opacity', o.opacity)\n    if (o.color != null) this.attr('stop-color', o.color)\n    if (o.offset != null) this.attr('offset', o.offset)\n\n    return this\n  }\n})\n\nextend(Runner, { rx, ry, from, to })\nregister(Runner, 'Runner')\n", "import {\n  adopt,\n  nodeOrNew,\n  register,\n  wrapWithAttrCheck\n} from '../utils/adopter.js'\nimport { svg, svgjs, xlink, xmlns } from '../modules/core/namespaces.js'\nimport { registerMethods } from '../utils/methods.js'\nimport Container from './Container.js'\nimport Defs from './Defs.js'\nimport { globals } from '../utils/window.js'\n\nexport default class Svg extends Container {\n  constructor (node, attrs = node) {\n    super(nodeOrNew('svg', node), attrs)\n    this.namespace()\n  }\n\n  // Creates and returns defs element\n  defs () {\n    if (!this.isRoot()) return this.root().defs()\n\n    return adopt(this.node.querySelector('defs'))\n      || this.put(new Defs())\n  }\n\n  isRoot () {\n    return !this.node.parentNode\n      || (!(this.node.parentNode instanceof globals.window.SVGElement) && this.node.parentNode.nodeName !== '#document-fragment')\n  }\n\n  // Add namespaces\n  namespace () {\n    if (!this.isRoot()) return this.root().namespace()\n    return this\n      .attr({ xmlns: svg, version: '1.1' })\n      .attr('xmlns:xlink', xlink, xmlns)\n      .attr('xmlns:svgjs', svgjs, xmlns)\n  }\n\n  removeNamespace () {\n    return this.attr({ xmlns: null, version: null })\n      .attr('xmlns:xlink', null, xmlns)\n      .attr('xmlns:svgjs', null, xmlns)\n  }\n\n  // Check if this is a root svg\n  // If not, call root() from this element\n  root () {\n    if (this.isRoot()) return this\n    return super.root()\n  }\n\n}\n\nregisterMethods({\n  Container: {\n    // Create nested svg document\n    nested: wrapWithAttrCheck(function () {\n      return this.put(new Svg())\n    })\n  }\n})\n\nregister(Svg, 'Svg', true)\n", "import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\nimport { registerMethods } from '../utils/methods.js'\nimport Container from './Container.js'\n\nexport default class Symbol extends Container {\n  // Initialize node\n  constructor (node, attrs = node) {\n    super(nodeOrNew('symbol', node), attrs)\n  }\n}\n\nregisterMethods({\n  Container: {\n    symbol: wrapWithAttrCheck(function () {\n      return this.put(new Symbol())\n    })\n  }\n})\n\nregister(Symbol, 'Symbol')\n", "import { globals } from '../../utils/window.js'\n\n// Create plain text node\nexport function plain (text) {\n  // clear if build mode is disabled\n  if (this._build === false) {\n    this.clear()\n  }\n\n  // create text node\n  this.node.appendChild(globals.document.createTextNode(text))\n\n  return this\n}\n\n// Get length of text element\nexport function length () {\n  return this.node.getComputedTextLength()\n}\n\n// Move over x-axis\n// Text is moved by its bounding box\n// text-anchor does NOT matter\nexport function x (x, box = this.bbox()) {\n  if (x == null) {\n    return box.x\n  }\n\n  return this.attr('x', this.attr('x') + x - box.x)\n}\n\n// Move over y-axis\nexport function y (y, box = this.bbox()) {\n  if (y == null) {\n    return box.y\n  }\n\n  return this.attr('y', this.attr('y') + y - box.y)\n}\n\nexport function move (x, y, box = this.bbox()) {\n  return this.x(x, box).y(y, box)\n}\n\n// Move center over x-axis\nexport function cx (x, box = this.bbox()) {\n  if (x == null) {\n    return box.cx\n  }\n\n  return this.attr('x', this.attr('x') + x - box.cx)\n}\n\n// Move center over y-axis\nexport function cy (y, box = this.bbox()) {\n  if (y == null) {\n    return box.cy\n  }\n\n  return this.attr('y', this.attr('y') + y - box.cy)\n}\n\nexport function center (x, y, box = this.bbox()) {\n  return this.cx(x, box).cy(y, box)\n}\n\nexport function ax (x) {\n  return this.attr('x', x)\n}\n\nexport function ay (y) {\n  return this.attr('y', y)\n}\n\nexport function amove (x, y) {\n  return this.ax(x).ay(y)\n}\n\n// Enable / disable build mode\nexport function build (build) {\n  this._build = !!build\n  return this\n}\n", "import {\n  adopt,\n  extend,\n  nodeOrNew,\n  register,\n  wrapWithAttrCheck\n} from '../utils/adopter.js'\nimport { registerMethods } from '../utils/methods.js'\nimport SVGNumber from '../types/SVGNumber.js'\nimport Shape from './Shape.js'\nimport { globals } from '../utils/window.js'\nimport * as textable from '../modules/core/textable.js'\n\nexport default class Text extends Shape {\n  // Initialize node\n  constructor (node, attrs = node) {\n    super(nodeOrNew('text', node), attrs)\n\n    this.dom.leading = new SVGNumber(1.3) // store leading value for rebuilding\n    this._rebuild = true // enable automatic updating of dy values\n    this._build = false // disable build mode for adding multiple lines\n  }\n\n  // Set / get leading\n  leading (value) {\n    // act as getter\n    if (value == null) {\n      return this.dom.leading\n    }\n\n    // act as setter\n    this.dom.leading = new SVGNumber(value)\n\n    return this.rebuild()\n  }\n\n  // Rebuild appearance type\n  rebuild (rebuild) {\n    // store new rebuild flag if given\n    if (typeof rebuild === 'boolean') {\n      this._rebuild = rebuild\n    }\n\n    // define position of all lines\n    if (this._rebuild) {\n      const self = this\n      let blankLineOffset = 0\n      const leading = this.dom.leading\n\n      this.each(function (i) {\n        const fontSize = globals.window.getComputedStyle(this.node)\n          .getPropertyValue('font-size')\n\n        const dy = leading * new SVGNumber(fontSize)\n\n        if (this.dom.newLined) {\n          this.attr('x', self.attr('x'))\n\n          if (this.text() === '\\n') {\n            blankLineOffset += dy\n          } else {\n            this.attr('dy', i ? dy + blankLineOffset : 0)\n            blankLineOffset = 0\n          }\n        }\n      })\n\n      this.fire('rebuild')\n    }\n\n    return this\n  }\n\n  // overwrite method from parent to set data properly\n  setData (o) {\n    this.dom = o\n    this.dom.leading = new SVGNumber(o.leading || 1.3)\n    return this\n  }\n\n  // Set the text content\n  text (text) {\n    // act as getter\n    if (text === undefined) {\n      const children = this.node.childNodes\n      let firstLine = 0\n      text = ''\n\n      for (let i = 0, len = children.length; i < len; ++i) {\n        // skip textPaths - they are no lines\n        if (children[i].nodeName === 'textPath') {\n          if (i === 0) firstLine = 1\n          continue\n        }\n\n        // add newline if its not the first child and newLined is set to true\n        if (i !== firstLine && children[i].nodeType !== 3 && adopt(children[i]).dom.newLined === true) {\n          text += '\\n'\n        }\n\n        // add content of this node\n        text += children[i].textContent\n      }\n\n      return text\n    }\n\n    // remove existing content\n    this.clear().build(true)\n\n    if (typeof text === 'function') {\n      // call block\n      text.call(this, this)\n    } else {\n      // store text and make sure text is not blank\n      text = (text + '').split('\\n')\n\n      // build new lines\n      for (let j = 0, jl = text.length; j < jl; j++) {\n        this.newLine(text[j])\n      }\n    }\n\n    // disable build mode and rebuild lines\n    return this.build(false).rebuild()\n  }\n\n}\n\nextend(Text, textable)\n\nregisterMethods({\n  Container: {\n    // Create text element\n    text: wrapWithAttrCheck(function (text = '') {\n      return this.put(new Text()).text(text)\n    }),\n\n    // Create plain text element\n    plain: wrapWithAttrCheck(function (text = '') {\n      return this.put(new Text()).plain(text)\n    })\n  }\n})\n\nregister(Text, 'Text')\n", "import {\n  extend,\n  nodeOrNew,\n  register,\n  wrapWithAttrCheck\n} from '../utils/adopter.js'\nimport { globals } from '../utils/window.js'\nimport { registerMethods } from '../utils/methods.js'\nimport SVGNumber from '../types/SVGNumber.js'\nimport Shape from './Shape.js'\nimport Text from './Text.js'\nimport * as textable from '../modules/core/textable.js'\n\nexport default class Tspan extends Shape {\n  // Initialize node\n  constructor (node, attrs = node) {\n    super(nodeOrNew('tspan', node), attrs)\n    this._build = false // disable build mode for adding multiple lines\n  }\n\n  // Shortcut dx\n  dx (dx) {\n    return this.attr('dx', dx)\n  }\n\n  // Shortcut dy\n  dy (dy) {\n    return this.attr('dy', dy)\n  }\n\n  // Create new line\n  newLine () {\n    // mark new line\n    this.dom.newLined = true\n\n    // fetch parent\n    const text = this.parent()\n\n    // early return in case we are not in a text element\n    if (!(text instanceof Text)) {\n      return this\n    }\n\n    const i = text.index(this)\n\n    const fontSize = globals.window.getComputedStyle(this.node)\n      .getPropertyValue('font-size')\n    const dy = text.dom.leading * new SVGNumber(fontSize)\n\n    // apply new position\n    return this.dy(i ? dy : 0).attr('x', text.x())\n  }\n\n  // Set text content\n  text (text) {\n    if (text == null) return this.node.textContent + (this.dom.newLined ? '\\n' : '')\n\n    if (typeof text === 'function') {\n      this.clear().build(true)\n      text.call(this, this)\n      this.build(false)\n    } else {\n      this.plain(text)\n    }\n\n    return this\n  }\n\n}\n\nextend(Tspan, textable)\n\nregisterMethods({\n  Tspan: {\n    tspan: wrapWithAttrCheck(function (text = '') {\n      const tspan = new Tspan()\n\n      // clear if build mode is disabled\n      if (!this._build) {\n        this.clear()\n      }\n\n      // add new tspan\n      return this.put(tspan).text(text)\n    })\n  },\n  Text: {\n    newLine: function (text = '') {\n      return this.tspan(text).newLine()\n    }\n  }\n})\n\nregister(Tspan, 'Tspan')\n", "import { cx, cy, height, width, x, y } from '../modules/core/circled.js'\nimport {\n  extend,\n  nodeOrNew,\n  register,\n  wrapWithAttrCheck\n} from '../utils/adopter.js'\nimport { registerMethods } from '../utils/methods.js'\nimport SVGNumber from '../types/SVGNumber.js'\nimport Shape from './Shape.js'\n\nexport default class Circle extends Shape {\n  constructor (node, attrs = node) {\n    super(nodeOrNew('circle', node), attrs)\n  }\n\n  radius (r) {\n    return this.attr('r', r)\n  }\n\n  // Radius x value\n  rx (rx) {\n    return this.attr('r', rx)\n  }\n\n  // Alias radius x value\n  ry (ry) {\n    return this.rx(ry)\n  }\n\n  size (size) {\n    return this.radius(new SVGNumber(size).divide(2))\n  }\n}\n\nextend(Circle, { x, y, cx, cy, width, height })\n\nregisterMethods({\n  Container: {\n    // Create circle element\n    circle: wrapWithAttrCheck(function (size = 0) {\n      return this.put(new Circle())\n        .size(size)\n        .move(0, 0)\n    })\n  }\n})\n\nregister(Circle, 'Circle')\n", "import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\nimport { registerMethods } from '../utils/methods.js'\nimport Container from './Container.js'\nimport baseFind from '../modules/core/selector.js'\n\nexport default class ClipPath extends Container {\n  constructor (node, attrs = node) {\n    super(nodeOrNew('clipPath', node), attrs)\n  }\n\n  // Unclip all clipped elements and remove itself\n  remove () {\n    // unclip all targets\n    this.targets().forEach(function (el) {\n      el.unclip()\n    })\n\n    // remove clipPath from parent\n    return super.remove()\n  }\n\n  targets () {\n    return baseFind('svg [clip-path*=' + this.id() + ']')\n  }\n}\n\nregisterMethods({\n  Container: {\n    // Create clipping element\n    clip: wrapWithAttrCheck(function () {\n      return this.defs().put(new ClipPath())\n    })\n  },\n  Element: {\n    // Distribute clipPath to svg element\n    clipper () {\n      return this.reference('clip-path')\n    },\n\n    clipWith (element) {\n      // use given clip or create a new one\n      const clipper = element instanceof ClipPath\n        ? element\n        : this.parent().clip().add(element)\n\n      // apply mask\n      return this.attr('clip-path', 'url(#' + clipper.id() + ')')\n    },\n\n    // Unclip element\n    unclip () {\n      return this.attr('clip-path', null)\n    }\n  }\n})\n\nregister(ClipPath, 'ClipPath')\n", "import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\nimport { registerMethods } from '../utils/methods.js'\nimport Element from './Element.js'\n\nexport default class ForeignObject extends Element {\n  constructor (node, attrs = node) {\n    super(nodeOrNew('foreignObject', node), attrs)\n  }\n}\n\nregisterMethods({\n  Container: {\n    foreignObject: wrapWithAttrCheck(function (width, height) {\n      return this.put(new ForeignObject()).size(width, height)\n    })\n  }\n})\n\nregister(ForeignObject, 'ForeignObject')\n", "import Matrix from '../../types/Matrix.js'\nimport Point from '../../types/Point.js'\nimport { proportionalSize } from '../../utils/utils.js'\n\nexport function dmove (dx, dy) {\n  this.children().forEach((child, i) => {\n\n    let bbox\n\n    // We have to wrap this for elements that dont have a bbox\n    // e.g. title and other descriptive elements\n    try {\n      // Get the childs bbox\n      bbox = child.bbox()\n    } catch (e) {\n      return\n    }\n\n    // Get childs matrix\n    const m = new Matrix(child)\n    // Translate childs matrix by amount and\n    // transform it back into parents space\n    const matrix = m.translate(dx, dy).transform(m.inverse())\n    // Calculate new x and y from old box\n    const p = new Point(bbox.x, bbox.y).transform(matrix)\n    // Move element\n    child.move(p.x, p.y)\n  })\n\n  return this\n}\n\nexport function dx (dx) {\n  return this.dmove(dx, 0)\n}\n\nexport function dy (dy) {\n  return this.dmove(0, dy)\n}\n\nexport function height (height, box = this.bbox()) {\n  if (height == null) return box.height\n  return this.size(box.width, height, box)\n}\n\nexport function move (x = 0, y = 0, box = this.bbox()) {\n  const dx = x - box.x\n  const dy = y - box.y\n\n  return this.dmove(dx, dy)\n}\n\nexport function size (width, height, box = this.bbox()) {\n  const p = proportionalSize(this, width, height, box)\n  const scaleX = p.width / box.width\n  const scaleY = p.height / box.height\n\n  this.children().forEach((child, i) => {\n    const o = new Point(box).transform(new Matrix(child).inverse())\n    child.scale(scaleX, scaleY, o.x, o.y)\n  })\n\n  return this\n}\n\nexport function width (width, box = this.bbox()) {\n  if (width == null) return box.width\n  return this.size(width, box.height, box)\n}\n\nexport function x (x, box = this.bbox()) {\n  if (x == null) return box.x\n  return this.move(x, box.y, box)\n}\n\nexport function y (y, box = this.bbox()) {\n  if (y == null) return box.y\n  return this.move(box.x, y, box)\n}\n", "import { nodeOrNew, register, wrapWithAttrCheck, extend } from '../utils/adopter.js'\nimport { registerMethods } from '../utils/methods.js'\nimport Container from './Container.js'\nimport * as containerGeometry from '../modules/core/containerGeometry.js'\n\nexport default class G extends Container {\n  constructor (node, attrs = node) {\n    super(nodeOrNew('g', node), attrs)\n  }\n}\n\nextend(G, containerGeometry)\n\nregisterMethods({\n  Container: {\n    // Create a group element\n    group: wrapWithAttrCheck(function () {\n      return this.put(new G())\n    })\n  }\n})\n\nregister(G, 'G')\n", "import { nodeOrNew, register, wrapWithAttrCheck, extend } from '../utils/adopter.js'\nimport { registerMethods } from '../utils/methods.js'\nimport { xlink } from '../modules/core/namespaces.js'\nimport Container from './Container.js'\nimport * as containerGeometry from '../modules/core/containerGeometry.js'\n\nexport default class A extends Container {\n  constructor (node, attrs = node) {\n    super(nodeOrNew('a', node), attrs)\n  }\n\n  // Link target attribute\n  target (target) {\n    return this.attr('target', target)\n  }\n\n  // Link url\n  to (url) {\n    return this.attr('href', url, xlink)\n  }\n\n}\n\nextend(A, containerGeometry)\n\nregisterMethods({\n  Container: {\n    // Create a hyperlink element\n    link: wrapWithAttrCheck(function (url) {\n      return this.put(new A()).to(url)\n    })\n  },\n  Element: {\n    unlink () {\n      const link = this.linker()\n\n      if (!link) return this\n\n      const parent = link.parent()\n\n      if (!parent) {\n        return this.remove()\n      }\n\n      const index = parent.index(link)\n      parent.add(this, index)\n\n      link.remove()\n      return this\n    },\n    linkTo (url) {\n      // reuse old link if possible\n      let link = this.linker()\n\n      if (!link) {\n        link = new A()\n        this.wrap(link)\n      }\n\n      if (typeof url === 'function') {\n        url.call(link, link)\n      } else {\n        link.to(url)\n      }\n\n      return this\n    },\n    linker () {\n      const link = this.parent()\n      if (link && link.node.nodeName.toLowerCase() === 'a') {\n        return link\n      }\n\n      return null\n    }\n  }\n})\n\nregister(A, 'A')\n", "import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\nimport { registerMethods } from '../utils/methods.js'\nimport Container from './Container.js'\nimport baseFind from '../modules/core/selector.js'\n\nexport default class Mask extends Container {\n  // Initialize node\n  constructor (node, attrs = node) {\n    super(nodeOrNew('mask', node), attrs)\n  }\n\n  // Unmask all masked elements and remove itself\n  remove () {\n    // unmask all targets\n    this.targets().forEach(function (el) {\n      el.unmask()\n    })\n\n    // remove mask from parent\n    return super.remove()\n  }\n\n  targets () {\n    return baseFind('svg [mask*=' + this.id() + ']')\n  }\n}\n\nregisterMethods({\n  Container: {\n    mask: wrapWithAttrCheck(function () {\n      return this.defs().put(new Mask())\n    })\n  },\n  Element: {\n    // Distribute mask to svg element\n    masker () {\n      return this.reference('mask')\n    },\n\n    maskWith (element) {\n      // use given mask or create a new one\n      const masker = element instanceof Mask\n        ? element\n        : this.parent().mask().add(element)\n\n      // apply mask\n      return this.attr('mask', 'url(#' + masker.id() + ')')\n    },\n\n    // Unmask element\n    unmask () {\n      return this.attr('mask', null)\n    }\n  }\n})\n\nregister(Mask, 'Mask')\n", "import { nodeOrNew, register } from '../utils/adopter.js'\nimport Element from './Element.js'\nimport SVGNumber from '../types/SVGNumber.js'\nimport { registerMethods } from '../utils/methods.js'\n\nexport default class Stop extends Element {\n  constructor (node, attrs = node) {\n    super(nodeOrNew('stop', node), attrs)\n  }\n\n  // add color stops\n  update (o) {\n    if (typeof o === 'number' || o instanceof SVGNumber) {\n      o = {\n        offset: arguments[0],\n        color: arguments[1],\n        opacity: arguments[2]\n      }\n    }\n\n    // set attributes\n    if (o.opacity != null) this.attr('stop-opacity', o.opacity)\n    if (o.color != null) this.attr('stop-color', o.color)\n    if (o.offset != null) this.attr('offset', new SVGNumber(o.offset))\n\n    return this\n  }\n}\n\nregisterMethods({\n  Gradient: {\n    // Add a color stop\n    stop: function (offset, color, opacity) {\n      return this.put(new Stop()).update(offset, color, opacity)\n    }\n  }\n})\n\nregister(Stop, 'Stop')\n", "import { nodeOrNew, register } from '../utils/adopter.js'\nimport { registerMethods } from '../utils/methods.js'\nimport { unCamelCase } from '../utils/utils.js'\nimport Element from './Element.js'\n\nfunction cssRule (selector, rule) {\n  if (!selector) return ''\n  if (!rule) return selector\n\n  let ret = selector + '{'\n\n  for (const i in rule) {\n    ret += unCamelCase(i) + ':' + rule[i] + ';'\n  }\n\n  ret += '}'\n\n  return ret\n}\n\nexport default class Style extends Element {\n  constructor (node, attrs = node) {\n    super(nodeOrNew('style', node), attrs)\n  }\n\n  addText (w = '') {\n    this.node.textContent += w\n    return this\n  }\n\n  font (name, src, params = {}) {\n    return this.rule('@font-face', {\n      fontFamily: name,\n      src: src,\n      ...params\n    })\n  }\n\n  rule (selector, obj) {\n    return this.addText(cssRule(selector, obj))\n  }\n}\n\nregisterMethods('Dom', {\n  style (selector, obj) {\n    return this.put(new Style()).rule(selector, obj)\n  },\n  fontface  (name, src, params) {\n    return this.put(new Style()).font(name, src, params)\n  }\n})\n\nregister(Style, 'Style')\n", "import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\nimport { registerMethods } from '../utils/methods.js'\nimport { xlink } from '../modules/core/namespaces.js'\nimport Path from './Path.js'\nimport PathArray from '../types/PathArray.js'\nimport Text from './Text.js'\nimport baseFind from '../modules/core/selector.js'\n\nexport default class TextPath extends Text {\n  // Initialize node\n  constructor (node, attrs = node) {\n    super(nodeOrNew('textPath', node), attrs)\n  }\n\n  // return the array of the path track element\n  array () {\n    const track = this.track()\n\n    return track ? track.array() : null\n  }\n\n  // Plot path if any\n  plot (d) {\n    const track = this.track()\n    let pathArray = null\n\n    if (track) {\n      pathArray = track.plot(d)\n    }\n\n    return (d == null) ? pathArray : this\n  }\n\n  // Get the path element\n  track () {\n    return this.reference('href')\n  }\n}\n\nregisterMethods({\n  Container: {\n    textPath: wrapWithAttrCheck(function (text, path) {\n      // Convert text to instance if needed\n      if (!(text instanceof Text)) {\n        text = this.text(text)\n      }\n\n      return text.path(path)\n    })\n  },\n  Text: {\n    // Create path for text to run on\n    path: wrapWithAttrCheck(function (track, importNodes = true) {\n      const textPath = new TextPath()\n\n      // if track is a path, reuse it\n      if (!(track instanceof Path)) {\n        // create path element\n        track = this.defs().path(track)\n      }\n\n      // link textPath to path and add content\n      textPath.attr('href', '#' + track, xlink)\n\n      // Transplant all nodes from text to textPath\n      let node\n      if (importNodes) {\n        while ((node = this.node.firstChild)) {\n          textPath.node.appendChild(node)\n        }\n      }\n\n      // add textPath element as child node and return textPath\n      return this.put(textPath)\n    }),\n\n    // Get the textPath children\n    textPath () {\n      return this.findOne('textPath')\n    }\n  },\n  Path: {\n    // creates a textPath from this path\n    text: wrapWithAttrCheck(function (text) {\n      // Convert text to instance if needed\n      if (!(text instanceof Text)) {\n        text = new Text().addTo(this.parent()).text(text)\n      }\n\n      // Create textPath from text and path and return\n      return text.path(this)\n    }),\n\n    targets () {\n      return baseFind('svg textPath').filter((node) => {\n        return (node.attr('href') || '').includes(this.id())\n      })\n\n      // Does not work in IE11. Use when IE support is dropped\n      // return baseFind('svg textPath[*|href*=' + this.id() + ']')\n    }\n  }\n})\n\nTextPath.prototype.MorphArray = PathArray\nregister(TextPath, 'TextPath')\n", "import { nodeOrNew, register, wrapWithAttrCheck } from '../utils/adopter.js'\nimport { registerMethods } from '../utils/methods.js'\nimport { xlink } from '../modules/core/namespaces.js'\nimport Shape from './Shape.js'\n\nexport default class Use extends Shape {\n  constructor (node, attrs = node) {\n    super(nodeOrNew('use', node), attrs)\n  }\n\n  // Use element as a reference\n  use (element, file) {\n    // Set lined element\n    return this.attr('href', (file || '') + '#' + element, xlink)\n  }\n}\n\nregisterMethods({\n  Container: {\n    // Create a use element\n    use: wrapWithAttrCheck(function (element, file) {\n      return this.put(new Use()).use(element, file)\n    })\n  }\n})\n\nregister(Use, 'Use')\n", "/* Optional Modules */\nimport './modules/optional/arrange.js'\nimport './modules/optional/class.js'\nimport './modules/optional/css.js'\nimport './modules/optional/data.js'\nimport './modules/optional/memory.js'\nimport './modules/optional/sugar.js'\nimport './modules/optional/transform.js'\n\nimport { extend, makeInstance } from './utils/adopter.js'\nimport { getMethodNames, getMethodsFor } from './utils/methods.js'\nimport Box from './types/Box.js'\nimport Color from './types/Color.js'\nimport Container from './elements/Container.js'\nimport Defs from './elements/Defs.js'\nimport Dom from './elements/Dom.js'\nimport Element from './elements/Element.js'\nimport Ellipse from './elements/Ellipse.js'\nimport EventTarget from './types/EventTarget.js'\nimport Fragment from './elements/Fragment.js'\nimport Gradient from './elements/Gradient.js'\nimport Image from './elements/Image.js'\nimport Line from './elements/Line.js'\nimport List from './types/List.js'\nimport Marker from './elements/Marker.js'\nimport Matrix from './types/Matrix.js'\nimport Morphable, {\n  NonMorphable,\n  ObjectBag,\n  TransformBag,\n  makeMorphable,\n  registerMorphableType\n} from './animation/Morphable.js'\nimport Path from './elements/Path.js'\nimport PathArray from './types/PathArray.js'\nimport Pattern from './elements/Pattern.js'\nimport PointArray from './types/PointArray.js'\nimport Point from './types/Point.js'\nimport Polygon from './elements/Polygon.js'\nimport Polyline from './elements/Polyline.js'\nimport Rect from './elements/Rect.js'\nimport Runner from './animation/Runner.js'\nimport SVGArray from './types/SVGArray.js'\nimport SVGNumber from './types/SVGNumber.js'\nimport Shape from './elements/Shape.js'\nimport Svg from './elements/Svg.js'\nimport Symbol from './elements/Symbol.js'\nimport Text from './elements/Text.js'\nimport Tspan from './elements/Tspan.js'\nimport * as defaults from './modules/core/defaults.js'\nimport * as utils from './utils/utils.js'\nimport * as namespaces from './modules/core/namespaces.js'\nimport * as regex from './modules/core/regex.js'\n\nexport {\n  Morphable,\n  registerMorphableType,\n  makeMorphable,\n  TransformBag,\n  ObjectBag,\n  NonMorphable\n}\n\nexport { defaults, utils, namespaces, regex }\nexport const SVG = makeInstance\nexport { default as parser } from './modules/core/parser.js'\nexport { default as find } from './modules/core/selector.js'\nexport * from './modules/core/event.js'\nexport * from './utils/adopter.js'\nexport {\n  getWindow,\n  registerWindow,\n  restoreWindow,\n  saveWindow,\n  withWindow\n} from './utils/window.js'\n\n/* Animation Modules */\nexport { default as Animator } from './animation/Animator.js'\nexport { Controller, Ease, PID, Spring, easing } from './animation/Controller.js'\nexport { default as Queue } from './animation/Queue.js'\nexport { default as Runner } from './animation/Runner.js'\nexport { default as Timeline } from './animation/Timeline.js'\n\n/* Types */\nexport { default as Array } from './types/SVGArray.js'\nexport { default as Box } from './types/Box.js'\nexport { default as Color } from './types/Color.js'\nexport { default as EventTarget } from './types/EventTarget.js'\nexport { default as Matrix } from './types/Matrix.js'\nexport { default as Number } from './types/SVGNumber.js'\nexport { default as PathArray } from './types/PathArray.js'\nexport { default as Point } from './types/Point.js'\nexport { default as PointArray } from './types/PointArray.js'\nexport { default as List } from './types/List.js'\n\n/* Elements */\nexport { default as Circle } from './elements/Circle.js'\nexport { default as ClipPath } from './elements/ClipPath.js'\nexport { default as Container } from './elements/Container.js'\nexport { default as Defs } from './elements/Defs.js'\nexport { default as Dom } from './elements/Dom.js'\nexport { default as Element } from './elements/Element.js'\nexport { default as Ellipse } from './elements/Ellipse.js'\nexport { default as ForeignObject } from './elements/ForeignObject.js'\nexport { default as Fragment } from './elements/Fragment.js'\nexport { default as Gradient } from './elements/Gradient.js'\nexport { default as G } from './elements/G.js'\nexport { default as A } from './elements/A.js'\nexport { default as Image } from './elements/Image.js'\nexport { default as Line } from './elements/Line.js'\nexport { default as Marker } from './elements/Marker.js'\nexport { default as Mask } from './elements/Mask.js'\nexport { default as Path } from './elements/Path.js'\nexport { default as Pattern } from './elements/Pattern.js'\nexport { default as Polygon } from './elements/Polygon.js'\nexport { default as Polyline } from './elements/Polyline.js'\nexport { default as Rect } from './elements/Rect.js'\nexport { default as Shape } from './elements/Shape.js'\nexport { default as Stop } from './elements/Stop.js'\nexport { default as Style } from './elements/Style.js'\nexport { default as Svg } from './elements/Svg.js'\nexport { default as Symbol } from './elements/Symbol.js'\nexport { default as Text } from './elements/Text.js'\nexport { default as TextPath } from './elements/TextPath.js'\nexport { default as Tspan } from './elements/Tspan.js'\nexport { default as Use } from './elements/Use.js'\n\nextend([\n  Svg,\n  Symbol,\n  Image,\n  Pattern,\n  Marker\n], getMethodsFor('viewbox'))\n\nextend([\n  Line,\n  Polyline,\n  Polygon,\n  Path\n], getMethodsFor('marker'))\n\nextend(Text, getMethodsFor('Text'))\nextend(Path, getMethodsFor('Path'))\n\nextend(Defs, getMethodsFor('Defs'))\n\nextend([\n  Text,\n  Tspan\n], getMethodsFor('Tspan'))\n\nextend([\n  Rect,\n  Ellipse,\n  Gradient,\n  Runner\n], getMethodsFor('radius'))\n\nextend(EventTarget, getMethodsFor('EventTarget'))\nextend(Dom, getMethodsFor('Dom'))\nextend(Element, getMethodsFor('Element'))\nextend(Shape, getMethodsFor('Shape'))\nextend([ Container, Fragment ], getMethodsFor('Container'))\nextend(Gradient, getMethodsFor('Gradient'))\n\nextend(Runner, getMethodsFor('Runner'))\n\nList.extend(getMethodNames())\n\nregisterMorphableType([\n  SVGNumber,\n  Color,\n  Box,\n  Matrix,\n  SVGArray,\n  PointArray,\n  PathArray,\n  Point\n])\n\nmakeMorphable()\n", "import { SVG } from \"@svgdotjs/svg.js\";\nimport { assert } from \"console\";\n\n// G, Path, Line, Text\nconst _puzzle_decorations = {\n  sudoku: { sudoku: true },\n};\n\nclass PuzzleDraw {\n  base_width: number;\n  mid_width: number;\n  thick_width: number;\n  \n\n  constructor({\n    base_width = 0.005,\n    mid_width = 0.01,\n    thick_width = 0.02\n  }: {\n    base_width?: number;\n    mid_width?: number;\n    thick_width?: number;\n  }) {\n    this.base_width = base_width;\n    this.mid_width = mid_width;\n    this.thick_width = thick_width;\n  }\n\n  fillMissing(puzdef: any) {\n    puzdef = structuredClone(puzdef);\n    let grid = null;\n    const puz = puzdef[\"puzzle\"];\n    if (\"start_grid\" in puz) {\n      grid = puz[\"start_grid\"];\n    }\n\n    if (\"solution\" in puzdef) {\n      grid = puzdef[\"solution_grid\"];\n    }\n\n    if (!(\"height\" in puzdef)) {\n      puzdef[\"height\"] = grid.length;\n    }\n    if (!(\"width\" in puzdef)) {\n      puzdef[\"width\"] = grid[0].length;\n    }\n\n    if (!(\"decorations\" in puzdef)) {\n      puzdef[\"decorations\"] = {};\n    }\n\n    if (puzdef[\"kind\"] && puzdef[\"kind\"] in _puzzle_decorations) {\n      for (const [k, v] of Object.entries(_puzzle_decorations) as [string, any][]) {\n        if (!(k in puzdef[\"decorations\"])) {\n          puzdef[\"decorations\"][k] = v;\n        }\n      }\n    }\n\n    return puzdef;\n  }\n\n  drawPuzzle(puzjson: any) {\n    puzjson = this.fillMissing(puzjson);\n\n    const puzzle = puzjson[\"puzzle\"];\n\n    const out = this.drawGrid(puzzle, puzjson[\"decorations\"]);\n\n    if (\"start_grid\" in puzzle) {\n      console.log(\"start_grid\");\n      this.fillFixedState(out, puzzle[\"start_grid\"]);\n    }\n\n    if (\"state\" in puzjson && \"knowledge_grid\" in puzjson[\"state\"]) {\n      console.log(\"knowledge_grid\");\n      this.fillKnowledge(out, puzjson[\"state\"][\"knowledge_grid\"]);\n    }\n\n    if (\"solution_grid\" in puzzle) {\n      const solutionCpy = structuredClone(puzzle[\"solution_grid\"]);\n      if (\"start_grid\" in puzzle) {\n        for (let i = 0; i < puzzle[\"start_grid\"].length; i++) {\n          for (let j = 0; j < puzzle[\"start_grid\"][i].length; j++) {\n            const cell = puzzle[\"start_grid\"][i][j];\n            if (cell) {\n              solutionCpy[i][j] = null;\n            }\n          }\n        }\n      }\n      this.fillFixedState(out, solutionCpy, { color: \"grey\" });\n    }\n\n    return out;\n  }\n\n  drawGrid(puzzle: any, decorations: any) {\n    const svg = SVG();\n    const topgrp = svg.group();\n    topgrp.transform({ translateX: 25, translateY: 25, scale: 450 });\n\n    const grp = topgrp.group();\n\n    const width = puzzle[\"width\"];\n    const height = puzzle[\"height\"];\n\n    let cages = null;\n    if (\"cages\" in puzzle) {\n      cages = puzzle[\"cages\"];\n    }\n\n    let sudoku_decorations = false;\n    if (\"sudoku\" in decorations) {\n      sudoku_decorations = true;\n    }\n\n    const wstep = 1.0 / width;\n    const hstep = 1.0 / height;\n\n    const colours_list = [\"#FFB3B3\", \"#B3B3FF\", \"#FFFFB3\", \"#B3FFB3\", \"#E6B3FF\"];\n    if (cages) {\n      const colours = Array.from(\n        new Set(\n          cages.flatMap((row: any) => row.filter((cell: any) => cell !== null))\n        )\n      );\n\n      for (let i = 0; i < width; i++) {\n        for (let j = 0; j < height; j++) {\n          if (cages[j][i] !== null) {\n            const col = colours.indexOf(cages[j][i]);\n            const path = `M ${wstep * i} ${hstep * j} H ${wstep * (i + 1)} V ${\n              wstep * (j + 1)\n            } H ${wstep * i} Z`;\n            const p = SVG().path(path).fill(colours_list[col]);\n\n            grp.add(p);\n          }\n        }\n      }\n    }\n\n    for (let i = 0; i < width + 1; i++) {\n      for (let j = 0; j < height; j++) {\n        let stroke = this.base_width;\n        if (i === 0 || i === width) {\n          stroke = this.thick_width;\n        } else {\n          if (sudoku_decorations && i % 3 === 0) {\n            stroke = this.mid_width;\n          }\n          if (cages && cages[j][i] !== cages[j][i - 1]) {\n            stroke = this.thick_width;\n          }\n        }\n        grp.add(\n          SVG()\n            .line(wstep * i, hstep * j, wstep * i, hstep * (j + 1))\n            .stroke({\n              color: \"black\",\n              width: stroke,\n              linecap: \"round\",\n            })\n        );\n      }\n    }\n\n    for (let i = 0; i < width; i++) {\n      for (let j = 0; j < height + 1; j++) {\n        let stroke = this.base_width;\n        if (j === 0 || j === height) {\n          stroke = this.thick_width;\n        } else {\n          if (sudoku_decorations && j % 3 === 0) {\n            stroke = this.mid_width;\n          }\n          if (cages && cages[j][i] !== cages[j - 1][i]) {\n            stroke = this.thick_width;\n          }\n        }\n        grp.add(\n          SVG()\n            .line(wstep * (i + 1), hstep * j, wstep * i, hstep * j)\n            .stroke({\n              color: \"black\",\n              width: stroke,\n            })\n        );\n      }\n    }\n\n    const cellgrp = topgrp.group();\n\n    const cells = Array.from({ length: width }, () =>\n      Array.from({ length: height }, () => SVG().group())\n    );\n\n    for (const row of cells) {\n      for (const c of row) {\n        cellgrp.add(c);\n      }\n    }\n\n    for (let i = 0; i < width; ++i) {\n      for (let j = 0; j < height; ++j) {\n        let itrans = wstep * (i + 0.05);\n        let jtrans = hstep * (j + 0.05);\n        cells[j][i].id(`C_${j}_${i}`);\n        cells[j][i].transform({ translateX: itrans, translateY: jtrans });\n        cells[j][i] = cells[j][i].group();\n        cells[j][i] = cells[j][i].transform({ scale: wstep * 0.9 });\n      }\n    }\n\n    return { svg: svg, cells };\n  }\n\n  fillFixedState(gridobj: any, contents: any, { color = \"black\" } = {}) {\n    const cells = gridobj[\"cells\"];\n    console.log(contents);\n    for (let i = 0; i < contents.length; i++) {\n      for (let j = 0; j < contents[i].length; j++) {\n        const cell = contents[i][j];\n        if (cell) {\n          const s = String(cell);\n          cells[i][j]\n            .text(s)\n            .font({ size: 1 })\n            .transform({ translateX: 0.2, translateY: 0.9 });\n        }\n      }\n    }\n  }\n\n  fillKnowledge(gridobj: any, contents: any, { color = \"black\" } = {}) {\n    const cells = gridobj[\"cells\"];\n    console.log(\"fillKnowledge:\", contents);\n    for (let i = 0; i < contents.length; i++) {\n      for (let j = 0; j < contents[i].length; j++) {\n        const cell = contents[i][j];\n        if (cell) {\n          // Find the right size of grid to fit our values in\n          let sqrtLength = Math.floor(Math.sqrt(cell.length));\n          if (sqrtLength * sqrtLength < cell.length) {\n            sqrtLength += 1;\n          }\n          const littleStep = 0.9 / sqrtLength;\n          for (let a = 0; a < sqrtLength; ++a) {\n            for (let b = 0; b < sqrtLength; ++b) {\n              if (a * sqrtLength + b < cell.length) {\n                cells[i][j]\n                  .text(String(cell[a * sqrtLength + b]))\n                  .font({ size: littleStep })\n                  .transform({\n                    translateX: 0.1 + b * littleStep,\n                    translateY: (a + 1.2) * littleStep,\n                  })\n                  .id(`D_${j}_${i}_${cell[a * sqrtLength + b]}`);\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n\n\n}\n\n\n//window.PuzzleDraw = PuzzleDraw;\n//window.SVG = SVG;\n\nasync function setupPuzzle() {\n  let puzdraw = new PuzzleDraw({});\n\n  let request = await fetch(\"sudoku.json\");\n  console.log(request);\n  let j = await request.json();\n  console.log(j);\n\n  let sudoku = puzdraw.drawPuzzle(j);\n  let puzzle = document.getElementById(\"puzzle\");\n  if (puzzle) {\n    sudoku.svg.addTo(puzzle).size(500, 500);\n  }\n}\n\n\nasync function checkServer() {\n  console.log(\" --- Testing server\");\n  let request = await fetch(\"/greet\");\n  console.log(request);\n  let j = await request.text();\n  console.log(j);\n  console.log(\" --- Server test\")\n\n}\n\nconsole.log(\"-- Step 1\");\nsetupPuzzle();\nconsole.log(\"-- Step 2\");\ncheckServer();\nconsole.log(\"-- Step 3\");\n\nconst quickSolveButton = async () => {\n  const response = await fetch(\"/quickFullSolve\");\n  const text = await response.text();\n  const infoBox = document.getElementById(\"infoBox\");\n  if (infoBox) {\n    infoBox.innerHTML += (text + \"<br>\");\n  }\n};\n\nconst button = document.getElementById(\"quickSolveButton\");\nif (button) {\n  button.addEventListener(\"click\", quickSolveButton);\n}"],
  "mappings": "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",
  "names": ["methods", "names", "registerMethods", "name", "m", "Array", "isArray", "_name", "addMethodNames", "Object", "getOwnPropertyNames", "assign", "getMethodsFor", "getMethodNames", "Set", "_names", "push", "map", "array", "block", "i", "il", "length", "result", "filter", "radians", "d", "Math", "PI", "camelCase", "s", "toLowerCase", "replace", "m", "g", "toUpperCase", "unCamelCase", "capitalize", "charAt", "slice", "proportionalSize", "element", "width", "height", "box", "bbox", "getOrigin", "o", "origin", "ox", "originX", "oy", "originY", "Array", "isArray", "x", "y", "condX", "condY", "includes", "svg", "html", "xmlns", "xlink", "svgjs", "globals", "window", "document", "Base", "elements", "root", "create", "name", "ns", "svg", "globals", "document", "createElementNS", "makeInstance", "element", "isHTML", "adopter", "charAt", "querySelector", "wrapper", "createElement", "innerHTML", "firstChild", "removeChild", "nodeOrNew", "node", "ownerDocument", "defaultView", "Node", "adopt", "instance", "nodeName", "Fragment", "className", "capitalize", "register", "element", "name", "asRoot", "elements", "root", "addMethodNames", "Object", "getOwnPropertyNames", "prototype", "getClass", "did", "eid", "capitalize", "assignNewId", "node", "i", "children", "length", "id", "nodeName", "extend", "modules", "methods", "key", "Array", "isArray", "wrapWithAttrCheck", "fn", "args", "o", "constructor", "apply", "slice", "attr", "siblings", "parent", "position", "index", "next", "prev", "forward", "p", "add", "remove", "backward", "front", "back", "before", "makeInstance", "after", "insertBefore", "insertAfter", "registerMethods", "numberAndUnit", "hex", "rgb", "reference", "transforms", "whitespace", "isHex", "isRgb", "isBlank", "isNumber", "isImage", "delimiter", "isPathLetter", "classes", "attr", "trim", "split", "delimiter", "hasClass", "name", "indexOf", "addClass", "array", "push", "join", "removeClass", "filter", "c", "toggleClass", "registerMethods", "css", "style", "val", "ret", "arguments", "length", "node", "cssText", "el", "forEach", "t", "Array", "isArray", "cased", "camelCase", "isBlank", "test", "show", "hide", "visible", "data", "a", "v", "r", "map", "attributes", "nodeName", "slice", "key", "JSON", "parse", "e", "stringify", "remember", "k", "memory", "forget", "_memory", "i", "sixDigitHex", "hex", "substring", "componentHex", "component", "integer", "Math", "round", "bounded", "max", "min", "toString", "is", "object", "space", "getParameters", "b", "params", "_a", "_b", "g", "_c", "_d", "x", "y", "z", "h", "s", "l", "m", "cieSpace", "hueToRgb", "p", "q", "Color", "constructor", "inputs", "init", "isColor", "color", "isRgb", "random", "mode", "u", "sin", "PI", "pi", "grey", "Error", "isHex", "cmyk", "rgb", "hsl", "isGrey", "delta", "d", "Object", "assign", "values", "noWhitespace", "replace", "whitespace", "exec", "parseInt", "hexParse", "components", "lab", "xyz", "lch", "sqrt", "atan2", "dToR", "cos", "yL", "xL", "zL", "ct", "mx", "nm", "rU", "gU", "bU", "pow", "bd", "toArray", "toHex", "_clamped", "toRgb", "rV", "gV", "bV", "string", "r255", "g255", "b255", "rL", "gL", "bL", "xU", "yU", "zU", "format", "Point", "args", "clone", "base", "source", "transform", "transformO", "Matrix", "isMatrixLike", "f", "point", "screenCTM", "inverseO", "closeEnough", "threshold", "abs", "formatTransforms", "o", "flipBoth", "flip", "flipX", "flipY", "skewX", "skew", "isFinite", "skewY", "scaleX", "scale", "scaleY", "shear", "theta", "rotate", "origin", "around", "ox", "originX", "oy", "originY", "position", "px", "positionX", "NaN", "py", "positionY", "translate", "tx", "translateX", "ty", "translateY", "relative", "rx", "relativeX", "ry", "relativeY", "fromArray", "matrixMultiply", "cx", "cy", "matrix", "aroundO", "dx", "dy", "translateO", "lmultiplyO", "decompose", "determinant", "ccw", "sx", "thetaRad", "st", "lam", "sy", "equals", "other", "comp", "axis", "flipO", "scaleO", "Element", "matrixify", "parseFloat", "call", "inverse", "det", "na", "nb", "nc", "nd", "ne", "nf", "lmultiply", "multiply", "multiplyO", "rotateO", "radians", "shearO", "lx", "skewO", "tan", "ly", "current", "transformer", "valueOf", "ctm", "getCTM", "isRoot", "rect", "getScreenCTM", "remove", "register", "parser", "nodes", "svg", "makeInstance", "size", "path", "parentNode", "globals", "document", "body", "documentElement", "addTo", "isNulledBox", "box", "width", "height", "domContains", "contains", "Box", "addOffset", "window", "pageXOffset", "pageYOffset", "left", "top", "w", "x2", "y2", "isNulled", "merge", "xMin", "Infinity", "xMax", "yMin", "yMax", "pts", "getBox", "getBBoxFn", "retry", "bbox", "getBBox", "rbox", "getRBox", "getBoundingClientRect", "inside", "viewbox", "zoom", "level", "clientWidth", "clientHeight", "zoomX", "zoomY", "zoomAmount", "Number", "MAX_SAFE_INTEGER", "List", "arr", "extend", "each", "fnOrMethodName", "prototype", "concat", "apply", "reserved", "methods", "reduce", "obj", "includes", "attrs", "baseFind", "query", "parent", "querySelectorAll", "adopt", "find", "findOne", "querySelector", "listenerId", "windowEvents", "getEvents", "instance", "n", "getEventHolder", "events", "getEventTarget", "clearEvents", "on", "listener", "binding", "options", "bind", "bag", "_svgjsListenerId", "event", "ev", "ns", "addEventListener", "off", "namespace", "removeEventListener", "dispatch", "Event", "dispatchEvent", "CustomEvent", "detail", "cancelable", "EventTarget", "Base", "type", "j", "defaultPrevented", "fire", "noop", "timeline", "duration", "ease", "delay", "fill", "stroke", "opacity", "offset", "SVGArray", "Array", "constructor", "args", "init", "clone", "arr", "length", "push", "parse", "array", "trim", "split", "delimiter", "map", "parseFloat", "toArray", "prototype", "concat", "apply", "toSet", "Set", "toString", "join", "valueOf", "ret", "SVGNumber", "convert", "unit", "value", "divide", "number", "isArray", "isNaN", "isFinite", "match", "numberAndUnit", "minus", "plus", "times", "toJSON", "hooks", "registerAttrHook", "fn", "attr", "val", "ns", "node", "attributes", "nodeName", "isNumber", "test", "nodeValue", "reduce", "last", "curr", "Object", "removeAttribute", "getAttribute", "defaults", "_val", "hook", "Color", "isColor", "leading", "setAttributeNS", "setAttribute", "rebuild", "Dom", "EventTarget", "attrs", "type", "add", "element", "i", "makeInstance", "removeNamespace", "globals", "window", "SVGElement", "appendChild", "childNodes", "insertBefore", "addTo", "parent", "put", "children", "List", "adopt", "clear", "hasChildNodes", "removeChild", "lastChild", "deep", "assignNewIds", "writeDataToDom", "nodeClone", "cloneNode", "assignNewId", "each", "block", "il", "create", "first", "firstChild", "get", "getEventHolder", "getEventTarget", "has", "index", "html", "htmlOrFn", "outerHTML", "xml", "id", "eid", "slice", "call", "indexOf", "matches", "selector", "el", "matcher", "matchesSelector", "msMatchesSelector", "mozMatchesSelector", "webkitMatchesSelector", "oMatchesSelector", "parentNode", "putIn", "remove", "removeElement", "replace", "replaceChild", "round", "precision", "factor", "Math", "svg", "svgOrFn", "outerSVG", "words", "text", "textContent", "wrap", "position", "xmlOrFn", "outerXML", "current", "result", "_this", "innerHTML", "well", "fragment", "document", "createDocumentFragment", "len", "firstElementChild", "extend", "find", "findOne", "register", "Element", "dom", "instance", "hasAttribute", "setData", "JSON", "center", "x", "y", "cx", "cy", "width", "height", "defs", "root", "dmove", "dx", "dy", "move", "parents", "until", "isSelector", "reference", "m", "p", "getClass", "o", "size", "proportionalSize", "keys", "stringify", "bbox", "rbox", "inside", "point", "ctm", "screenCTM", "sugar", "stroke", "fill", "prefix", "t", "a", "forEach", "extension", "isRgb", "registerMethods", "matrix", "mat", "b", "c", "d", "e", "f", "Matrix", "rotate", "angle", "transform", "ox", "oy", "skew", "arguments", "shear", "lam", "scale", "translate", "relative", "flip", "direction", "origin", "opacity", "radius", "_element", "rx", "ry", "getTotalLength", "pointAt", "Point", "getPointAtLength", "font", "v", "methods", "event", "off", "on", "untransform", "matrixify", "transforms", "str", "kv", "reverse", "lmultiply", "fromArray", "toParent", "pCtm", "inverse", "multiply", "toRoot", "decomposed", "decompose", "isMatrixLike", "getOrigin", "cleanRelative", "Container", "flatten", "ungroup", "Defs", "nodeOrNew", "Shape", "Ellipse", "circled", "ellipse", "wrapWithAttrCheck", "Fragment", "wrapper", "from", "fx", "fy", "x1", "y1", "to", "x2", "y2", "Gradient", "Box", "targets", "baseFind", "url", "update", "gradiented", "gradient", "Pattern", "pattern", "patternUnits", "Image", "load", "callback", "img", "src", "xlink", "isImage", "image", "source", "PointArray", "maxX", "maxY", "minX", "Infinity", "minY", "max", "min", "box", "points", "pop", "toLine", "transformO", "MorphArray", "Line", "plot", "pointed", "line", "Marker", "orient", "ref", "marker", "viewbox", "makeSetterGetter", "k", "easing", "pos", "cos", "PI", "sin", "bezier", "steps", "stepPosition", "jumps", "beforeFlag", "step", "floor", "jumping", "Stepper", "done", "Ease", "timeline", "ease", "Controller", "stepper", "target", "dt", "recalculate", "duration", "_duration", "overshoot", "_overshoot", "eps", "pi", "os", "log", "zeta", "sqrt", "wn", "Spring", "velocity", "acceleration", "newPosition", "abs", "PID", "windup", "integral", "error", "_windup", "P", "I", "D", "segmentParameters", "M", "L", "H", "V", "C", "S", "Q", "T", "A", "Z", "pathHandlers", "p0", "mlhvqtcsaz", "j", "jl", "toUpperCase", "makeAbsolut", "parser", "command", "segment", "segmentComplete", "startNewSegment", "token", "inNumber", "finalizeNumber", "pathLetter", "isPathLetter", "lastCommand", "small", "toLowerCase", "isSmall", "inSegment", "Error", "pointSeen", "hasExponent", "finalizeSegment", "absolute", "segments", "isArcFlag", "isArc", "isExponential", "lastToken", "pathParser", "toAbsolute", "charAt", "parseInt", "arrayToString", "s", "PathArray", "path", "nodes", "getBBox", "l", "getClassForType", "NonMorphable", "morphableTypes", "ObjectBag", "Morphable", "_stepper", "_from", "_to", "_type", "_context", "_morphObj", "at", "morph", "complete", "_set", "align", "toConsumable", "TransformBag", "obj", "scaleX", "scaleY", "translateX", "translateY", "originX", "originY", "assign", "sortByKey", "other", "values", "space", "color", "splice", "defaultObject", "toDelete", "objOrArr", "entries", "Type", "sort", "key", "shift", "num", "registerMorphableType", "makeMorphable", "context", "mapper", "Path", "_array", "Polygon", "polygon", "poly", "Polyline", "polyline", "Rect", "rect", "Queue", "_first", "_last", "item", "next", "prev", "Animator", "nextDraw", "frames", "timeouts", "immediates", "timer", "performance", "Date", "frame", "run", "requestAnimationFrame", "_draw", "timeout", "delay", "time", "now", "immediate", "cancelFrame", "clearTimeout", "cancelImmediate", "nextTimeout", "lastTimeout", "nextFrame", "lastFrame", "nextImmediate", "makeSchedule", "runnerInfo", "start", "runner", "end", "defaultSource", "w", "Timeline", "timeSource", "_timeSource", "_startTime", "_speed", "_persist", "_nextFrame", "_paused", "_runners", "_runnerIds", "_lastRunnerId", "_time", "_lastSourceTime", "_lastStepTime", "_step", "_stepFn", "bind", "_stepImmediate", "active", "finish", "getEndTimeOfTimeline", "pause", "getEndTime", "lastRunnerInfo", "getLastRunnerInfo", "lastDuration", "lastStartTime", "endTimes", "getRunnerInfoById", "_continue", "persist", "dtOrForever", "play", "updateTime", "yes", "currentSpeed", "speed", "positive", "schedule", "when", "absoluteStartTime", "endTime", "unschedule", "info", "seek", "stop", "immediateStep", "dtSource", "dtTime", "fire", "dtToStart", "reset", "runnersLeft", "finished", "_timeline", "Runner", "options", "_queue", "_isDeclarative", "_history", "enabled", "_lastTime", "_reseted", "transformId", "_haveReversed", "_reverse", "_loopsDone", "_swing", "_wait", "_times", "_frameId", "sanitise", "swing", "wait", "addTransform", "lmultiplyO", "after", "animate", "loop", "clearTransform", "clearTransformsFromQueue", "includes", "filter", "isTransform", "during", "queue", "_prepareRunner", "loops", "loopDuration", "loopsDone", "relativeTime", "whole", "partial", "r", "swinging", "backwards", "uncliped", "pow", "clipped", "swingForward", "forwards", "progress", "initFn", "runFn", "retargetFn", "initialiser", "noop", "retarget", "initialised", "running", "_lastPosition", "justStarted", "justFinished", "declarative", "converged", "_initialise", "_run", "needsIt", "_rememberMorpher", "method", "morpher", "caller", "positionOrDt", "allfinished", "_tryRetarget", "extra", "FakeRunner", "mergeWith", "getRunnerTransform", "mergeTransforms", "runners", "_transformationRunners", "netTransform", "merge", "RunnerArray", "ids", "clearBefore", "deleteCnt", "edit", "newRunner", "getByID", "lastRunner", "condition", "by", "_clearTransformRunnersBefore", "currentRunner", "_currentTransform", "_addRunner", "difference", "styleAttr", "css", "nameOrAttrs", "newToAttrs", "newKeys", "differences", "addedFromAttrs", "oldFromAttrs", "oldToAttrs", "zoom", "level", "newLevel", "newPoint", "affine", "isMatrix", "currentAngle", "startTransform", "setup", "undefined", "rTarget", "rCurrent", "possibilities", "distances", "shortest", "affineParameters", "newTransforms", "_queueNumber", "_queueNumberDelta", "newTo", "_queueObject", "offset", "Svg", "namespace", "isRoot", "querySelector", "xmlns", "version", "svgjs", "nested", "Symbol", "symbol", "plain", "_build", "createTextNode", "getComputedTextLength", "ax", "ay", "amove", "build", "Text", "_rebuild", "self", "blankLineOffset", "fontSize", "getComputedStyle", "getPropertyValue", "newLined", "firstLine", "nodeType", "newLine", "textable", "Tspan", "tspan", "Circle", "circle", "ClipPath", "unclip", "clip", "clipper", "clipWith", "ForeignObject", "foreignObject", "child", "G", "containerGeometry", "group", "link", "unlink", "linker", "linkTo", "Mask", "unmask", "mask", "masker", "maskWith", "Stop", "cssRule", "rule", "unCamelCase", "Style", "addText", "name", "params", "fontFamily", "style", "fontface", "TextPath", "track", "pathArray", "textPath", "importNodes", "Use", "use", "file", "SVG", "getMethodsFor", "getMethodNames", "svg", "width", "height"]
}

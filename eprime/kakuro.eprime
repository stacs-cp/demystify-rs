language ESSENCE' 1.0

given width,height : int
letting X be int(1..width)
letting Y be int(1..height)

given blanks : matrix indexed by [X,Y] of int(0..1)
given vertsums: matrix indexed by [X,Y] of int
given horzsums: matrix indexed by [X,Y] of int

where forAll x: X. forAll y : Y. vertsums[x,y] != 0 -> blanks[x+1,y] = 1
where forAll x: X. forAll y : Y. horzsums[x,y] != 0 -> blanks[x,y+1] = 1

$#VAR grid
find grid : matrix indexed by [X,Y] of int(0..9)

$#CON vertalldiff "The vertical block starting at {{[index[0], index[1],index[2],index[3]]}} is all different"
find vertalldiff: matrix indexed by [X,X,X,Y] of bool
$find vertalldiff: matrix indexed by [X,Y] of bool

$#CON vertsum "The vertical block starting at {{[index[0], index[1]]}} sums to {{params['vertsums'][index[0]][index[1]]}}"
find vertsum: matrix indexed by [X,Y] of bool

$#CON horzalldiff "The horizontal block starting at {{[index[0], index[1],index[2],index[3]]}} is all different"
find horzalldiff: matrix indexed by [X,Y,Y,Y] of bool

$#CON horzsum "The horizontal block starting at {{[index[0], index[1]]}} sums to {{params['horzsums'][index[0]][index[1]]}}"
find horzsum: matrix indexed by [X,Y] of bool


such that
forAll x : X. forAll y : Y. blanks[x,y] = 0 <-> grid[x,y] = 0,


$ Bad attempt of AllDiff decomp by Joan and RuthH. We cannot find a sensible way to define the 'stopping point' for i.
$forAll hx : X.
$    forAll hy : Y.
$        forAll d : int(1..9).
$            vertsums[hx,hy] != 0 ->
$                exists i : int(hx+1..width).
$                    (forAll q : int(hx+1..i). blanks[q,hy]=1) /\
$                        (forAll i1,i2 : int(hx+1..i).
$                            i1 < i2 ->
$                                vertalldiff[hx,hy,i1,i2,d] -> !(grid[i1,hy] = d /\ grid[i2,hy]=d)),

forAll x: X.  forAll y : Y. forAll x2: int(x+1..width). forAll x3: int(x2+1..width).
vertalldiff[x,x2,x3,y] ->
( (vertsums[x,y] != 0 /\ and([ blanks[i,y] = 1 | i : int(x+1..x3)]) ) -> (grid[x2,y] != grid[x3,y]) ),


$ forAll x: X. forAll y : Y.
$ vertalldiff[x,y] ->
$ (vertsums[x,y] != 0 ->
$ ( allDiff([ grid[i,y] | i : int(x+1..width), forAll q:int(x+1..i). blanks[q,y]=1]) )),


forAll x: X. forAll y : Y.
vertsum[x,y] -> (
vertsums[x,y] != 0 ->
( vertsums[x,y] = sum([ grid[i,y] | i : int(x+1..width), forAll q:int(x+1..i). blanks[q,y]=1]) )),


forAll x: X.  forAll y : Y. forAll y2: int(y+1..height). forAll y3: int(y2+1..height).
horzalldiff[x,y,y2,y3] ->
( (horzsums[x,y] != 0 /\ and([ blanks[x,j] = 1 | j : int(y+1..y3)]) ) -> (grid[x,y2] != grid[x,y3]) ),

$forAll x: X. forAll y : Y.
$horzalldiff[x,y] ->
$(horzsums[x,y] != 0 ->
$( allDiff([ grid[x,j] | j : int(y+1..height), forAll q:int(y+1..j). blanks[x,q]=1]) )),


forAll x: X. forAll y : Y.
horzsum[x,y] -> (
horzsums[x,y] != 0 ->
( horzsums[x,y] = sum([ grid[x,j] | j : int(y+1..height), forAll q:int(y+1..j). blanks[x,q]=1]) )),

$and([and(flatten(vertalldiff)),and(flatten(horzalldiff)),and(flatten(vertsum)),and(flatten(horzsum))]),

true